v8-version,7,9,218,0,0
shared-library,/home/yankun/workspace/rust/deno/target/debug/deno,0x563e7043c000,0x563e74820000,0
shared-library,/lib/x86_64-linux-gnu/libm-2.27.so,0x7f48107b6000,0x7f4810953000,0
shared-library,/lib/x86_64-linux-gnu/libc-2.27.so,0x7f4810b54000,0x7f4810d3b000,0
shared-library,/lib/x86_64-linux-gnu/libgcc_s.so.1,0x7f4810f45000,0x7f4810f5c000,0
shared-library,/lib/x86_64-linux-gnu/libpthread-2.27.so,0x7f481115d000,0x7f4811177000,0
shared-library,/lib/x86_64-linux-gnu/librt.so,0x7f481137c000,0x7f4811383000,0
shared-library,/lib/x86_64-linux-gnu/libdl-2.27.so,0x7f4811584000,0x7f4811587000,0
shared-library,/lib/x86_64-linux-gnu/ld-2.27.so,0x7f4811788000,0x7f48117af000,0
shared-library,[vdso],0x7fff303b9000,0x7fff303bb000,0
shared-library,[vsyscall],0xffffffffff600000,0xffffffffff601000,0
profiler,begin,1000
tick,0x7f4810c63d19,553,0,0x0,6
tick,0x563e71cfcb49,1608,0,0x0,6
tick,0x563e71c934f9,2686,0,0x0,6
code-creation,Builtin,3,3294,0x563e7258cce0,1690,RecordWrite
code-creation,Builtin,3,3303,0x563e7258d380,521,EphemeronKeyBarrier
code-creation,Builtin,3,3308,0x563e7258d5a0,487,AdaptorWithBuiltinExitFrame
code-creation,Builtin,3,3314,0x563e7258d7a0,289,ArgumentsAdaptorTrampoline
code-creation,Builtin,3,3319,0x563e7258d8e0,293,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,3,3325,0x563e7258da20,368,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,3,3331,0x563e7258dba0,393,CallFunction_ReceiverIsAny
code-creation,Builtin,3,3336,0x563e7258dd40,181,CallBoundFunction
code-creation,Builtin,3,3341,0x563e7258de00,128,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,3,3347,0x563e7258dea0,128,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,3,3352,0x563e7258df40,128,Call_ReceiverIsAny
code-creation,Builtin,3,3357,0x563e7258dfe0,1696,CallProxy
code-creation,Builtin,3,3362,0x563e7258e6a0,149,CallVarargs
code-creation,Builtin,3,3367,0x563e7258e740,3042,CallWithSpread
code-creation,Builtin,3,3372,0x563e7258f340,3528,CallWithArrayLike
code-creation,Builtin,3,3377,0x563e72590120,100,CallForwardVarargs
code-creation,Builtin,3,3382,0x563e725901a0,100,CallFunctionForwardVarargs
code-creation,Builtin,3,3387,0x563e72590220,1167,CallFunctionTemplate_CheckAccess
code-creation,Builtin,3,3393,0x563e725906c0,2506,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,3,3399,0x563e725910a0,2764,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,3,3405,0x563e72591b80,128,ConstructFunction
code-creation,Builtin,3,3411,0x563e72591c20,231,ConstructBoundFunction
code-creation,Builtin,3,3416,0x563e72591d20,51,ConstructedNonConstructable
code-creation,Builtin,3,3421,0x563e72591d60,86,Construct
code-creation,Builtin,3,3426,0x563e72591dc0,149,ConstructVarargs
code-creation,Builtin,3,3431,0x563e72591e60,3156,ConstructWithSpread
code-creation,Builtin,3,3436,0x563e72592ac0,3966,ConstructWithArrayLike
code-creation,Builtin,3,3441,0x563e72593a40,139,ConstructForwardVarargs
code-creation,Builtin,3,3447,0x563e72593ae0,139,ConstructFunctionForwardVarargs
code-creation,Builtin,3,3452,0x563e72593b80,352,JSConstructStubGeneric
code-creation,Builtin,3,3457,0x563e72593d00,277,JSBuiltinsConstructStub
code-creation,Builtin,3,3463,0x563e72593e20,3310,FastNewObject
code-creation,Builtin,3,3467,0x563e72594b20,1275,FastNewClosure
code-creation,Builtin,3,3472,0x563e72595020,449,FastNewFunctionContextEval
code-creation,Builtin,3,3478,0x563e72595200,449,FastNewFunctionContextFunction
code-creation,Builtin,3,3483,0x563e725953e0,1254,CreateRegExpLiteral
code-creation,Builtin,3,3488,0x563e725958e0,1791,CreateEmptyArrayLiteral
code-creation,Builtin,3,3493,0x563e72595fe0,4316,CreateShallowArrayLiteral
code-creation,Builtin,3,3499,0x563e725970c0,8146,CreateShallowObjectLiteral
code-creation,Builtin,3,3504,0x563e725990a0,1966,ConstructProxy
code-creation,Builtin,3,3509,0x563e72599860,188,JSEntry
code-creation,Builtin,3,3514,0x563e72599920,188,JSConstructEntry
code-creation,Builtin,3,3518,0x563e725999e0,188,JSRunMicrotasksEntry
code-creation,Builtin,3,3524,0x563e72599aa0,118,JSEntryTrampoline
code-creation,Builtin,3,3529,0x563e72599b20,118,JSConstructEntryTrampoline
code-creation,Builtin,3,3539,0x563e72599ba0,560,ResumeGeneratorTrampoline
code-creation,Builtin,3,3544,0x563e72599de0,3633,StringCharAt
code-creation,Builtin,3,3549,0x563e7259ac20,4168,StringCodePointAt
code-creation,Builtin,3,3554,0x563e7259bc80,6048,StringFromCodePointAt
code-creation,Builtin,3,3559,0x563e7259d440,3222,StringEqual
code-creation,Builtin,3,3564,0x563e7259e0e0,2086,StringGreaterThan
code-creation,Builtin,3,3569,0x563e7259e920,2086,StringGreaterThanOrEqual
code-creation,Builtin,3,3574,0x563e7259f160,4714,StringIndexOf
code-creation,Builtin,3,3579,0x563e725a03e0,2086,StringLessThan
code-creation,Builtin,3,3584,0x563e725a0c20,2086,StringLessThanOrEqual
code-creation,Builtin,3,3589,0x563e725a1460,8678,StringSubstring
code-creation,Builtin,3,3594,0x563e725a3660,1114,OrderedHashTableHealIndex
code-creation,Builtin,3,3600,0x563e725a3ac0,1101,InterpreterEntryTrampoline
code-creation,Builtin,3,3605,0x563e725a3f20,79,InterpreterPushArgsThenCall
code-creation,Builtin,3,3610,0x563e725a3f80,85,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,3,3616,0x563e725a3fe0,82,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,3,3622,0x563e725a4040,141,InterpreterPushArgsThenConstruct
code-creation,Builtin,3,3628,0x563e725a40e0,193,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,3,3634,0x563e725a41c0,81,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,3,3640,0x563e725a4220,232,InterpreterEnterBytecodeAdvance
code-creation,Builtin,3,3645,0x563e725a4320,130,InterpreterEnterBytecodeDispatch
code-creation,Builtin,3,3651,0x563e725a43c0,87,InterpreterOnStackReplacement
code-creation,Builtin,3,3656,0x563e725a4420,6422,CompileLazy
code-creation,Builtin,3,3661,0x563e725a5d40,433,CompileLazyDeoptimizedCode
code-creation,Builtin,3,3666,0x563e725a5f00,217,InstantiateAsmJs
code-creation,Builtin,3,3671,0x563e725a5fe0,55,NotifyDeoptimized
code-creation,Builtin,3,3676,0x563e725a6020,48,ContinueToCodeStubBuiltin
code-creation,Builtin,3,3682,0x563e725a6060,56,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,3,3687,0x563e725a60a0,51,ContinueToJavaScriptBuiltin
code-creation,Builtin,3,3693,0x563e725a60e0,59,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,3,3698,0x563e725a6120,382,CallApiCallback
code-creation,Builtin,3,3703,0x563e725a62a0,364,CallApiGetter
code-creation,Builtin,3,3714,0x563e725a6420,12,HandleApiCall
code-creation,Builtin,3,3719,0x563e725a6440,12,HandleApiCallAsFunction
code-creation,Builtin,3,3726,0x563e725a6460,12,HandleApiCallAsConstructor
code-creation,Builtin,3,3732,0x563e725a6480,84,AllocateInYoungGeneration
code-creation,Builtin,3,3739,0x563e725a64e0,80,AllocateRegularInYoungGeneration
code-creation,Builtin,3,3745,0x563e725a6540,84,AllocateInOldGeneration
code-creation,Builtin,3,3751,0x563e725a65a0,80,AllocateRegularInOldGeneration
code-creation,Builtin,3,3757,0x563e725a6600,1702,CopyFastSmiOrObjectElements
code-creation,Builtin,3,3764,0x563e725a6cc0,1252,GrowFastDoubleElements
code-creation,Builtin,3,3770,0x563e725a71c0,1098,GrowFastSmiOrObjectElements
code-creation,Builtin,3,3776,0x563e725a7620,974,NewArgumentsElements
code-creation,Builtin,3,3782,0x563e725a7a00,2868,DebugBreakTrampoline
code-creation,Builtin,3,3788,0x563e725a8540,159,FrameDropperTrampoline
code-creation,Builtin,3,3794,0x563e725a85e0,68,HandleDebuggerStatement
code-creation,Builtin,3,3800,0x563e725a8640,938,ToObject
code-creation,Builtin,3,3805,0x563e725a8a00,697,ToBoolean
code-creation,Builtin,3,3811,0x563e725a8cc0,1625,OrdinaryToPrimitive_Number
code-creation,Builtin,3,3817,0x563e725a9320,1625,OrdinaryToPrimitive_String
code-creation,Builtin,3,3823,0x563e725a9980,739,NonPrimitiveToPrimitive_Default
code-creation,Builtin,3,3829,0x563e725a9c80,739,NonPrimitiveToPrimitive_Number
code-creation,Builtin,3,3835,0x563e725a9f80,739,NonPrimitiveToPrimitive_String
code-creation,Builtin,3,3841,0x563e725aa280,467,StringToNumber
code-creation,Builtin,3,3847,0x563e725aa460,781,ToName
code-creation,Builtin,3,3852,0x563e725aa780,1466,NonNumberToNumber
code-creation,Builtin,3,3860,0x563e725aad40,1743,NonNumberToNumeric
code-creation,Builtin,3,3865,0x563e725ab420,1692,ToNumber
code-creation,Builtin,3,3871,0x563e725abac0,1826,ToNumberConvertBigInt
code-creation,Builtin,3,3876,0x563e725ac200,2106,ToNumeric
code-creation,Builtin,3,3882,0x563e725aca40,2916,NumberToString
code-creation,Builtin,3,3887,0x563e725ad5c0,1159,ToInteger
code-creation,Builtin,3,3893,0x563e725ada60,1645,ToInteger_TruncateMinusZero
code-creation,Builtin,3,3899,0x563e725ae0e0,857,ToLength
code-creation,Builtin,3,3904,0x563e725ae440,661,Typeof
code-creation,Builtin,3,3909,0x563e725ae6e0,652,GetSuperConstructor
code-creation,Builtin,3,3915,0x563e725ae980,867,BigIntToI64
code-creation,Builtin,3,3920,0x563e725aed00,12,BigIntToI32Pair
code-creation,Builtin,3,3926,0x563e725aed20,317,I64ToBigInt
code-creation,Builtin,3,3932,0x563e725aee60,12,I32PairToBigInt
code-creation,Builtin,3,3937,0x563e725aee80,693,ToBooleanLazyDeoptContinuation
code-creation,Builtin,3,3943,0x563e725af140,27217,KeyedLoadIC_PolymorphicName
code-creation,Builtin,3,3949,0x563e725b5ba0,36,KeyedLoadIC_Slow
code-creation,Builtin,3,3955,0x563e725b5be0,67187,KeyedStoreIC_Megamorphic
code-creation,Builtin,3,3961,0x563e725c6260,40,KeyedStoreIC_Slow
code-creation,Builtin,3,3967,0x563e725c62a0,40,LoadGlobalIC_Slow
code-creation,Builtin,3,3972,0x563e725c62e0,884,LoadIC_FunctionPrototype
code-creation,Builtin,3,3978,0x563e725c6660,36,LoadIC_Slow
code-creation,Builtin,3,3984,0x563e725c66a0,188,LoadIC_StringLength
code-creation,Builtin,3,3990,0x563e725c6760,461,LoadIC_StringWrapperLength
code-creation,Builtin,3,3996,0x563e725c6940,27198,LoadIC_NoFeedback
code-creation,Builtin,3,4001,0x563e725cd380,40,StoreGlobalIC_Slow
code-creation,Builtin,3,4007,0x563e725cd3c0,42523,StoreIC_NoFeedback
code-creation,Builtin,3,4013,0x563e725d79e0,40,StoreInArrayLiteralIC_Slow
code-creation,Builtin,3,4019,0x563e725d7a20,2636,KeyedLoadIC_SloppyArguments
code-creation,Builtin,3,4025,0x563e725d8480,76,LoadIndexedInterceptorIC
code-creation,Builtin,3,4030,0x563e725d84e0,2526,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,3,4037,0x563e725d8ec0,2526,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,3,4044,0x563e725d98a0,2526,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,3,4051,0x563e725da280,2526,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,3,4058,0x563e725dac60,40,StoreInArrayLiteralIC_Slow_Standard
code-creation,Builtin,3,4064,0x563e725daca0,39218,StoreFastElementIC_Standard
code-creation,Builtin,3,4070,0x563e725e45e0,35428,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,3,4077,0x563e725ed060,38946,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,3,4083,0x563e725f68a0,25566,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,3,4090,0x563e725fcc80,40,StoreInArrayLiteralIC_Slow_GrowNoTransitionHandleCOW
code-creation,Builtin,3,4097,0x563e725fccc0,40,StoreInArrayLiteralIC_Slow_NoTransitionIgnoreOOB
code-creation,Builtin,3,4104,0x563e725fcd00,40,StoreInArrayLiteralIC_Slow_NoTransitionHandleCOW
code-creation,Builtin,3,4110,0x563e725fcd40,40,KeyedStoreIC_Slow_Standard
code-creation,Builtin,3,4116,0x563e725fcd80,40,KeyedStoreIC_Slow_GrowNoTransitionHandleCOW
code-creation,Builtin,3,4123,0x563e725fcdc0,40,KeyedStoreIC_Slow_NoTransitionIgnoreOOB
code-creation,Builtin,3,4130,0x563e725fce00,40,KeyedStoreIC_Slow_NoTransitionHandleCOW
code-creation,Builtin,3,4136,0x563e725fce40,34198,ElementsTransitionAndStore_Standard
code-creation,Builtin,3,4142,0x563e726053e0,61930,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,3,4149,0x563e726145e0,34198,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,3,4156,0x563e7261cb80,42182,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,3,4163,0x563e72627060,8500,KeyedHasIC_PolymorphicName
code-creation,Builtin,3,4169,0x563e726291a0,2660,KeyedHasIC_SloppyArguments
code-creation,Builtin,3,4175,0x563e72629c20,76,HasIndexedInterceptorIC
code-creation,Builtin,3,4182,0x563e72629c80,36,HasIC_Slow
code-creation,Builtin,3,4188,0x563e72629cc0,491,EnqueueMicrotask
code-creation,Builtin,3,4193,0x563e72629ec0,8,RunMicrotasksTrampoline
code-creation,Builtin,3,4199,0x563e72629ee0,4212,RunMicrotasks
code-creation,Builtin,3,4205,0x563e7262af60,18052,HasProperty
code-creation,Builtin,3,4210,0x563e7262f600,7950,DeleteProperty
code-creation,Builtin,3,4216,0x563e72631520,13928,CopyDataProperties
code-creation,Builtin,3,4222,0x563e72634ba0,56825,SetDataProperties
code-creation,Builtin,3,4227,0x563e726429a0,165,Abort
code-creation,Builtin,3,4233,0x563e72642a60,165,AbortCSAAssert
code-creation,Builtin,3,4238,0x563e72642b20,12,EmptyFunction
code-creation,Builtin,3,4244,0x563e72642b40,12,Illegal
code-creation,Builtin,3,4249,0x563e72642b60,12,StrictPoisonPillThrower
code-creation,Builtin,3,4255,0x563e72642b80,12,UnsupportedThrower
code-creation,Builtin,3,4261,0x563e72642ba0,174,ReturnReceiver
code-creation,Builtin,3,4266,0x563e72642c60,379,ArrayConstructor
code-creation,Builtin,3,4272,0x563e72642de0,2164,ArrayConstructorImpl
code-creation,Builtin,3,4278,0x563e72643660,845,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,3,4284,0x563e726439c0,845,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,3,4291,0x563e72643d20,507,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,3,4299,0x563e72643f20,507,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,3,4306,0x563e72644120,507,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,3,4313,0x563e72644320,507,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,3,4320,0x563e72644520,812,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,3,4327,0x563e72644860,812,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,3,4335,0x563e72644ba0,1414,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,3,4342,0x563e72645140,2017,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,3,4349,0x563e72645940,1080,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,3,4356,0x563e72645d80,1406,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,3,4364,0x563e72646300,1080,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,3,4371,0x563e72646740,1406,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,3,4378,0x563e72646cc0,1080,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,3,4386,0x563e72647100,1715,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,3,4393,0x563e726477c0,417,ArrayNArgumentsConstructor
code-creation,Builtin,3,4399,0x563e72647980,54,InternalArrayConstructor
code-creation,Builtin,3,4405,0x563e726479c0,112,InternalArrayConstructorImpl
code-creation,Builtin,3,4411,0x563e72647a40,491,InternalArrayNoArgumentConstructor_Packed
code-creation,Builtin,3,4418,0x563e72647c40,12,ArrayConcat
code-creation,Builtin,3,4423,0x563e72647c60,702,ArrayIsArray
code-creation,Builtin,3,4429,0x563e72647f20,12,ArrayPrototypeFill
code-creation,Builtin,3,4435,0x563e72647f40,18976,ArrayFrom
code-creation,Builtin,3,4440,0x563e7264c980,7880,ArrayIncludesSmiOrObject
code-creation,Builtin,3,4446,0x563e7264e860,1548,ArrayIncludesPackedDoubles
code-creation,Builtin,3,4452,0x563e7264ee80,1792,ArrayIncludesHoleyDoubles
code-creation,Builtin,3,4458,0x563e7264f5a0,2234,ArrayIncludes
code-creation,Builtin,3,4463,0x563e7264fe60,6288,ArrayIndexOfSmiOrObject
code-creation,Builtin,3,4469,0x563e72651700,1344,ArrayIndexOfPackedDoubles
code-creation,Builtin,3,4475,0x563e72651c60,1344,ArrayIndexOfHoleyDoubles
code-creation,Builtin,3,4481,0x563e726521c0,2238,ArrayIndexOf
code-creation,Builtin,3,4487,0x563e72652a80,12,ArrayPop
code-creation,Builtin,3,4492,0x563e72652aa0,3606,ArrayPrototypePop
code-creation,Builtin,3,4498,0x563e726538c0,12,ArrayPush
code-creation,Builtin,3,4505,0x563e726538e0,10986,ArrayPrototypePush
code-creation,Builtin,3,4511,0x563e726563e0,12,ArrayShift
code-creation,Builtin,3,4516,0x563e72656400,12,ArrayUnshift
code-creation,Builtin,3,4522,0x563e72656420,3780,CloneFastJSArray
code-creation,Builtin,3,4527,0x563e72657300,6766,CloneFastJSArrayFillingHoles
code-creation,Builtin,3,4533,0x563e72658d80,3406,ExtractFastJSArray
code-creation,Builtin,3,4539,0x563e72659ae0,1191,ArrayPrototypeEntries
code-creation,Builtin,3,4545,0x563e72659fa0,1183,ArrayPrototypeKeys
code-creation,Builtin,3,4551,0x563e7265a440,1187,ArrayPrototypeValues
code-creation,Builtin,3,4557,0x563e7265a900,15045,ArrayIteratorPrototypeNext
code-creation,Builtin,3,4563,0x563e7265e3e0,26500,FlattenIntoArray
code-creation,Builtin,3,4568,0x563e72664b80,27004,FlatMapIntoArray
code-creation,Builtin,3,4574,0x563e7266b500,1726,ArrayPrototypeFlat
code-creation,Builtin,3,4580,0x563e7266bbc0,1860,ArrayPrototypeFlatMap
code-creation,Builtin,3,4585,0x563e7266c320,12,ArrayBufferConstructor
code-creation,Builtin,3,4591,0x563e7266c340,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,3,4598,0x563e7266c360,12,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,3,4604,0x563e7266c380,12,ArrayBufferIsView
code-creation,Builtin,3,4610,0x563e7266c3a0,12,ArrayBufferPrototypeSlice
code-creation,Builtin,3,4616,0x563e7266c3c0,2040,AsyncFunctionEnter
code-creation,Builtin,3,4621,0x563e7266cbc0,714,AsyncFunctionReject
code-creation,Builtin,3,4627,0x563e7266cea0,706,AsyncFunctionResolve
code-creation,Builtin,3,4633,0x563e7266d180,121,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,3,4639,0x563e7266d200,5504,AsyncFunctionAwaitCaught
code-creation,Builtin,3,4645,0x563e7266e7a0,5504,AsyncFunctionAwaitUncaught
code-creation,Builtin,3,4651,0x563e7266fd40,631,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,3,4657,0x563e7266ffc0,631,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,3,4664,0x563e72670240,12,BigIntConstructor
code-creation,Builtin,3,4669,0x563e72670260,12,BigIntAsUintN
code-creation,Builtin,3,4675,0x563e72670280,12,BigIntAsIntN
code-creation,Builtin,3,4680,0x563e726702a0,12,BigIntPrototypeToLocaleString
code-creation,Builtin,3,4686,0x563e726702c0,12,BigIntPrototypeToString
code-creation,Builtin,3,4692,0x563e726702e0,12,BigIntPrototypeValueOf
code-creation,Builtin,3,4698,0x563e72670300,912,BooleanPrototypeToString
code-creation,Builtin,3,4704,0x563e726706a0,807,BooleanPrototypeValueOf
code-creation,Builtin,3,4710,0x563e726709e0,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,3,4716,0x563e72670a00,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,3,4722,0x563e72670a20,12,CallSitePrototypeGetFileName
code-creation,Builtin,3,4728,0x563e72670a40,12,CallSitePrototypeGetFunction
code-creation,Builtin,3,4735,0x563e72670a60,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,3,4741,0x563e72670a80,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,3,4747,0x563e72670aa0,12,CallSitePrototypeGetMethodName
code-creation,Builtin,3,4753,0x563e72670ac0,12,CallSitePrototypeGetPosition
code-creation,Builtin,3,4759,0x563e72670ae0,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,3,4768,0x563e72670b00,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,3,4775,0x563e72670b20,12,CallSitePrototypeGetThis
code-creation,Builtin,3,4781,0x563e72670b40,12,CallSitePrototypeGetTypeName
code-creation,Builtin,3,4787,0x563e72670b60,12,CallSitePrototypeIsAsync
code-creation,Builtin,3,4793,0x563e72670b80,12,CallSitePrototypeIsConstructor
code-creation,Builtin,3,4799,0x563e72670ba0,12,CallSitePrototypeIsEval
code-creation,Builtin,3,4805,0x563e72670bc0,12,CallSitePrototypeIsNative
code-creation,Builtin,3,4811,0x563e72670be0,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,3,4817,0x563e72670c00,12,CallSitePrototypeIsToplevel
code-creation,Builtin,3,4823,0x563e72670c20,12,CallSitePrototypeToString
code-creation,Builtin,3,4829,0x563e72670c40,12,ConsoleDebug
code-creation,Builtin,3,4834,0x563e72670c60,12,ConsoleError
code-creation,Builtin,3,4842,0x563e72670c80,12,ConsoleInfo
code-creation,Builtin,3,4847,0x563e72670ca0,12,ConsoleLog
code-creation,Builtin,3,4853,0x563e72670cc0,12,ConsoleWarn
code-creation,Builtin,3,4858,0x563e72670ce0,12,ConsoleDir
code-creation,Builtin,3,4863,0x563e72670d00,12,ConsoleDirXml
code-creation,Builtin,3,4869,0x563e72670d20,12,ConsoleTable
code-creation,Builtin,3,4874,0x563e72670d40,12,ConsoleTrace
code-creation,Builtin,3,4880,0x563e72670d60,12,ConsoleGroup
code-creation,Builtin,3,4885,0x563e72670d80,12,ConsoleGroupCollapsed
code-creation,Builtin,3,4891,0x563e72670da0,12,ConsoleGroupEnd
code-creation,Builtin,3,4897,0x563e72670dc0,12,ConsoleClear
code-creation,Builtin,3,4902,0x563e72670de0,12,ConsoleCount
code-creation,Builtin,3,4908,0x563e72670e00,12,ConsoleCountReset
code-creation,Builtin,3,4913,0x563e72670e20,12,ConsoleAssert
code-creation,Builtin,3,4919,0x563e72670e40,1390,FastConsoleAssert
code-creation,Builtin,3,4924,0x563e726713c0,12,ConsoleProfile
code-creation,Builtin,3,4930,0x563e726713e0,12,ConsoleProfileEnd
code-creation,Builtin,3,4936,0x563e72671400,12,ConsoleTime
code-creation,Builtin,3,4941,0x563e72671420,12,ConsoleTimeLog
code-creation,Builtin,3,4946,0x563e72671440,12,ConsoleTimeEnd
code-creation,Builtin,3,4952,0x563e72671460,12,ConsoleTimeStamp
code-creation,Builtin,3,4958,0x563e72671480,12,ConsoleContext
code-creation,Builtin,3,4963,0x563e726714a0,12,DataViewConstructor
code-creation,Builtin,3,4969,0x563e726714c0,12,DateConstructor
code-creation,Builtin,3,4975,0x563e726714e0,468,DatePrototypeGetDate
code-creation,Builtin,3,4980,0x563e726716c0,468,DatePrototypeGetDay
code-creation,Builtin,3,4986,0x563e726718a0,468,DatePrototypeGetFullYear
code-creation,Builtin,3,4992,0x563e72671a80,468,DatePrototypeGetHours
code-creation,Builtin,3,4998,0x563e72671c60,440,DatePrototypeGetMilliseconds
code-creation,Builtin,3,5004,0x563e72671e20,468,DatePrototypeGetMinutes
code-creation,Builtin,3,5010,0x563e72672000,468,DatePrototypeGetMonth
code-creation,Builtin,3,5015,0x563e726721e0,468,DatePrototypeGetSeconds
code-creation,Builtin,3,5021,0x563e726723c0,363,DatePrototypeGetTime
code-creation,Builtin,3,5027,0x563e72672540,440,DatePrototypeGetTimezoneOffset
code-creation,Builtin,3,5033,0x563e72672700,440,DatePrototypeGetUTCDate
code-creation,Builtin,3,5039,0x563e726728c0,440,DatePrototypeGetUTCDay
code-creation,Builtin,3,5045,0x563e72672a80,440,DatePrototypeGetUTCFullYear
code-creation,Builtin,3,5051,0x563e72672c40,440,DatePrototypeGetUTCHours
code-creation,Builtin,3,5057,0x563e72672e00,440,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,3,5063,0x563e72672fc0,440,DatePrototypeGetUTCMinutes
code-creation,Builtin,3,5069,0x563e72673180,440,DatePrototypeGetUTCMonth
code-creation,Builtin,3,5075,0x563e72673340,440,DatePrototypeGetUTCSeconds
code-creation,Builtin,3,5081,0x563e72673500,363,DatePrototypeValueOf
code-creation,Builtin,3,5087,0x563e72673680,987,DatePrototypeToPrimitive
code-creation,Builtin,3,5093,0x563e72673a60,12,DatePrototypeGetYear
code-creation,Builtin,3,5099,0x563e72673a80,12,DatePrototypeSetYear
code-creation,Builtin,3,5105,0x563e72673aa0,12,DateNow
code-creation,Builtin,3,5110,0x563e72673ac0,12,DateParse
code-creation,Builtin,3,5115,0x563e72673ae0,12,DatePrototypeSetDate
code-creation,Builtin,3,5121,0x563e72673b00,12,DatePrototypeSetFullYear
code-creation,Builtin,3,5127,0x563e72673b20,12,DatePrototypeSetHours
code-creation,Builtin,3,5133,0x563e72673b40,12,DatePrototypeSetMilliseconds
code-creation,Builtin,3,5139,0x563e72673b60,12,DatePrototypeSetMinutes
code-creation,Builtin,3,5145,0x563e72673b80,12,DatePrototypeSetMonth
code-creation,Builtin,3,5151,0x563e72673ba0,12,DatePrototypeSetSeconds
code-creation,Builtin,3,5159,0x563e72673bc0,12,DatePrototypeSetTime
tick,0x563e719366bd,5172,0,0x0,6
tick,0x7f4810c64187,5193,0,0x0,6
code-creation,Builtin,3,5207,0x563e72673be0,12,DatePrototypeSetUTCDate
code-creation,Builtin,3,5213,0x563e72673c00,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,3,5219,0x563e72673c20,12,DatePrototypeSetUTCHours
code-creation,Builtin,3,5224,0x563e72673c40,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,3,5231,0x563e72673c60,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,3,5237,0x563e72673c80,12,DatePrototypeSetUTCMonth
code-creation,Builtin,3,5242,0x563e72673ca0,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,3,5247,0x563e72673cc0,12,DatePrototypeToDateString
code-creation,Builtin,3,5253,0x563e72673ce0,12,DatePrototypeToISOString
code-creation,Builtin,3,5258,0x563e72673d00,12,DatePrototypeToUTCString
code-creation,Builtin,3,5263,0x563e72673d20,12,DatePrototypeToString
code-creation,Builtin,3,5269,0x563e72673d40,12,DatePrototypeToTimeString
code-creation,Builtin,3,5274,0x563e72673d60,12,DatePrototypeToJson
code-creation,Builtin,3,5279,0x563e72673d80,12,DateUTC
code-creation,Builtin,3,5283,0x563e72673da0,12,ErrorConstructor
code-creation,Builtin,3,5288,0x563e72673dc0,12,ErrorCaptureStackTrace
code-creation,Builtin,3,5294,0x563e72673de0,12,ErrorPrototypeToString
code-creation,Builtin,3,5299,0x563e72673e00,12,MakeError
code-creation,Builtin,3,5303,0x563e72673e20,12,MakeRangeError
code-creation,Builtin,3,5308,0x563e72673e40,12,MakeSyntaxError
code-creation,Builtin,3,5313,0x563e72673e60,12,MakeTypeError
code-creation,Builtin,3,5318,0x563e72673e80,12,MakeURIError
code-creation,Builtin,3,5323,0x563e72673ea0,12,ExtrasUtilsUncurryThis
code-creation,Builtin,3,5328,0x563e72673ec0,12,ExtrasUtilsCallReflectApply
code-creation,Builtin,3,5333,0x563e72673ee0,12,FunctionConstructor
code-creation,Builtin,3,5338,0x563e72673f00,64,FunctionPrototypeApply
code-creation,Builtin,3,5343,0x563e72673f60,12,FunctionPrototypeBind
code-creation,Builtin,3,5349,0x563e72673f80,3548,FastFunctionPrototypeBind
code-creation,Builtin,3,5354,0x563e72674d60,47,FunctionPrototypeCall
code-creation,Builtin,3,5359,0x563e72674da0,2316,FunctionPrototypeHasInstance
code-creation,Builtin,3,5364,0x563e726756c0,12,FunctionPrototypeToString
code-creation,Builtin,3,5370,0x563e726756e0,1002,CreateIterResultObject
code-creation,Builtin,3,5375,0x563e72675ae0,2904,CreateGeneratorObject
code-creation,Builtin,3,5380,0x563e72676640,12,GeneratorFunctionConstructor
code-creation,Builtin,3,5385,0x563e72676660,1124,GeneratorPrototypeNext
code-creation,Builtin,3,5391,0x563e72676ae0,1128,GeneratorPrototypeReturn
code-creation,Builtin,3,5396,0x563e72676f60,1140,GeneratorPrototypeThrow
code-creation,Builtin,3,5401,0x563e726773e0,12,AsyncFunctionConstructor
code-creation,Builtin,3,5406,0x563e72677400,538,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,3,5412,0x563e72677620,12,GlobalDecodeURI
code-creation,Builtin,3,5417,0x563e72677640,12,GlobalDecodeURIComponent
code-creation,Builtin,3,5422,0x563e72677660,12,GlobalEncodeURI
code-creation,Builtin,3,5427,0x563e72677680,12,GlobalEncodeURIComponent
code-creation,Builtin,3,5432,0x563e726776a0,12,GlobalEscape
code-creation,Builtin,3,5437,0x563e726776c0,12,GlobalUnescape
code-creation,Builtin,3,5442,0x563e726776e0,12,GlobalEval
code-creation,Builtin,3,5447,0x563e72677700,409,GlobalIsFinite
code-creation,Builtin,3,5452,0x563e726778a0,401,GlobalIsNaN
code-creation,Builtin,3,5456,0x563e72677a40,12,JsonParse
code-creation,Builtin,3,5461,0x563e72677a60,12,JsonStringify
code-creation,Builtin,3,5466,0x563e72677a80,28157,LoadIC
code-creation,Builtin,3,5470,0x563e7267e880,26564,LoadIC_Megamorphic
code-creation,Builtin,3,5475,0x563e72685060,27158,LoadIC_Noninlined
code-creation,Builtin,3,5480,0x563e7268ba80,890,LoadICTrampoline
code-creation,Builtin,3,5485,0x563e7268be00,890,LoadICTrampoline_Megamorphic
code-creation,Builtin,3,5491,0x563e7268c180,43846,KeyedLoadIC
code-creation,Builtin,3,5495,0x563e72696ce0,90690,KeyedLoadIC_Megamorphic
code-creation,Builtin,3,5501,0x563e726acf40,983,KeyedLoadICTrampoline
code-creation,Builtin,3,5506,0x563e726ad320,983,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,3,5511,0x563e726ad700,28205,StoreGlobalIC
code-creation,Builtin,3,5516,0x563e726b4540,983,StoreGlobalICTrampoline
code-creation,Builtin,3,5521,0x563e726b4920,31489,StoreIC
code-creation,Builtin,3,5526,0x563e726bc440,1002,StoreICTrampoline
code-creation,Builtin,3,5531,0x563e726bc840,34759,KeyedStoreIC
code-creation,Builtin,3,5537,0x563e726c5020,1002,KeyedStoreICTrampoline
code-creation,Builtin,3,5543,0x563e726c5420,2972,StoreInArrayLiteralIC
code-creation,Builtin,3,5548,0x563e726c5fc0,20166,LoadGlobalIC
code-creation,Builtin,3,5552,0x563e726caea0,20122,LoadGlobalICInsideTypeof
code-creation,Builtin,3,5558,0x563e726cfd40,878,LoadGlobalICTrampoline
code-creation,Builtin,3,5563,0x563e726d00c0,878,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,3,5569,0x563e726d0440,8422,CloneObjectIC
code-creation,Builtin,3,5573,0x563e726d2540,14757,CloneObjectIC_Slow
code-creation,Builtin,3,5578,0x563e726d5f00,17145,KeyedHasIC
code-creation,Builtin,3,5583,0x563e726da200,17961,KeyedHasIC_Megamorphic
code-creation,Builtin,3,5588,0x563e726de840,5294,IterableToList
code-creation,Builtin,3,5593,0x563e726dfd00,4088,IterableToListWithSymbolLookup
code-creation,Builtin,3,5599,0x563e726e0d00,994,IterableToListMayPreserveHoles
code-creation,Builtin,3,5604,0x563e726e1100,3740,IterableToFixedArrayForWasm
code-creation,Builtin,3,5609,0x563e726e1fa0,5940,StringListFromIterable
code-creation,Builtin,3,5615,0x563e726e36e0,21358,FindOrderedHashMapEntry
code-creation,Builtin,3,5620,0x563e726e8a60,30156,MapConstructor
code-creation,Builtin,3,5625,0x563e726f0040,26957,MapPrototypeSet
code-creation,Builtin,3,5630,0x563e726f69a0,23404,MapPrototypeDelete
code-creation,Builtin,3,5635,0x563e726fc520,1636,MapPrototypeGet
code-creation,Builtin,3,5639,0x563e726fcba0,913,MapPrototypeHas
code-creation,Builtin,3,5644,0x563e726fcf40,12,MapPrototypeClear
code-creation,Builtin,3,5649,0x563e726fcf60,811,MapPrototypeEntries
code-creation,Builtin,3,5654,0x563e726fd2a0,839,MapPrototypeGetSize
code-creation,Builtin,3,5659,0x563e726fd600,2534,MapPrototypeForEach
code-creation,Builtin,3,5665,0x563e726fe000,811,MapPrototypeKeys
code-creation,Builtin,3,5669,0x563e726fe340,811,MapPrototypeValues
code-creation,Builtin,3,5674,0x563e726fe680,3642,MapIteratorPrototypeNext
code-creation,Builtin,3,5680,0x563e726ff4c0,3896,MapIteratorToList
code-creation,Builtin,3,5685,0x563e72700400,778,MathAbs
code-creation,Builtin,3,5689,0x563e72700720,752,MathCeil
code-creation,Builtin,3,5694,0x563e72700a20,752,MathFloor
code-creation,Builtin,3,5699,0x563e72700d20,1734,MathImul
code-creation,Builtin,3,5703,0x563e72701400,1248,MathMax
code-creation,Builtin,3,5708,0x563e72701900,1256,MathMin
code-creation,Builtin,3,5712,0x563e72701e00,1642,MathPow
code-creation,Builtin,3,5717,0x563e72702480,923,MathRandom
code-creation,Builtin,3,5722,0x563e72702820,816,MathRound
code-creation,Builtin,3,5726,0x563e72702b60,752,MathTrunc
code-creation,Builtin,3,5731,0x563e72702e60,97,AllocateHeapNumber
code-creation,Builtin,3,5736,0x563e72702ee0,2466,NumberConstructor
code-creation,Builtin,3,5741,0x563e727038a0,604,NumberIsFinite
code-creation,Builtin,3,5746,0x563e72703b00,852,NumberIsInteger
code-creation,Builtin,3,5751,0x563e72703e60,596,NumberIsNaN
code-creation,Builtin,3,5755,0x563e727040c0,888,NumberIsSafeInteger
code-creation,Builtin,3,5760,0x563e72704440,1004,NumberParseFloat
code-creation,Builtin,3,5765,0x563e72704840,486,NumberParseInt
code-creation,Builtin,3,5770,0x563e72704a40,1384,ParseInt
code-creation,Builtin,3,5775,0x563e72704fc0,12,NumberPrototypeToExponential
code-creation,Builtin,3,5780,0x563e72704fe0,12,NumberPrototypeToFixed
code-creation,Builtin,3,5785,0x563e72705000,12,NumberPrototypeToLocaleString
code-creation,Builtin,3,5791,0x563e72705020,12,NumberPrototypeToPrecision
code-creation,Builtin,3,5796,0x563e72705040,12,NumberPrototypeToString
code-creation,Builtin,3,5801,0x563e72705060,702,NumberPrototypeValueOf
code-creation,Builtin,3,5806,0x563e72705320,3950,Add
code-creation,Builtin,3,5811,0x563e727062a0,3132,Subtract
code-creation,Builtin,3,5815,0x563e72706ee0,3444,Multiply
code-creation,Builtin,3,5820,0x563e72707c60,3216,Divide
code-creation,Builtin,3,5829,0x563e72708900,3330,Modulus
code-creation,Builtin,3,5835,0x563e72709620,3352,Exponentiate
code-creation,Builtin,3,5840,0x563e7270a340,2292,BitwiseAnd
code-creation,Builtin,3,5846,0x563e7270ac40,2292,BitwiseOr
code-creation,Builtin,3,5853,0x563e7270b540,2292,BitwiseXor
code-creation,Builtin,3,5858,0x563e7270be40,2336,ShiftLeft
code-creation,Builtin,3,5863,0x563e7270c780,2336,ShiftRight
code-creation,Builtin,3,5869,0x563e7270d0c0,2340,ShiftRightLogical
code-creation,Builtin,3,5874,0x563e7270da00,4406,LessThan
code-creation,Builtin,3,5880,0x563e7270eb40,4406,LessThanOrEqual
code-creation,Builtin,3,5885,0x563e7270fc80,4406,GreaterThan
code-creation,Builtin,3,5891,0x563e72710dc0,4406,GreaterThanOrEqual
code-creation,Builtin,3,5896,0x563e72711f00,4056,Equal
code-creation,Builtin,3,5902,0x563e72712ee0,2676,SameValue
code-creation,Builtin,3,5907,0x563e72713960,2040,SameValueNumbersOnly
code-creation,Builtin,3,5913,0x563e72714160,3264,StrictEqual
code-creation,Builtin,3,5918,0x563e72714e40,686,BitwiseNot
code-creation,Builtin,3,5923,0x563e72715100,682,Decrement
code-creation,Builtin,3,5929,0x563e727153c0,682,Increment
code-creation,Builtin,3,5934,0x563e72715680,1258,Negate
code-creation,Builtin,3,5939,0x563e72715b80,1790,ObjectConstructor
code-creation,Builtin,3,5945,0x563e72716280,960,ObjectAssign
code-creation,Builtin,3,5950,0x563e72716660,5046,ObjectCreate
code-creation,Builtin,3,5956,0x563e72717a20,4029,CreateObjectWithoutProperties
code-creation,Builtin,3,5962,0x563e727189e0,12,ObjectDefineGetter
code-creation,Builtin,3,5968,0x563e72718a00,12,ObjectDefineProperties
code-creation,Builtin,3,5974,0x563e72718a20,12,ObjectDefineProperty
code-creation,Builtin,3,5979,0x563e72718a40,12,ObjectDefineSetter
code-creation,Builtin,3,5985,0x563e72718a60,6138,ObjectEntries
code-creation,Builtin,3,5991,0x563e7271a260,12,ObjectFreeze
code-creation,Builtin,3,5996,0x563e7271a280,43632,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,3,6002,0x563e72724d00,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,3,6008,0x563e72724d20,3168,ObjectGetOwnPropertyNames
code-creation,Builtin,3,6014,0x563e727259a0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,3,6020,0x563e727259c0,3020,ObjectIs
code-creation,Builtin,3,6026,0x563e727265a0,12,ObjectIsFrozen
code-creation,Builtin,3,6031,0x563e727265c0,12,ObjectIsSealed
code-creation,Builtin,3,6037,0x563e727265e0,2910,ObjectKeys
code-creation,Builtin,3,6042,0x563e72727140,12,ObjectLookupGetter
code-creation,Builtin,3,6048,0x563e72727160,12,ObjectLookupSetter
code-creation,Builtin,3,6053,0x563e72727180,389,ObjectPrototypeToString
code-creation,Builtin,3,6059,0x563e72727320,852,ObjectPrototypeValueOf
code-creation,Builtin,3,6065,0x563e72727680,15026,ObjectPrototypeHasOwnProperty
code-creation,Builtin,3,6071,0x563e7272b140,1415,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,3,6078,0x563e7272b6e0,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,3,6083,0x563e7272b700,12,ObjectPrototypeGetProto
code-creation,Builtin,3,6089,0x563e7272b720,12,ObjectPrototypeSetProto
code-creation,Builtin,3,6095,0x563e7272b740,515,ObjectPrototypeToLocaleString
code-creation,Builtin,3,6101,0x563e7272b960,12,ObjectSeal
code-creation,Builtin,3,6106,0x563e7272b980,5729,ObjectToString
code-creation,Builtin,3,6112,0x563e7272d000,5210,ObjectValues
code-creation,Builtin,3,6117,0x563e7272e460,2212,OrdinaryHasInstance
code-creation,Builtin,3,6123,0x563e7272ed20,1856,InstanceOf
code-creation,Builtin,3,6129,0x563e7272f480,2960,ForInEnumerate
code-creation,Builtin,3,6134,0x563e72730020,17211,ForInFilter
code-creation,Builtin,3,6139,0x563e72734360,2096,FulfillPromise
code-creation,Builtin,3,6145,0x563e72734ba0,2546,RejectPromise
code-creation,Builtin,3,6151,0x563e727355a0,1976,ResolvePromise
code-creation,Builtin,3,6156,0x563e72735d60,260,PromiseCapabilityDefaultReject
code-creation,Builtin,3,6162,0x563e72735e80,256,PromiseCapabilityDefaultResolve
code-creation,Builtin,3,6168,0x563e72735fa0,596,PromiseGetCapabilitiesExecutor
code-creation,Builtin,3,6174,0x563e72736200,9670,NewPromiseCapability
code-creation,Builtin,3,6180,0x563e727387e0,219,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,3,6187,0x563e727388c0,9992,PromiseConstructor
code-creation,Builtin,3,6192,0x563e7273afe0,12,IsPromise
code-creation,Builtin,3,6198,0x563e7273b000,7018,PromisePrototypeThen
code-creation,Builtin,3,6205,0x563e7273cb80,3902,PerformPromiseThen
code-creation,Builtin,3,6211,0x563e7273dac0,826,PromisePrototypeCatch
code-creation,Builtin,3,6217,0x563e7273de00,1032,PromiseRejectReactionJob
code-creation,Builtin,3,6222,0x563e7273e220,816,PromiseFulfillReactionJob
code-creation,Builtin,3,6228,0x563e7273e560,5604,PromiseResolveThenableJob
code-creation,Builtin,3,6234,0x563e7273fb60,695,PromiseResolveTrampoline
code-creation,Builtin,3,6240,0x563e7273fe20,1894,PromiseResolve
code-creation,Builtin,3,6246,0x563e727405a0,1663,PromiseReject
code-creation,Builtin,3,6251,0x563e72740c20,7796,PromisePrototypeFinally
code-creation,Builtin,3,6257,0x563e72742aa0,4162,PromiseThenFinally
code-creation,Builtin,3,6263,0x563e72743b00,4162,PromiseCatchFinally
code-creation,Builtin,3,6269,0x563e72744b60,161,PromiseValueThunkFinally
code-creation,Builtin,3,6275,0x563e72744c20,203,PromiseThrowerFinally
code-creation,Builtin,3,6281,0x563e72744d00,16072,PromiseAll
code-creation,Builtin,3,6286,0x563e72748be0,4262,PromiseAllResolveElementClosure
code-creation,Builtin,3,6292,0x563e72749ca0,5640,PromiseRace
code-creation,Builtin,3,6297,0x563e7274b2c0,18500,PromiseAllSettled
code-creation,Builtin,3,6303,0x563e7274fb20,5194,PromiseAllSettledResolveElementClosure
code-creation,Builtin,3,6310,0x563e72750f80,5202,PromiseAllSettledRejectElementClosure
code-creation,Builtin,3,6316,0x563e727523e0,944,PromiseInternalConstructor
code-creation,Builtin,3,6322,0x563e727527a0,437,PromiseInternalReject
code-creation,Builtin,3,6328,0x563e72752960,429,PromiseInternalResolve
code-creation,Builtin,3,6334,0x563e72752b20,51,ReflectApply
code-creation,Builtin,3,6339,0x563e72752b60,57,ReflectConstruct
code-creation,Builtin,3,6345,0x563e72752ba0,12,ReflectDefineProperty
code-creation,Builtin,3,6351,0x563e72752bc0,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,3,6357,0x563e72752be0,780,ReflectHas
code-creation,Builtin,3,6362,0x563e72752f00,12,ReflectOwnKeys
code-creation,Builtin,3,6368,0x563e72752f20,12,ReflectSet
code-creation,Builtin,3,6373,0x563e72752f40,12,RegExpCapture1Getter
code-creation,Builtin,3,6379,0x563e72752f60,12,RegExpCapture2Getter
code-creation,Builtin,3,6385,0x563e72752f80,12,RegExpCapture3Getter
code-creation,Builtin,3,6391,0x563e72752fa0,12,RegExpCapture4Getter
code-creation,Builtin,3,6396,0x563e72752fc0,12,RegExpCapture5Getter
code-creation,Builtin,3,6402,0x563e72752fe0,12,RegExpCapture6Getter
code-creation,Builtin,3,6408,0x563e72753000,12,RegExpCapture7Getter
code-creation,Builtin,3,6414,0x563e72753020,12,RegExpCapture8Getter
code-creation,Builtin,3,6419,0x563e72753040,12,RegExpCapture9Getter
code-creation,Builtin,3,6425,0x563e72753060,8554,RegExpConstructor
code-creation,Builtin,3,6431,0x563e727551e0,12,RegExpInputGetter
code-creation,Builtin,3,6437,0x563e72755200,12,RegExpInputSetter
code-creation,Builtin,3,6442,0x563e72755220,12,RegExpLastMatchGetter
code-creation,Builtin,3,6448,0x563e72755240,12,RegExpLastParenGetter
code-creation,Builtin,3,6454,0x563e72755260,12,RegExpLeftContextGetter
code-creation,Builtin,3,6460,0x563e72755280,3294,RegExpPrototypeCompile
code-creation,Builtin,3,6466,0x563e72755f60,12,RegExpPrototypeToString
code-creation,Builtin,3,6471,0x563e72755f80,12,RegExpRightContextGetter
code-creation,Builtin,3,6477,0x563e72755fa0,3656,RegExpExecAtom
code-creation,Builtin,3,6483,0x563e72756e00,10178,RegExpExecInternal
code-creation,Builtin,3,6489,0x563e727595e0,7,RegExpInterpreterTrampoline
code-creation,Builtin,3,6495,0x563e72759600,51820,RegExpStringIteratorPrototypeNext
code-creation,Builtin,3,6501,0x563e72766080,17368,SetConstructor
code-creation,Builtin,3,6506,0x563e7276a460,22370,SetPrototypeHas
code-creation,Builtin,3,6512,0x563e7276fbe0,26206,SetPrototypeAdd
code-creation,Builtin,3,6518,0x563e72776240,23220,SetPrototypeDelete
code-creation,Builtin,3,6523,0x563e7277bd00,12,SetPrototypeClear
code-creation,Builtin,3,6529,0x563e7277bd20,811,SetPrototypeEntries
code-creation,Builtin,3,6535,0x563e7277c060,839,SetPrototypeGetSize
code-creation,Builtin,3,6540,0x563e7277c3c0,2274,SetPrototypeForEach
code-creation,Builtin,3,6548,0x563e7277ccc0,811,SetPrototypeValues
code-creation,Builtin,3,6554,0x563e7277d000,3176,SetIteratorPrototypeNext
code-creation,Builtin,3,6560,0x563e7277dc80,3882,SetOrSetIteratorToList
code-creation,Builtin,3,6565,0x563e7277ebc0,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,3,6572,0x563e7277ebe0,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,3,6578,0x563e7277ec00,2910,AtomicsLoad
code-creation,Builtin,3,6584,0x563e7277f760,4082,AtomicsStore
code-creation,Builtin,3,6589,0x563e72780760,5098,AtomicsExchange
code-creation,Builtin,3,6595,0x563e72781b60,7194,AtomicsCompareExchange
code-creation,Builtin,3,6601,0x563e72783780,5214,AtomicsAdd
code-creation,Builtin,3,6606,0x563e72784be0,5214,AtomicsSub
code-creation,Builtin,3,6612,0x563e72786040,5214,AtomicsAnd
code-creation,Builtin,3,6617,0x563e727874a0,5214,AtomicsOr
code-creation,Builtin,3,6622,0x563e72788900,5214,AtomicsXor
code-creation,Builtin,3,6628,0x563e72789d60,12,AtomicsNotify
code-creation,Builtin,3,6633,0x563e72789d80,12,AtomicsIsLockFree
code-creation,Builtin,3,6639,0x563e72789da0,12,AtomicsWait
code-creation,Builtin,3,6645,0x563e72789dc0,12,AtomicsWake
code-creation,Builtin,3,6650,0x563e72789de0,12,StringFromCodePoint
code-creation,Builtin,3,6656,0x563e72789e00,5340,StringFromCharCode
code-creation,Builtin,3,6661,0x563e7278b2e0,5960,StringPrototypeIncludes
code-creation,Builtin,3,6667,0x563e7278ca40,5724,StringPrototypeIndexOf
code-creation,Builtin,3,6673,0x563e7278e0a0,12,StringPrototypeLastIndexOf
code-creation,Builtin,3,6679,0x563e7278e0c0,6768,StringPrototypeMatch
code-creation,Builtin,3,6685,0x563e7278fb40,19338,StringPrototypeMatchAll
code-creation,Builtin,3,6691,0x563e727946e0,12,StringPrototypeLocaleCompare
code-creation,Builtin,3,6697,0x563e72794700,7126,StringPrototypeReplace
code-creation,Builtin,3,6703,0x563e727962e0,6768,StringPrototypeSearch
code-creation,Builtin,3,6708,0x563e72797d60,11852,StringPrototypeSplit
code-creation,Builtin,3,6714,0x563e7279abc0,11386,StringPrototypeSubstr
code-creation,Builtin,3,6720,0x563e7279d840,12098,StringPrototypeTrim
code-creation,Builtin,3,6726,0x563e727a07a0,11646,StringPrototypeTrimEnd
code-creation,Builtin,3,6732,0x563e727a3520,11666,StringPrototypeTrimStart
code-creation,Builtin,3,6738,0x563e727a62c0,12,StringRaw
code-creation,Builtin,3,6743,0x563e727a62e0,12,SymbolConstructor
code-creation,Builtin,3,6748,0x563e727a6300,12,SymbolFor
code-creation,Builtin,3,6754,0x563e727a6320,12,SymbolKeyFor
code-creation,Builtin,3,6759,0x563e727a6340,807,SymbolPrototypeDescriptionGetter
code-creation,Builtin,3,6766,0x563e727a6680,694,SymbolPrototypeToPrimitive
code-creation,Builtin,3,6772,0x563e727a6940,731,SymbolPrototypeToString
code-creation,Builtin,3,6778,0x563e727a6c20,694,SymbolPrototypeValueOf
code-creation,Builtin,3,6783,0x563e727a6ee0,316,TypedArrayBaseConstructor
code-creation,Builtin,3,6789,0x563e727a7020,267,GenericLazyDeoptContinuation
code-creation,Builtin,3,6795,0x563e727a7140,906,TypedArrayConstructor
code-creation,Builtin,3,6801,0x563e727a74e0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,3,6807,0x563e727a7500,1097,TypedArrayPrototypeByteLength
code-creation,Builtin,3,6821,0x563e727a7960,1097,TypedArrayPrototypeByteOffset
code-creation,Builtin,3,6827,0x563e727a7dc0,1093,TypedArrayPrototypeLength
code-creation,Builtin,3,6833,0x563e727a8220,1340,TypedArrayPrototypeEntries
code-creation,Builtin,3,6839,0x563e727a8760,1332,TypedArrayPrototypeKeys
code-creation,Builtin,3,6845,0x563e727a8ca0,1336,TypedArrayPrototypeValues
code-creation,Builtin,3,6851,0x563e727a91e0,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,3,6857,0x563e727a9200,12,TypedArrayPrototypeFill
code-creation,Builtin,3,6863,0x563e727a9220,12,TypedArrayPrototypeIncludes
code-creation,Builtin,3,6869,0x563e727a9240,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,3,6875,0x563e727a9260,12,TypedArrayPrototypeLastIndexOf
tick,0x7f4810c64187,6887,0,0x0,6
tick,0x7f481116e1aa,6905,0,0x0,6
code-creation,Builtin,3,6919,0x563e727a9280,12,TypedArrayPrototypeReverse
code-creation,Builtin,3,6927,0x563e727a92a0,5780,TypedArrayPrototypeSet
code-creation,Builtin,3,6932,0x563e727aa940,796,TypedArrayPrototypeToStringTag
code-creation,Builtin,3,6938,0x563e727aac60,41117,TypedArrayPrototypeMap
code-creation,Builtin,3,6943,0x563e727b4d00,9652,TypedArrayOf
code-creation,Builtin,3,6948,0x563e727b72c0,12432,TypedArrayFrom
code-creation,Builtin,3,6953,0x563e727ba360,224,WasmCompileLazy
code-creation,Builtin,3,6958,0x563e727ba460,56,WasmAllocateHeapNumber
code-creation,Builtin,3,6963,0x563e727ba4a0,322,WasmAtomicNotify
code-creation,Builtin,3,6968,0x563e727ba600,388,WasmI32AtomicWait
code-creation,Builtin,3,6973,0x563e727ba7a0,466,WasmI64AtomicWait
code-creation,Builtin,3,6978,0x563e727ba980,177,WasmMemoryGrow
code-creation,Builtin,3,6983,0x563e727baa40,152,WasmTableGet
code-creation,Builtin,3,6988,0x563e727baae0,160,WasmTableSet
code-creation,Builtin,3,6993,0x563e727baba0,56,WasmRecordWrite
code-creation,Builtin,3,6998,0x563e727babe0,72,WasmStackGuard
code-creation,Builtin,3,7003,0x563e727bac40,72,WasmStackOverflow
code-creation,Builtin,3,7007,0x563e727baca0,56,WasmToNumber
code-creation,Builtin,3,7012,0x563e727bace0,84,WasmThrow
code-creation,Builtin,3,7017,0x563e727bad40,84,WasmRethrow
code-creation,Builtin,3,7022,0x563e727bada0,88,ThrowWasmTrapUnreachable
code-creation,Builtin,3,7027,0x563e727bae00,88,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,3,7032,0x563e727bae60,88,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,3,7038,0x563e727baec0,88,ThrowWasmTrapDivByZero
code-creation,Builtin,3,7043,0x563e727baf20,88,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,3,7048,0x563e727baf80,88,ThrowWasmTrapRemByZero
code-creation,Builtin,3,7053,0x563e727bafe0,88,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,3,7059,0x563e727bb040,88,ThrowWasmTrapFuncInvalid
code-creation,Builtin,3,7064,0x563e727bb0a0,88,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,3,7070,0x563e727bb100,88,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,3,7075,0x563e727bb160,88,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,3,7081,0x563e727bb1c0,88,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,3,7086,0x563e727bb220,56,WasmI64ToBigInt
code-creation,Builtin,3,7091,0x563e727bb260,12,WasmI32PairToBigInt
code-creation,Builtin,3,7096,0x563e727bb280,56,WasmBigIntToI64
code-creation,Builtin,3,7101,0x563e727bb2c0,12,WasmBigIntToI32Pair
code-creation,Builtin,3,7106,0x563e727bb2e0,27836,WeakMapConstructor
code-creation,Builtin,3,7111,0x563e727c1fa0,2580,WeakMapLookupHashIndex
code-creation,Builtin,3,7116,0x563e727c29c0,1547,WeakMapGet
code-creation,Builtin,3,7121,0x563e727c2fe0,921,WeakMapPrototypeHas
code-creation,Builtin,3,7126,0x563e727c3380,1094,WeakMapPrototypeSet
code-creation,Builtin,3,7131,0x563e727c37e0,683,WeakMapPrototypeDelete
code-creation,Builtin,3,7136,0x563e727c3aa0,15668,WeakSetConstructor
code-creation,Builtin,3,7141,0x563e727c77e0,921,WeakSetPrototypeHas
code-creation,Builtin,3,7146,0x563e727c7b80,1005,WeakSetPrototypeAdd
code-creation,Builtin,3,7151,0x563e727c7f80,683,WeakSetPrototypeDelete
code-creation,Builtin,3,7156,0x563e727c8240,4419,WeakCollectionDelete
code-creation,Builtin,3,7162,0x563e727c93a0,5630,WeakCollectionSet
code-creation,Builtin,3,7167,0x563e727ca9a0,824,AsyncGeneratorResolve
code-creation,Builtin,3,7172,0x563e727cace0,494,AsyncGeneratorReject
code-creation,Builtin,3,7177,0x563e727caee0,5688,AsyncGeneratorYield
code-creation,Builtin,3,7182,0x563e727cc520,5784,AsyncGeneratorReturn
code-creation,Builtin,3,7187,0x563e727cdbc0,662,AsyncGeneratorResumeNext
code-creation,Builtin,3,7192,0x563e727cde60,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,3,7198,0x563e727cde80,1788,AsyncGeneratorPrototypeNext
code-creation,Builtin,3,7203,0x563e727ce580,1784,AsyncGeneratorPrototypeReturn
code-creation,Builtin,3,7209,0x563e727cec80,1792,AsyncGeneratorPrototypeThrow
code-creation,Builtin,3,7214,0x563e727cf3a0,5700,AsyncGeneratorAwaitCaught
code-creation,Builtin,3,7219,0x563e727d0a00,5700,AsyncGeneratorAwaitUncaught
code-creation,Builtin,3,7225,0x563e727d2060,467,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,3,7232,0x563e727d2240,471,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,3,7237,0x563e727d2420,467,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,3,7243,0x563e727d2600,467,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,3,7249,0x563e727d27e0,463,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,3,7255,0x563e727d29c0,467,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,3,7260,0x563e727d2ba0,4756,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,3,7266,0x563e727d3e40,4848,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,3,7272,0x563e727d5140,4868,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,3,7277,0x563e727d6460,590,AsyncIteratorValueUnwrap
code-creation,Builtin,3,7282,0x563e727d66c0,256,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,3,7289,0x563e727d67e0,256,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,3,7295,0x563e727d6900,239,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,3,7302,0x563e727d6a00,433,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,3,7308,0x563e727d6bc0,433,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,3,7314,0x563e727d6d80,256,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,3,7321,0x563e727d6ea0,256,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,3,7327,0x563e727d6fc0,239,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,3,7334,0x563e727d70c0,433,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,3,7340,0x563e727d7280,433,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,3,7346,0x563e727d7440,1,DirectCEntry
code-creation,Builtin,3,7351,0x563e727d7460,4200,StringAdd_CheckNone
code-creation,Builtin,3,7356,0x563e727d84e0,8886,SubString
code-creation,Builtin,3,7361,0x563e727da7a0,14,StackCheck
code-creation,Builtin,3,7365,0x563e727da7c0,82,DoubleToI
code-creation,Builtin,3,7370,0x563e727da820,18485,GetProperty
code-creation,Builtin,3,7375,0x563e727df060,19265,GetPropertyWithReceiver
code-creation,Builtin,3,7380,0x563e727e3bc0,67200,SetProperty
code-creation,Builtin,3,7385,0x563e727f4260,52995,SetPropertyInLiteral
code-creation,Builtin,3,7390,0x563e72801180,5,MemCopyUint8Uint8
code-creation,Builtin,3,7395,0x563e728011a0,5,MemMove
code-creation,Builtin,3,7400,0x563e728011c0,12,IsTraceCategoryEnabled
code-creation,Builtin,3,7405,0x563e728011e0,12,Trace
code-creation,Builtin,3,7410,0x563e72801200,12,FinalizationGroupCleanupIteratorNext
code-creation,Builtin,3,7415,0x563e72801220,12,FinalizationGroupCleanupSome
code-creation,Builtin,3,7421,0x563e72801240,12,FinalizationGroupConstructor
code-creation,Builtin,3,7426,0x563e72801260,12,FinalizationGroupRegister
code-creation,Builtin,3,7432,0x563e72801280,12,FinalizationGroupUnregister
code-creation,Builtin,3,7437,0x563e728012a0,12,WeakRefConstructor
code-creation,Builtin,3,7442,0x563e728012c0,12,WeakRefDeref
code-creation,Builtin,3,7447,0x563e728012e0,1116,AsyncModuleEvaluate
code-creation,Builtin,3,7452,0x563e72801740,12,CallAsyncModuleFulfilled
code-creation,Builtin,3,7457,0x563e72801760,12,CallAsyncModuleRejected
code-creation,Builtin,3,7462,0x563e72801780,38819,ArrayPrototypeCopyWithin
code-creation,Builtin,3,7467,0x563e7280af40,1343,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,3,7473,0x563e7280b480,2920,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,3,7479,0x563e7280c000,20862,ArrayEveryLoopContinuation
code-creation,Builtin,3,7484,0x563e72811180,6928,ArrayEvery
code-creation,Builtin,3,7489,0x563e72812ca0,1887,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,3,7495,0x563e72813400,4402,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,3,7500,0x563e72814540,22184,ArrayFilterLoopContinuation
code-creation,Builtin,3,7506,0x563e72819c00,19512,ArrayFilter
code-creation,Builtin,3,7510,0x563e7281e840,1339,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,3,7518,0x563e7281ed80,211,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,3,7524,0x563e7281ee60,1958,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,3,7530,0x563e7281f620,3070,ArrayFindLoopContinuation
code-creation,Builtin,3,7535,0x563e72820220,6916,ArrayPrototypeFind
code-creation,Builtin,3,7540,0x563e72821d40,1440,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,3,7546,0x563e72822300,211,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,3,7552,0x563e728223e0,2059,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,3,7558,0x563e72822c00,3074,ArrayFindIndexLoopContinuation
code-creation,Builtin,3,7564,0x563e72823820,7011,ArrayPrototypeFindIndex
code-creation,Builtin,3,7569,0x563e728253a0,1343,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,3,7575,0x563e728258e0,1343,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,3,7580,0x563e72825e20,20221,ArrayForEachLoopContinuation
code-creation,Builtin,3,7586,0x563e7282ad20,6267,ArrayForEach
code-creation,Builtin,3,7591,0x563e7282c5a0,3420,LoadJoinElement20ATDictionaryElements
code-creation,Builtin,3,7596,0x563e7282d300,2204,LoadJoinElement25ATFastSmiOrObjectElements
code-creation,Builtin,3,7602,0x563e7282dba0,957,LoadJoinElement20ATFastDoubleElements
code-creation,Builtin,3,7608,0x563e7282df60,993,ConvertToLocaleString
code-creation,Builtin,3,7613,0x563e7282e360,2638,JoinStackPush
code-creation,Builtin,3,7618,0x563e7282edc0,938,JoinStackPop
code-creation,Builtin,3,7623,0x563e7282f180,28240,ArrayPrototypeJoin
code-creation,Builtin,3,7628,0x563e72835fe0,24976,ArrayPrototypeToLocaleString
code-creation,Builtin,3,7633,0x563e7283c180,1092,ArrayPrototypeToString
code-creation,Builtin,3,7638,0x563e7283c5e0,20800,TypedArrayPrototypeJoin
code-creation,Builtin,3,7644,0x563e72841740,17472,TypedArrayPrototypeToLocaleString
code-creation,Builtin,3,7649,0x563e72845ba0,26067,ArrayPrototypeLastIndexOf
code-creation,Builtin,3,7654,0x563e7284c180,1641,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,3,7660,0x563e7284c800,2608,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,3,7666,0x563e7284d240,20492,ArrayMapLoopContinuation
code-creation,Builtin,3,7671,0x563e72852260,15220,ArrayMap
code-creation,Builtin,3,7676,0x563e72855de0,4538,ArrayOf
code-creation,Builtin,3,7680,0x563e72856fa0,1081,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,3,7686,0x563e728573e0,1339,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,3,7692,0x563e72857920,1339,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,3,7698,0x563e72857e60,19657,ArrayReduceRightLoopContinuation
code-creation,Builtin,3,7704,0x563e7285cb40,9412,ArrayReduceRight
code-creation,Builtin,3,7709,0x563e7285f020,1081,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,3,7714,0x563e7285f460,1339,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,3,7720,0x563e7285f9a0,1339,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,3,7726,0x563e7285fee0,20522,ArrayReduceLoopContinuation
code-creation,Builtin,3,7731,0x563e72864f20,9144,ArrayReduce
code-creation,Builtin,3,7736,0x563e728672e0,24273,ArrayPrototypeReverse
code-creation,Builtin,3,7741,0x563e7286d1c0,19252,ArrayPrototypeShift
code-creation,Builtin,3,7746,0x563e72871d00,37200,ArrayPrototypeSlice
code-creation,Builtin,3,7751,0x563e7287ae60,1343,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,3,7757,0x563e7287b3a0,2900,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,3,7763,0x563e7287bf00,20850,ArraySomeLoopContinuation
code-creation,Builtin,3,7768,0x563e72881080,6912,ArraySome
code-creation,Builtin,3,7773,0x563e72882ba0,84816,ArrayPrototypeSplice
code-creation,Builtin,3,7778,0x563e72897700,16337,ArrayPrototypeUnshift
code-creation,Builtin,3,7783,0x563e7289b6e0,3870,ToString
code-creation,Builtin,3,7788,0x563e7289c600,12410,FastCreateDataProperty
code-creation,Builtin,3,7793,0x563e7289f680,3576,CheckNumberInRange
code-creation,Builtin,3,7798,0x563e728a0480,2994,BigIntAddNoThrow
code-creation,Builtin,3,7805,0x563e728a1040,3446,BigIntAdd
code-creation,Builtin,3,7810,0x563e728a1dc0,578,BigIntUnaryMinus
code-creation,Builtin,3,7815,0x563e728a2020,4998,BooleanConstructor
code-creation,Builtin,3,7820,0x563e728a33c0,629,DataViewPrototypeGetBuffer
code-creation,Builtin,3,7825,0x563e728a3640,880,DataViewPrototypeGetByteLength
code-creation,Builtin,3,7831,0x563e728a39c0,880,DataViewPrototypeGetByteOffset
code-creation,Builtin,3,7836,0x563e728a3d40,4424,DataViewPrototypeGetUint8
code-creation,Builtin,3,7841,0x563e728a4ea0,4356,DataViewPrototypeGetInt8
code-creation,Builtin,3,7847,0x563e728a5fc0,4672,DataViewPrototypeGetUint16
code-creation,Builtin,3,7852,0x563e728a7220,4644,DataViewPrototypeGetInt16
code-creation,Builtin,3,7857,0x563e728a8460,4782,DataViewPrototypeGetUint32
code-creation,Builtin,3,7863,0x563e728a9720,4746,DataViewPrototypeGetInt32
code-creation,Builtin,3,7868,0x563e728aa9c0,4726,DataViewPrototypeGetFloat32
code-creation,Builtin,3,7873,0x563e728abc40,4902,DataViewPrototypeGetFloat64
code-creation,Builtin,3,7879,0x563e728acf80,5506,DataViewPrototypeGetBigUint64
code-creation,Builtin,3,7884,0x563e728ae520,5534,DataViewPrototypeGetBigInt64
code-creation,Builtin,3,7889,0x563e728afac0,6510,DataViewPrototypeSetUint8
code-creation,Builtin,3,7895,0x563e728b1440,6510,DataViewPrototypeSetInt8
code-creation,Builtin,3,7900,0x563e728b2dc0,6634,DataViewPrototypeSetUint16
code-creation,Builtin,3,7905,0x563e728b47c0,6634,DataViewPrototypeSetInt16
code-creation,Builtin,3,7910,0x563e728b61c0,6670,DataViewPrototypeSetUint32
code-creation,Builtin,3,7916,0x563e728b7be0,6670,DataViewPrototypeSetInt32
code-creation,Builtin,3,7921,0x563e728b9600,6634,DataViewPrototypeSetFloat32
code-creation,Builtin,3,7926,0x563e728bb000,6698,DataViewPrototypeSetFloat64
code-creation,Builtin,3,7932,0x563e728bca40,5342,DataViewPrototypeSetBigUint64
code-creation,Builtin,3,7942,0x563e728bdf20,5342,DataViewPrototypeSetBigInt64
code-creation,Builtin,3,7948,0x563e728bf400,388,ExtrasUtilsCreatePrivateSymbol
code-creation,Builtin,3,7954,0x563e728bf5a0,388,ExtrasUtilsMarkPromiseAsHandled
code-creation,Builtin,3,7960,0x563e728bf740,388,ExtrasUtilsPromiseState
code-creation,Builtin,3,7966,0x563e728bf8e0,2062,IncBlockCounter
code-creation,Builtin,3,7972,0x563e728c0100,268,GetIteratorWithFeedback
code-creation,Builtin,3,7978,0x563e728c0220,2048,CallIteratorWithFeedback
code-creation,Builtin,3,7984,0x563e728c0a40,1314,MathAcos
code-creation,Builtin,3,7989,0x563e728c0f80,1314,MathAcosh
code-creation,Builtin,3,7994,0x563e728c14c0,1314,MathAsin
code-creation,Builtin,3,8000,0x563e728c1a00,1314,MathAsinh
code-creation,Builtin,3,8005,0x563e728c1f40,1314,MathAtan
code-creation,Builtin,3,8010,0x563e728c2480,2302,MathAtan2
code-creation,Builtin,3,8016,0x563e728c2d80,1314,MathAtanh
code-creation,Builtin,3,8021,0x563e728c32c0,1314,MathCbrt
code-creation,Builtin,3,8026,0x563e728c3800,1092,MathClz32
code-creation,Builtin,3,8032,0x563e728c3c60,1314,MathCos
code-creation,Builtin,3,8037,0x563e728c41a0,1314,MathCosh
code-creation,Builtin,3,8042,0x563e728c46e0,1314,MathExp
code-creation,Builtin,3,8048,0x563e728c4c20,1314,MathExpm1
code-creation,Builtin,3,8053,0x563e728c5160,1254,MathFround
code-creation,Builtin,3,8058,0x563e728c5660,1314,MathLog
code-creation,Builtin,3,8064,0x563e728c5ba0,1314,MathLog1p
code-creation,Builtin,3,8069,0x563e728c60e0,1314,MathLog10
code-creation,Builtin,3,8074,0x563e728c6620,1314,MathLog2
code-creation,Builtin,3,8080,0x563e728c6b60,1314,MathSin
code-creation,Builtin,3,8085,0x563e728c70a0,1193,MathSign
code-creation,Builtin,3,8090,0x563e728c7560,1314,MathSinh
code-creation,Builtin,3,8096,0x563e728c7aa0,1250,MathSqrt
code-creation,Builtin,3,8101,0x563e728c7fa0,1314,MathTan
code-creation,Builtin,3,8106,0x563e728c84e0,1314,MathTanh
code-creation,Builtin,3,8112,0x563e728c8a20,2738,MathHypot
code-creation,Builtin,3,8117,0x563e728c94e0,19140,ObjectFromEntries
code-creation,Builtin,3,8123,0x563e728cdfc0,630,ObjectIsExtensible
code-creation,Builtin,3,8128,0x563e728ce240,638,ObjectPreventExtensions
code-creation,Builtin,3,8134,0x563e728ce4c0,957,ObjectGetPrototypeOf
code-creation,Builtin,3,8142,0x563e728ce880,1142,ObjectSetPrototypeOf
code-creation,Builtin,3,8148,0x563e728ced00,2091,ProxyConstructor
code-creation,Builtin,3,8153,0x563e728cf540,15179,ProxyDeleteProperty
code-creation,Builtin,3,8159,0x563e728d30a0,16725,ProxyGetProperty
code-creation,Builtin,3,8165,0x563e728d7200,6538,ProxyGetPrototypeOf
code-creation,Builtin,3,8171,0x563e728d8ba0,14946,ProxyHasProperty
code-creation,Builtin,3,8176,0x563e728dc620,3707,ProxyIsExtensible
code-creation,Builtin,3,8182,0x563e728dd4a0,3653,ProxyPreventExtensions
code-creation,Builtin,3,8188,0x563e728de300,5122,ProxyRevocable
code-creation,Builtin,3,8193,0x563e728df720,592,ProxyRevoke
code-creation,Builtin,3,8199,0x563e728df980,17921,ProxySetProperty
code-creation,Builtin,3,8205,0x563e728e3fa0,7514,ProxySetPrototypeOf
code-creation,Builtin,3,8210,0x563e728e5d00,780,ReflectIsExtensible
code-creation,Builtin,3,8216,0x563e728e6020,784,ReflectPreventExtensions
code-creation,Builtin,3,8222,0x563e728e6340,679,ReflectGetPrototypeOf
code-creation,Builtin,3,8228,0x563e728e6600,1191,ReflectSetPrototypeOf
code-creation,Builtin,3,8234,0x563e728e6ac0,894,ReflectGet
code-creation,Builtin,3,8239,0x563e728e6e40,618,ReflectDeleteProperty
code-creation,Builtin,3,8245,0x563e728e70c0,26117,RegExpPrototypeExecSlow
code-creation,Builtin,3,8251,0x563e728ed6e0,27782,RegExpPrototypeExec
code-creation,Builtin,3,8256,0x563e728f4380,15328,RegExpPrototypeMatchAll
code-creation,Builtin,3,8262,0x563e728f7f80,57280,RegExpMatchFast
code-creation,Builtin,3,8268,0x563e72905f60,16895,RegExpPrototypeMatch
code-creation,Builtin,3,8274,0x563e7290a160,33680,RegExpReplace
code-creation,Builtin,3,8279,0x563e72912500,3032,RegExpPrototypeReplace
code-creation,Builtin,3,8285,0x563e729130e0,16200,RegExpSearchFast
code-creation,Builtin,3,8291,0x563e72917040,10088,RegExpPrototypeSearch
code-creation,Builtin,3,8296,0x563e729197c0,1093,RegExpPrototypeSourceGetter
code-creation,Builtin,3,8303,0x563e72919c20,22616,RegExpSplit
code-creation,Builtin,3,8308,0x563e7291f480,3056,RegExpPrototypeSplit
code-creation,Builtin,3,8314,0x563e72920080,17576,RegExpPrototypeTest
code-creation,Builtin,3,8320,0x563e72924540,11848,RegExpPrototypeTestFast
code-creation,Builtin,3,8326,0x563e729273a0,1161,RegExpPrototypeGlobalGetter
code-creation,Builtin,3,8332,0x563e72927840,1165,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,3,8338,0x563e72927ce0,1165,RegExpPrototypeMultilineGetter
code-creation,Builtin,3,8344,0x563e72928180,1128,RegExpPrototypeDotAllGetter
code-creation,Builtin,3,8350,0x563e72928600,1165,RegExpPrototypeStickyGetter
code-creation,Builtin,3,8356,0x563e72928aa0,1165,RegExpPrototypeUnicodeGetter
code-creation,Builtin,3,8362,0x563e72928f40,8140,RegExpPrototypeFlagsGetter
code-creation,Builtin,3,8368,0x563e7292af20,536,StringPrototypeToString
code-creation,Builtin,3,8374,0x563e7292b140,536,StringPrototypeValueOf
code-creation,Builtin,3,8380,0x563e7292b360,8426,StringToList
code-creation,Builtin,3,8385,0x563e7292d460,4566,StringPrototypeCharAt
code-creation,Builtin,3,8391,0x563e7292e640,3086,StringPrototypeCharCodeAt
code-creation,Builtin,3,8397,0x563e7292f260,5182,StringPrototypeCodePointAt
code-creation,Builtin,3,8403,0x563e729306a0,1352,StringPrototypeConcat
code-creation,Builtin,3,8409,0x563e72930c00,5204,StringConstructor
code-creation,Builtin,3,8415,0x563e72932060,4258,StringAddConvertLeft
code-creation,Builtin,3,8421,0x563e72933120,4258,StringAddConvertRight
code-creation,Builtin,3,8426,0x563e729341e0,16518,StringPrototypeEndsWith
code-creation,Builtin,3,8432,0x563e72938280,2580,CreateHTML
code-creation,Builtin,3,8438,0x563e72938ca0,420,StringPrototypeAnchor
code-creation,Builtin,3,8444,0x563e72938e60,376,StringPrototypeBig
code-creation,Builtin,3,8449,0x563e72938fe0,376,StringPrototypeBlink
code-creation,Builtin,3,8455,0x563e72939160,376,StringPrototypeBold
code-creation,Builtin,3,8461,0x563e729392e0,428,StringPrototypeFontcolor
code-creation,Builtin,3,8467,0x563e729394a0,428,StringPrototypeFontsize
code-creation,Builtin,3,8473,0x563e72939660,376,StringPrototypeFixed
code-creation,Builtin,3,8480,0x563e729397e0,376,StringPrototypeItalics
code-creation,Builtin,3,8486,0x563e72939960,428,StringPrototypeLink
code-creation,Builtin,3,8492,0x563e72939b20,376,StringPrototypeSmall
code-creation,Builtin,3,8498,0x563e72939ca0,376,StringPrototypeStrike
code-creation,Builtin,3,8504,0x563e72939e20,376,StringPrototypeSub
code-creation,Builtin,3,8509,0x563e72939fa0,376,StringPrototypeSup
code-creation,Builtin,3,8515,0x563e7293a120,1106,StringPrototypeIterator
code-creation,Builtin,3,8521,0x563e7293a580,7518,StringIteratorPrototypeNext
code-creation,Builtin,3,8527,0x563e7293c2e0,3766,StringPrototypePadStart
code-creation,Builtin,3,8533,0x563e7293d1a0,3766,StringPrototypePadEnd
code-creation,Builtin,3,8538,0x563e7293e060,452,StringRepeat
code-creation,Builtin,3,8544,0x563e7293e240,1962,StringPrototypeRepeat
code-creation,Builtin,3,8550,0x563e7293ea00,11114,StringPrototypeSlice
code-creation,Builtin,3,8555,0x563e72941580,17242,StringPrototypeStartsWith
code-creation,Builtin,3,8561,0x563e729458e0,10434,StringPrototypeSubstring
code-creation,Builtin,3,8567,0x563e729481c0,28836,CreateTypedArray
code-creation,Builtin,3,8573,0x563e7294f280,2880,TypedArrayPrototypeEvery
code-creation,Builtin,3,8579,0x563e7294fde0,9995,TypedArrayPrototypeFilter
code-creation,Builtin,3,8585,0x563e72952500,2864,TypedArrayPrototypeFind
code-creation,Builtin,3,8591,0x563e72953040,2860,TypedArrayPrototypeFindIndex
code-creation,Builtin,3,8597,0x563e72953b80,2222,TypedArrayPrototypeForEach
code-creation,Builtin,3,8603,0x563e72954440,2532,TypedArrayPrototypeReduce
code-creation,Builtin,3,8609,0x563e72954e40,2580,TypedArrayPrototypeReduceRight
code-creation,Builtin,3,8615,0x563e72955860,7820,TypedArrayPrototypeSlice
code-creation,Builtin,3,8621,0x563e72957700,2856,TypedArrayPrototypeSome
code-creation,Builtin,3,8627,0x563e72958240,6440,TypedArrayPrototypeSubArray
code-creation,Builtin,3,8633,0x563e72959b80,7016,TypedArrayMergeSort
code-creation,Builtin,3,8639,0x563e7295b700,5628,TypedArrayPrototypeSort
code-creation,Builtin,3,8645,0x563e7295cd00,12,GenericBuiltinTest90UT8ATBigInt7ATFalse6ATNull5ATSmi6ATTrue11ATUndefined10HeapNumber10JSReceiver6String6Symbol
code-creation,Builtin,3,8654,0x563e7295cd20,76,TestHelperPlus1
code-creation,Builtin,3,8660,0x563e7295cd80,76,TestHelperPlus2
code-creation,Builtin,3,8665,0x563e7295cde0,117,NewSmiBox
code-creation,Builtin,3,8670,0x563e7295ce60,2402,Load17ATFastSmiElements
code-creation,Builtin,3,8676,0x563e7295d7e0,2402,Load20ATFastObjectElements
code-creation,Builtin,3,8682,0x563e7295e160,1070,Load20ATFastDoubleElements
code-creation,Builtin,3,8688,0x563e7295e5a0,1356,Store17ATFastSmiElements
code-creation,Builtin,3,8694,0x563e7295eb00,1135,Store20ATFastObjectElements
code-creation,Builtin,3,8700,0x563e7295ef80,1465,Store20ATFastDoubleElements
code-creation,Builtin,3,8706,0x563e7295f540,1341,Delete17ATFastSmiElements
code-creation,Builtin,3,8712,0x563e7295fa80,1341,Delete20ATFastObjectElements
code-creation,Builtin,3,8718,0x563e7295ffc0,1215,Delete20ATFastDoubleElements
code-creation,Builtin,3,8724,0x563e72960480,1622,SortCompareDefault
code-creation,Builtin,3,8730,0x563e72960ae0,1040,SortCompareUserFn
code-creation,Builtin,3,8736,0x563e72960f00,16,CanUseSameAccessor25ATGenericElementsAccessor
code-creation,Builtin,3,8743,0x563e72960f20,2168,Copy
code-creation,Builtin,3,8748,0x563e729617a0,38090,MergeAt
code-creation,Builtin,3,8753,0x563e7296ac80,11586,GallopLeft
code-creation,Builtin,3,8758,0x563e7296d9e0,11069,GallopRight
code-creation,Builtin,3,8764,0x563e72970520,32952,ArrayTimSort
code-creation,Builtin,3,8769,0x563e729785e0,8937,ArrayPrototypeSort
code-creation,Builtin,3,8775,0x563e7297a8e0,41,LoadJoinElement25ATGenericElementsAccessor
code-creation,Builtin,3,8782,0x563e7297a920,885,LoadJoinTypedElement15ATInt32Elements
code-creation,Builtin,3,8788,0x563e7297aca0,857,LoadJoinTypedElement17ATFloat32Elements
code-creation,Builtin,3,8795,0x563e7297b000,853,LoadJoinTypedElement17ATFloat64Elements
code-creation,Builtin,3,8801,0x563e7297b360,788,LoadJoinTypedElement22ATUint8ClampedElements
code-creation,Builtin,3,8810,0x563e7297b680,1010,LoadJoinTypedElement19ATBigUint64Elements
code-creation,Builtin,3,8816,0x563e7297ba80,1038,LoadJoinTypedElement18ATBigInt64Elements
code-creation,Builtin,3,8823,0x563e7297bea0,788,LoadJoinTypedElement15ATUint8Elements
code-creation,Builtin,3,8829,0x563e7297c1c0,760,LoadJoinTypedElement14ATInt8Elements
code-creation,Builtin,3,8836,0x563e7297c4c0,784,LoadJoinTypedElement16ATUint16Elements
code-creation,Builtin,3,8842,0x563e7297c7e0,756,LoadJoinTypedElement15ATInt16Elements
code-creation,Builtin,3,8848,0x563e7297cae0,889,LoadJoinTypedElement16ATUint32Elements
code-creation,Builtin,3,8855,0x563e7297ce60,225,LoadFixedElement15ATInt32Elements
code-creation,Builtin,3,8861,0x563e7297cf60,193,LoadFixedElement17ATFloat32Elements
code-creation,Builtin,3,8868,0x563e7297d040,189,LoadFixedElement17ATFloat64Elements
code-creation,Builtin,3,8874,0x563e7297d100,116,LoadFixedElement22ATUint8ClampedElements
code-creation,Builtin,3,8880,0x563e7297d180,377,LoadFixedElement19ATBigUint64Elements
code-creation,Builtin,3,8887,0x563e7297d300,401,LoadFixedElement18ATBigInt64Elements
code-creation,Builtin,3,8893,0x563e7297d4a0,116,LoadFixedElement15ATUint8Elements
code-creation,Builtin,3,8899,0x563e7297d520,92,LoadFixedElement14ATInt8Elements
code-creation,Builtin,3,8906,0x563e7297d580,116,LoadFixedElement16ATUint16Elements
code-creation,Builtin,3,8912,0x563e7297d600,92,LoadFixedElement15ATInt16Elements
code-creation,Builtin,3,8918,0x563e7297d660,229,LoadFixedElement16ATUint32Elements
code-creation,Builtin,3,8925,0x563e7297d760,844,StoreFixedElement15ATInt32Elements
code-creation,Builtin,3,8931,0x563e7297dac0,417,StoreFixedElement17ATFloat32Elements
code-creation,Builtin,3,8937,0x563e7297dc80,413,StoreFixedElement17ATFloat64Elements
code-creation,Builtin,3,8944,0x563e7297de20,321,StoreFixedElement22ATUint8ClampedElements
code-creation,Builtin,3,8950,0x563e7297df80,349,StoreFixedElement19ATBigUint64Elements
code-creation,Builtin,3,8957,0x563e7297e0e0,349,StoreFixedElement18ATBigInt64Elements
code-creation,Builtin,3,8963,0x563e7297e240,245,StoreFixedElement15ATUint8Elements
code-creation,Builtin,3,8969,0x563e7297e340,245,StoreFixedElement14ATInt8Elements
code-creation,Builtin,3,8976,0x563e7297e440,241,StoreFixedElement16ATUint16Elements
code-creation,Builtin,3,8982,0x563e7297e540,241,StoreFixedElement15ATInt16Elements
code-creation,Builtin,3,8988,0x563e7297e640,844,StoreFixedElement16ATUint32Elements
code-creation,Builtin,3,8995,0x563e7297e9a0,16,GenericBuiltinTest5ATSmi
code-creation,Builtin,3,9000,0x563e7297e9c0,845,CanUseSameAccessor20ATFastDoubleElements
code-creation,Builtin,3,9007,0x563e7297ed20,845,CanUseSameAccessor17ATFastSmiElements
code-creation,Builtin,3,9013,0x563e7297f080,845,CanUseSameAccessor20ATFastObjectElements
code-creation,Builtin,3,9023,0x563e7297f3e0,17909,Load25ATGenericElementsAccessor
code-creation,Builtin,3,9029,0x563e729839e0,178,Store25ATGenericElementsAccessor
code-creation,Builtin,3,9035,0x563e72983aa0,267,Delete25ATGenericElementsAccessor
code-creation,Builtin,3,9042,0x563e72983bc0,12,StringPrototypeNormalize
code-creation,Builtin,3,9047,0x563e72983be0,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,3,9054,0x563e72983c00,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,3,9060,0x563e72983c20,12,StringPrototypeToLowerCase
code-creation,Builtin,3,9066,0x563e72983c40,12,StringPrototypeToUpperCase
code-creation,BytecodeHandler,1,9073,0x563e72983c60,313,Wide
code-creation,BytecodeHandler,1,9078,0x563e72983da0,313,ExtraWide
code-creation,BytecodeHandler,1,9084,0x563e72983ee0,910,DebugBreakWide
code-creation,BytecodeHandler,1,9090,0x563e72984280,910,DebugBreakExtraWide
code-creation,BytecodeHandler,1,9096,0x563e72984620,910,DebugBreak0
code-creation,BytecodeHandler,1,9102,0x563e729849c0,910,DebugBreak1
code-creation,BytecodeHandler,1,9107,0x563e72984d60,910,DebugBreak2
code-creation,BytecodeHandler,1,9113,0x563e72985100,910,DebugBreak3
code-creation,BytecodeHandler,1,9119,0x563e729854a0,910,DebugBreak4
code-creation,BytecodeHandler,1,9125,0x563e72985840,910,DebugBreak5
code-creation,BytecodeHandler,1,9132,0x563e72985be0,910,DebugBreak6
code-creation,BytecodeHandler,1,9138,0x563e72985f80,382,LdaZero
code-creation,BytecodeHandler,1,9144,0x563e72986100,382,LdaSmi
code-creation,BytecodeHandler,1,9149,0x563e72986280,382,LdaUndefined
code-creation,BytecodeHandler,1,9155,0x563e72986400,382,LdaNull
code-creation,BytecodeHandler,1,9161,0x563e72986580,382,LdaTheHole
code-creation,BytecodeHandler,1,9166,0x563e72986700,318,LdaTrue
code-creation,BytecodeHandler,1,9172,0x563e72986840,318,LdaFalse
code-creation,BytecodeHandler,1,9178,0x563e72986980,1108,LdaConstant
code-creation,BytecodeHandler,1,9184,0x563e72986de0,30775,LdaGlobal
code-creation,BytecodeHandler,1,9189,0x563e7298e620,28336,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,1,9196,0x563e729954e0,2060,StaGlobal
code-creation,BytecodeHandler,1,9201,0x563e72995d00,552,PushContext
code-creation,BytecodeHandler,1,9207,0x563e72995f40,458,PopContext
code-creation,BytecodeHandler,1,9213,0x563e72996120,760,LdaContextSlot
code-creation,BytecodeHandler,1,9219,0x563e72996420,696,LdaImmutableContextSlot
code-creation,BytecodeHandler,1,9225,0x563e729966e0,542,LdaCurrentContextSlot
code-creation,BytecodeHandler,1,9231,0x563e72996900,475,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,1,9238,0x563e72996ae0,784,StaContextSlot
code-creation,BytecodeHandler,1,9244,0x563e72996e00,566,StaCurrentContextSlot
code-creation,BytecodeHandler,1,9250,0x563e72997040,1432,LdaLookupSlot
code-creation,BytecodeHandler,1,9256,0x563e729975e0,1948,LdaLookupContextSlot
code-creation,BytecodeHandler,1,9262,0x563e72997d80,30736,LdaLookupGlobalSlot
code-creation,BytecodeHandler,1,9268,0x563e7299f5a0,1432,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,1,9274,0x563e7299fb40,1948,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,1,9281,0x563e729a02e0,29757,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,1,9288,0x563e729a7720,1640,StaLookupSlot
code-creation,BytecodeHandler,1,9293,0x563e729a7da0,330,Ldar
code-creation,BytecodeHandler,1,9299,0x563e729a7f00,321,Star
code-creation,BytecodeHandler,1,9305,0x563e729a8060,329,Mov
code-creation,BytecodeHandler,1,9310,0x563e729a81c0,37724,LdaNamedProperty
code-creation,BytecodeHandler,1,9316,0x563e729b1520,1440,LdaNamedPropertyNoFeedback
code-creation,BytecodeHandler,1,9322,0x563e729b1ae0,1256,LdaKeyedProperty
code-creation,BytecodeHandler,1,9328,0x563e729b1fe0,2494,LdaModuleVariable
code-creation,BytecodeHandler,1,9334,0x563e729b29a0,1892,StaModuleVariable
code-creation,BytecodeHandler,1,9340,0x563e729b3120,2026,StaNamedProperty
code-creation,BytecodeHandler,1,9346,0x563e729b3920,1456,StaNamedPropertyNoFeedback
code-creation,BytecodeHandler,1,9353,0x563e729b3ee0,2026,StaNamedOwnProperty
code-creation,BytecodeHandler,1,9359,0x563e729b46e0,1216,StaKeyedProperty
code-creation,BytecodeHandler,1,9365,0x563e729b4bc0,1216,StaInArrayLiteral
code-creation,BytecodeHandler,1,9371,0x563e729b50a0,1276,StaDataPropertyInLiteral
code-creation,BytecodeHandler,1,9377,0x563e729b55a0,1196,CollectTypeProfile
code-creation,BytecodeHandler,1,9383,0x563e729b5a60,5092,Add
code-creation,BytecodeHandler,1,9389,0x563e729b6e60,4530,Sub
code-creation,BytecodeHandler,1,9394,0x563e729b8020,4784,Mul
code-creation,BytecodeHandler,1,9400,0x563e729b92e0,4586,Div
code-creation,BytecodeHandler,1,9405,0x563e729ba4e0,4618,Mod
code-creation,BytecodeHandler,1,9411,0x563e729bb700,1608,Exp
code-creation,BytecodeHandler,1,9416,0x563e729bbd60,5559,BitwiseOr
code-creation,BytecodeHandler,1,9422,0x563e729bd320,5563,BitwiseXor
code-creation,BytecodeHandler,1,9428,0x563e729be8e0,5555,BitwiseAnd
code-creation,BytecodeHandler,1,9433,0x563e729bfea0,5555,ShiftLeft
code-creation,BytecodeHandler,1,9439,0x563e729c1460,5555,ShiftRight
code-creation,BytecodeHandler,1,9445,0x563e729c2a20,5563,ShiftRightLogical
code-creation,BytecodeHandler,1,9451,0x563e729c3fe0,4220,AddSmi
code-creation,BytecodeHandler,1,9456,0x563e729c5060,3758,SubSmi
code-creation,BytecodeHandler,1,9462,0x563e729c5f20,3860,MulSmi
code-creation,BytecodeHandler,1,9468,0x563e729c6e40,3754,DivSmi
code-creation,BytecodeHandler,1,9475,0x563e729c7d00,3778,ModSmi
code-creation,BytecodeHandler,1,9480,0x563e729c8be0,1636,ExpSmi
code-creation,BytecodeHandler,1,9486,0x563e729c9260,3576,BitwiseOrSmi
code-creation,BytecodeHandler,1,9492,0x563e729ca060,3576,BitwiseXorSmi
code-creation,BytecodeHandler,1,9498,0x563e729cae60,3576,BitwiseAndSmi
code-creation,BytecodeHandler,1,9503,0x563e729cbc60,3576,ShiftLeftSmi
code-creation,BytecodeHandler,1,9509,0x563e729cca60,3576,ShiftRightSmi
code-creation,BytecodeHandler,1,9515,0x563e729cd860,3580,ShiftRightLogicalSmi
code-creation,BytecodeHandler,1,9521,0x563e729ce660,3194,Inc
code-creation,BytecodeHandler,1,9527,0x563e729cf2e0,3194,Dec
code-creation,BytecodeHandler,1,9532,0x563e729cff60,3272,Negate
code-creation,BytecodeHandler,1,9538,0x563e729d0c40,3659,BitwiseNot
code-creation,BytecodeHandler,1,9544,0x563e729d1aa0,881,ToBooleanLogicalNot
code-creation,BytecodeHandler,1,9550,0x563e729d1e20,353,LogicalNot
code-creation,BytecodeHandler,1,9555,0x563e729d1fa0,905,TypeOf
code-creation,BytecodeHandler,1,9561,0x563e729d2340,622,DeletePropertyStrict
code-creation,BytecodeHandler,1,9567,0x563e729d25c0,622,DeletePropertySloppy
code-creation,BytecodeHandler,1,9573,0x563e729d2840,1118,GetSuperConstructor
code-creation,BytecodeHandler,1,9579,0x563e729d2ca0,2458,CallAnyReceiver
code-creation,BytecodeHandler,1,9585,0x563e729d3640,2458,CallProperty
code-creation,BytecodeHandler,1,9591,0x563e729d3fe0,2374,CallProperty0
code-creation,BytecodeHandler,1,9597,0x563e729d4940,2390,CallProperty1
code-creation,BytecodeHandler,1,9603,0x563e729d52a0,2406,CallProperty2
code-creation,BytecodeHandler,1,9609,0x563e729d5c20,2430,CallUndefinedReceiver
code-creation,BytecodeHandler,1,9615,0x563e729d65a0,2358,CallUndefinedReceiver0
code-creation,BytecodeHandler,1,9621,0x563e729d6ee0,2390,CallUndefinedReceiver1
code-creation,BytecodeHandler,1,9627,0x563e729d7840,2406,CallUndefinedReceiver2
code-creation,BytecodeHandler,1,9633,0x563e729d81c0,539,CallNoFeedback
code-creation,BytecodeHandler,1,9639,0x563e729d83e0,2458,CallWithSpread
code-creation,BytecodeHandler,1,9645,0x563e729d8d80,722,CallRuntime
code-creation,BytecodeHandler,1,9651,0x563e729d9060,938,CallRuntimeForPair
code-creation,BytecodeHandler,1,9657,0x563e729d9420,539,CallJSRuntime
code-creation,BytecodeHandler,1,9663,0x563e729d9640,11348,InvokeIntrinsic
code-creation,BytecodeHandler,1,9669,0x563e729dc2a0,3860,Construct
code-creation,BytecodeHandler,1,9675,0x563e729dd1c0,2792,ConstructWithSpread
code-creation,BytecodeHandler,1,9681,0x563e729ddcc0,8386,TestEqual
code-creation,BytecodeHandler,1,9686,0x563e729dfda0,6976,TestEqualStrict
code-creation,BytecodeHandler,1,9692,0x563e729e1900,7020,TestLessThan
code-creation,BytecodeHandler,1,9698,0x563e729e3480,7020,TestGreaterThan
code-creation,BytecodeHandler,1,9704,0x563e729e5000,7020,TestLessThanOrEqual
code-creation,BytecodeHandler,1,9710,0x563e729e6b80,7020,TestGreaterThanOrEqual
code-creation,BytecodeHandler,1,9716,0x563e729e8700,337,TestReferenceEqual
code-creation,BytecodeHandler,1,9722,0x563e729e8860,3952,TestInstanceOf
code-creation,BytecodeHandler,1,9728,0x563e729e97e0,1196,TestIn
code-creation,BytecodeHandler,1,9734,0x563e729e9ca0,581,TestUndetectable
code-creation,BytecodeHandler,1,9740,0x563e729e9f00,338,TestNull
code-creation,BytecodeHandler,1,9746,0x563e729ea060,338,TestUndefined
code-creation,BytecodeHandler,1,9752,0x563e729ea1c0,2093,TestTypeOf
code-creation,BytecodeHandler,1,9757,0x563e729eaa00,610,ToName
code-creation,BytecodeHandler,1,9763,0x563e729eac80,2112,ToNumber
code-creation,BytecodeHandler,1,9769,0x563e729eb4e0,2380,ToNumeric
code-creation,BytecodeHandler,1,9774,0x563e729ebe40,610,ToObject
code-creation,BytecodeHandler,1,9780,0x563e729ec0c0,934,ToString
code-creation,BytecodeHandler,1,9786,0x563e729ec480,2732,CreateRegExpLiteral
code-creation,BytecodeHandler,1,9792,0x563e729ecf40,6462,CreateArrayLiteral
code-creation,BytecodeHandler,1,9798,0x563e729ee880,590,CreateArrayFromIterable
code-creation,BytecodeHandler,1,9804,0x563e729eeae0,2928,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,1,9812,0x563e729ef660,10100,CreateObjectLiteral
code-creation,BytecodeHandler,1,9818,0x563e729f1de0,1550,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,1,9824,0x563e729f2400,1252,CloneObject
code-creation,BytecodeHandler,1,9830,0x563e729f2900,2810,GetTemplateObject
code-creation,BytecodeHandler,1,9836,0x563e729f3400,3414,CreateClosure
code-creation,BytecodeHandler,1,9842,0x563e729f4160,1432,CreateBlockContext
code-creation,BytecodeHandler,1,9848,0x563e729f4700,1448,CreateCatchContext
code-creation,BytecodeHandler,1,9854,0x563e729f4cc0,1510,CreateFunctionContext
code-creation,BytecodeHandler,1,9860,0x563e729f52c0,1510,CreateEvalContext
code-creation,BytecodeHandler,1,9866,0x563e729f58c0,1448,CreateWithContext
code-creation,BytecodeHandler,1,9872,0x563e729f5e80,4580,CreateMappedArguments
code-creation,BytecodeHandler,1,9878,0x563e729f7080,2764,CreateUnmappedArguments
code-creation,BytecodeHandler,1,9885,0x563e729f7b60,2690,CreateRestParameter
code-creation,BytecodeHandler,1,9891,0x563e729f8600,2196,JumpLoop
code-creation,BytecodeHandler,1,9896,0x563e729f8ea0,832,Jump
code-creation,BytecodeHandler,1,9902,0x563e729f9200,1622,JumpConstant
code-creation,BytecodeHandler,1,9908,0x563e729f9860,1706,JumpIfNullConstant
code-creation,BytecodeHandler,1,9914,0x563e729f9f20,1706,JumpIfNotNullConstant
code-creation,BytecodeHandler,1,9920,0x563e729fa5e0,1706,JumpIfUndefinedConstant
code-creation,BytecodeHandler,1,9926,0x563e729faca0,1706,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,1,9933,0x563e729fb360,1702,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,1,9939,0x563e729fba20,1896,JumpIfTrueConstant
code-creation,BytecodeHandler,1,9945,0x563e729fc1a0,1896,JumpIfFalseConstant
code-creation,BytecodeHandler,1,9951,0x563e729fc920,1940,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,1,9958,0x563e729fd0c0,2312,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,1,9964,0x563e729fd9e0,2316,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,1,9970,0x563e729fe300,1554,JumpIfToBooleanTrue
code-creation,BytecodeHandler,1,9977,0x563e729fe920,1562,JumpIfToBooleanFalse
code-creation,BytecodeHandler,1,9983,0x563e729fef40,1106,JumpIfTrue
code-creation,BytecodeHandler,1,9988,0x563e729ff3a0,1106,JumpIfFalse
code-creation,BytecodeHandler,1,9994,0x563e729ff800,896,JumpIfNull
code-creation,BytecodeHandler,1,10000,0x563e729ffba0,896,JumpIfNotNull
code-creation,BytecodeHandler,1,10006,0x563e729fff40,896,JumpIfUndefined
code-creation,BytecodeHandler,1,10012,0x563e72a002e0,896,JumpIfNotUndefined
code-creation,BytecodeHandler,1,10018,0x563e72a00680,912,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,1,10024,0x563e72a00a20,1154,JumpIfJSReceiver
code-creation,BytecodeHandler,1,10030,0x563e72a00ec0,1936,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,1,10036,0x563e72a01660,3576,ForInEnumerate
code-creation,BytecodeHandler,1,10042,0x563e72a02460,3114,ForInPrepare
code-creation,BytecodeHandler,1,10048,0x563e72a030a0,358,ForInContinue
code-creation,BytecodeHandler,1,10054,0x563e72a03220,2746,ForInNext
code-creation,BytecodeHandler,1,10060,0x563e72a03ce0,499,ForInStep
code-creation,BytecodeHandler,1,10065,0x563e72a03ee0,597,StackCheck
code-creation,BytecodeHandler,1,10071,0x563e72a04140,321,SetPendingMessage
code-creation,BytecodeHandler,1,10077,0x563e72a042a0,574,Throw
code-creation,BytecodeHandler,1,10085,0x563e72a044e0,574,ReThrow
code-creation,BytecodeHandler,1,10091,0x563e72a04720,940,Return
code-creation,BytecodeHandler,1,10097,0x563e72a04ae0,1453,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,1,10103,0x563e72a050a0,650,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,1,10110,0x563e72a05340,650,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,1,10116,0x563e72a055e0,2260,SwitchOnGeneratorState
code-creation,BytecodeHandler,1,10123,0x563e72a05ec0,2870,SuspendGenerator
code-creation,BytecodeHandler,1,10129,0x563e72a06a00,2208,ResumeGenerator
code-creation,BytecodeHandler,1,10135,0x563e72a072c0,1228,GetIterator
code-creation,BytecodeHandler,1,10140,0x563e72a077a0,582,Debugger
code-creation,BytecodeHandler,1,10148,0x563e72a07a00,650,IncBlockCounter
code-creation,BytecodeHandler,1,10154,0x563e72a07ca0,343,Abort
code-creation,BytecodeHandler,1,10160,0x563e72a07e00,412,Illegal
code-creation,BytecodeHandler,1,10166,0x563e72a07fa0,914,DebugBreak1.Wide
code-creation,BytecodeHandler,1,10172,0x563e72a08340,914,DebugBreak2.Wide
code-creation,BytecodeHandler,1,10178,0x563e72a086e0,914,DebugBreak3.Wide
code-creation,BytecodeHandler,1,10185,0x563e72a08a80,914,DebugBreak4.Wide
code-creation,BytecodeHandler,1,10191,0x563e72a08e20,914,DebugBreak5.Wide
code-creation,BytecodeHandler,1,10197,0x563e72a091c0,914,DebugBreak6.Wide
code-creation,BytecodeHandler,1,10203,0x563e72a09560,326,LdaSmi.Wide
code-creation,BytecodeHandler,1,10209,0x563e72a096c0,1048,LdaConstant.Wide
code-creation,BytecodeHandler,1,10216,0x563e72a09ae0,29363,LdaGlobal.Wide
code-creation,BytecodeHandler,1,10222,0x563e72a10da0,28380,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,1,10229,0x563e72a17c80,2060,StaGlobal.Wide
code-creation,BytecodeHandler,1,10235,0x563e72a184a0,552,PushContext.Wide
code-creation,BytecodeHandler,1,10242,0x563e72a186e0,458,PopContext.Wide
code-creation,BytecodeHandler,1,10248,0x563e72a188c0,700,LdaContextSlot.Wide
code-creation,BytecodeHandler,1,10254,0x563e72a18b80,700,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,1,10261,0x563e72a18e40,475,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,1,10268,0x563e72a19020,475,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,1,10275,0x563e72a19200,784,StaContextSlot.Wide
code-creation,BytecodeHandler,1,10282,0x563e72a19520,566,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,1,10289,0x563e72a19760,1436,LdaLookupSlot.Wide
code-creation,BytecodeHandler,1,10295,0x563e72a19d00,1960,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,1,10302,0x563e72a1a4c0,30780,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,1,10309,0x563e72a21d00,1436,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,1,10316,0x563e72a222a0,1960,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,1,10323,0x563e72a22a60,29797,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,1,10330,0x563e72a29ee0,1644,StaLookupSlot.Wide
code-creation,BytecodeHandler,1,10337,0x563e72a2a560,330,Ldar.Wide
code-creation,BytecodeHandler,1,10343,0x563e72a2a6c0,321,Star.Wide
code-creation,BytecodeHandler,1,10349,0x563e72a2a820,329,Mov.Wide
code-creation,BytecodeHandler,1,10355,0x563e72a2a980,37712,LdaNamedProperty.Wide
code-creation,BytecodeHandler,1,10361,0x563e72a33ce0,1444,LdaNamedPropertyNoFeedback.Wide
code-creation,BytecodeHandler,1,10368,0x563e72a342a0,1196,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,1,10375,0x563e72a34760,2494,LdaModuleVariable.Wide
code-creation,BytecodeHandler,1,10381,0x563e72a35120,1896,StaModuleVariable.Wide
code-creation,BytecodeHandler,1,10388,0x563e72a358a0,2030,StaNamedProperty.Wide
code-creation,BytecodeHandler,1,10394,0x563e72a360a0,1460,StaNamedPropertyNoFeedback.Wide
code-creation,BytecodeHandler,1,10402,0x563e72a36660,2030,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,1,10408,0x563e72a36e60,1220,StaKeyedProperty.Wide
code-creation,BytecodeHandler,1,10415,0x563e72a37340,1220,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,1,10421,0x563e72a37820,1280,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,1,10428,0x563e72a37d40,1200,CollectTypeProfile.Wide
code-creation,BytecodeHandler,1,10435,0x563e72a38200,5040,Add.Wide
code-creation,BytecodeHandler,1,10441,0x563e72a395c0,4470,Sub.Wide
code-creation,BytecodeHandler,1,10447,0x563e72a3a740,4724,Mul.Wide
code-creation,BytecodeHandler,1,10453,0x563e72a3b9c0,4594,Div.Wide
code-creation,BytecodeHandler,1,10459,0x563e72a3cbc0,4622,Mod.Wide
code-creation,BytecodeHandler,1,10465,0x563e72a3dde0,1612,Exp.Wide
code-creation,BytecodeHandler,1,10470,0x563e72a3e440,5563,BitwiseOr.Wide
code-creation,BytecodeHandler,1,10477,0x563e72a3fa00,5563,BitwiseXor.Wide
code-creation,BytecodeHandler,1,10483,0x563e72a40fc0,5559,BitwiseAnd.Wide
code-creation,BytecodeHandler,1,10491,0x563e72a42580,5559,ShiftLeft.Wide
code-creation,BytecodeHandler,1,10497,0x563e72a43b40,5559,ShiftRight.Wide
code-creation,BytecodeHandler,1,10503,0x563e72a45100,5563,ShiftRightLogical.Wide
code-creation,BytecodeHandler,1,10510,0x563e72a466c0,4168,AddSmi.Wide
code-creation,BytecodeHandler,1,10516,0x563e72a47720,3698,SubSmi.Wide
code-creation,BytecodeHandler,1,10522,0x563e72a485a0,3864,MulSmi.Wide
code-creation,BytecodeHandler,1,10528,0x563e72a494c0,3762,DivSmi.Wide
code-creation,BytecodeHandler,1,10534,0x563e72a4a380,3782,ModSmi.Wide
code-creation,BytecodeHandler,1,10540,0x563e72a4b260,1636,ExpSmi.Wide
code-creation,BytecodeHandler,1,10546,0x563e72a4b8e0,3580,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,1,10552,0x563e72a4c6e0,3580,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,1,10558,0x563e72a4d4e0,3580,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,1,10564,0x563e72a4e2e0,3580,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,1,10571,0x563e72a4f0e0,3580,ShiftRightSmi.Wide
code-creation,BytecodeHandler,1,10577,0x563e72a4fee0,3588,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,1,10584,0x563e72a50d00,3138,Inc.Wide
code-creation,BytecodeHandler,1,10590,0x563e72a51960,3138,Dec.Wide
code-creation,BytecodeHandler,1,10596,0x563e72a525c0,3280,Negate.Wide
code-creation,BytecodeHandler,1,10602,0x563e72a532a0,3667,BitwiseNot.Wide
code-creation,BytecodeHandler,1,10608,0x563e72a54100,626,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,1,10615,0x563e72a54380,626,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,1,10622,0x563e72a54600,1122,GetSuperConstructor.Wide
code-creation,BytecodeHandler,1,10628,0x563e72a54a80,2462,CallAnyReceiver.Wide
code-creation,BytecodeHandler,1,10635,0x563e72a55420,2462,CallProperty.Wide
code-creation,BytecodeHandler,1,10641,0x563e72a55dc0,2382,CallProperty0.Wide
code-creation,BytecodeHandler,1,10647,0x563e72a56720,2398,CallProperty1.Wide
code-creation,BytecodeHandler,1,10654,0x563e72a57080,2414,CallProperty2.Wide
code-creation,BytecodeHandler,1,10660,0x563e72a57a00,2438,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,1,10667,0x563e72a583a0,2366,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,1,10674,0x563e72a58ce0,2398,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,1,10681,0x563e72a59640,2410,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,1,10688,0x563e72a59fc0,547,CallNoFeedback.Wide
code-creation,BytecodeHandler,1,10694,0x563e72a5a200,2462,CallWithSpread.Wide
code-creation,BytecodeHandler,1,10700,0x563e72a5aba0,730,CallRuntime.Wide
code-creation,BytecodeHandler,1,10707,0x563e72a5ae80,958,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,1,10713,0x563e72a5b240,547,CallJSRuntime.Wide
code-creation,BytecodeHandler,1,10719,0x563e72a5b480,11428,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,1,10726,0x563e72a5e140,3800,Construct.Wide
code-creation,BytecodeHandler,1,10732,0x563e72a5f020,2736,ConstructWithSpread.Wide
code-creation,BytecodeHandler,1,10739,0x563e72a5fae0,8410,TestEqual.Wide
code-creation,BytecodeHandler,1,10745,0x563e72a61bc0,6984,TestEqualStrict.Wide
code-creation,BytecodeHandler,1,10751,0x563e72a63720,7024,TestLessThan.Wide
code-creation,BytecodeHandler,1,10758,0x563e72a652a0,7024,TestGreaterThan.Wide
code-creation,BytecodeHandler,1,10764,0x563e72a66e20,7024,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,1,10771,0x563e72a689a0,7024,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,1,10778,0x563e72a6a520,337,TestReferenceEqual.Wide
code-creation,BytecodeHandler,1,10785,0x563e72a6a680,3964,TestInstanceOf.Wide
code-creation,BytecodeHandler,1,10791,0x563e72a6b600,1196,TestIn.Wide
code-creation,BytecodeHandler,1,10797,0x563e72a6bac0,614,ToName.Wide
code-creation,BytecodeHandler,1,10803,0x563e72a6bd40,2112,ToNumber.Wide
code-creation,BytecodeHandler,1,10809,0x563e72a6c5a0,2384,ToNumeric.Wide
code-creation,BytecodeHandler,1,10839,0x563e72a6cf00,614,ToObject.Wide
code-creation,BytecodeHandler,1,10847,0x563e72a6d180,2740,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,1,10856,0x563e72a6dc40,6482,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,1,10863,0x563e72a6f5a0,2928,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,1,10870,0x563e72a70120,10120,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,1,10877,0x563e72a728c0,1256,CloneObject.Wide
code-creation,BytecodeHandler,1,10883,0x563e72a72dc0,2814,GetTemplateObject.Wide
code-creation,BytecodeHandler,1,10889,0x563e72a738c0,3422,CreateClosure.Wide
code-creation,BytecodeHandler,1,10896,0x563e72a74620,1440,CreateBlockContext.Wide
code-creation,BytecodeHandler,1,10903,0x563e72a74be0,1456,CreateCatchContext.Wide
code-creation,BytecodeHandler,1,10909,0x563e72a751a0,1510,CreateFunctionContext.Wide
code-creation,BytecodeHandler,1,10916,0x563e72a757a0,1510,CreateEvalContext.Wide
code-creation,BytecodeHandler,1,10922,0x563e72a75da0,1456,CreateWithContext.Wide
code-creation,BytecodeHandler,1,10929,0x563e72a76360,2232,JumpLoop.Wide
code-creation,BytecodeHandler,1,10935,0x563e72a76c20,832,Jump.Wide
code-creation,BytecodeHandler,1,10941,0x563e72a76f80,1622,JumpConstant.Wide
code-creation,BytecodeHandler,1,10948,0x563e72a775e0,1706,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,1,10954,0x563e72a77ca0,1706,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,1,10961,0x563e72a78360,1706,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,1,10968,0x563e72a78a20,1706,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,1,10975,0x563e72a790e0,1702,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,1,10982,0x563e72a797a0,1896,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,1,10989,0x563e72a79f20,1896,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,1,10996,0x563e72a7a6a0,1940,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,1,11003,0x563e72a7ae40,2312,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,1,11010,0x563e72a7b760,2316,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,1,11017,0x563e72a7c080,1554,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,1,11024,0x563e72a7c6a0,1562,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,1,11031,0x563e72a7ccc0,1106,JumpIfTrue.Wide
code-creation,BytecodeHandler,1,11037,0x563e72a7d120,1106,JumpIfFalse.Wide
code-creation,BytecodeHandler,1,11043,0x563e72a7d580,896,JumpIfNull.Wide
code-creation,BytecodeHandler,1,11049,0x563e72a7d920,896,JumpIfNotNull.Wide
code-creation,BytecodeHandler,1,11055,0x563e72a7dcc0,896,JumpIfUndefined.Wide
code-creation,BytecodeHandler,1,11062,0x563e72a7e060,896,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,1,11069,0x563e72a7e400,912,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,1,11076,0x563e72a7e7a0,1154,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,1,11082,0x563e72a7ec40,1936,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,1,11089,0x563e72a7f3e0,3580,ForInEnumerate.Wide
code-creation,BytecodeHandler,1,11095,0x563e72a801e0,3114,ForInPrepare.Wide
code-creation,BytecodeHandler,1,11101,0x563e72a80e20,358,ForInContinue.Wide
code-creation,BytecodeHandler,1,11108,0x563e72a80fa0,2746,ForInNext.Wide
code-creation,BytecodeHandler,1,11114,0x563e72a81a60,499,ForInStep.Wide
code-creation,BytecodeHandler,1,11120,0x563e72a81c60,1457,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,1,11127,0x563e72a82220,2260,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,1,11134,0x563e72a82b00,2878,SuspendGenerator.Wide
code-creation,BytecodeHandler,1,11140,0x563e72a83640,2212,ResumeGenerator.Wide
code-creation,BytecodeHandler,1,11147,0x563e72a83f00,1232,GetIterator.Wide
code-creation,BytecodeHandler,1,11153,0x563e72a843e0,654,IncBlockCounter.Wide
code-creation,BytecodeHandler,1,11159,0x563e72a84680,343,Abort.Wide
code-creation,BytecodeHandler,1,11168,0x563e72a847e0,914,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,1,11175,0x563e72a84b80,914,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,1,11181,0x563e72a84f20,914,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,1,11188,0x563e72a852c0,914,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,1,11196,0x563e72a85660,914,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,1,11203,0x563e72a85a00,914,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,1,11209,0x563e72a85da0,322,LdaSmi.ExtraWide
code-creation,BytecodeHandler,1,11215,0x563e72a85f00,1048,LdaConstant.ExtraWide
code-creation,BytecodeHandler,1,11221,0x563e72a86320,29355,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,1,11228,0x563e72a8d5e0,28372,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,1,11235,0x563e72a944c0,2060,StaGlobal.ExtraWide
code-creation,BytecodeHandler,1,11241,0x563e72a94ce0,548,PushContext.ExtraWide
code-creation,BytecodeHandler,1,11248,0x563e72a94f20,458,PopContext.ExtraWide
code-creation,BytecodeHandler,1,11254,0x563e72a95100,696,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11261,0x563e72a953c0,696,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11268,0x563e72a95680,475,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11276,0x563e72a95860,475,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11283,0x563e72a95a40,780,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11290,0x563e72a95d60,562,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11297,0x563e72a95fa0,1432,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,1,11303,0x563e72a96540,1956,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,1,11311,0x563e72a96d00,30764,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,1,11318,0x563e72a9e540,1432,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,1,11325,0x563e72a9eae0,1956,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,1,11333,0x563e72a9f2a0,29785,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,1,11340,0x563e72aa6700,1644,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,1,11347,0x563e72aa6d80,330,Ldar.ExtraWide
code-creation,BytecodeHandler,1,11353,0x563e72aa6ee0,317,Star.ExtraWide
code-creation,BytecodeHandler,1,11359,0x563e72aa7020,329,Mov.ExtraWide
code-creation,BytecodeHandler,1,11365,0x563e72aa7180,37700,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,1,11372,0x563e72ab04e0,1444,LdaNamedPropertyNoFeedback.ExtraWide
code-creation,BytecodeHandler,1,11380,0x563e72ab0aa0,1196,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,1,11387,0x563e72ab0f60,2494,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,1,11393,0x563e72ab1920,1892,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,1,11400,0x563e72ab20a0,2026,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,1,11407,0x563e72ab28a0,1456,StaNamedPropertyNoFeedback.ExtraWide
code-creation,BytecodeHandler,1,11415,0x563e72ab2e60,2026,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,1,11421,0x563e72ab3660,1216,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,1,11428,0x563e72ab3b40,1216,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,1,11435,0x563e72ab4020,1276,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,1,11442,0x563e72ab4520,1196,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,1,11449,0x563e72ab49e0,5040,Add.ExtraWide
code-creation,BytecodeHandler,1,11455,0x563e72ab5da0,4470,Sub.ExtraWide
code-creation,BytecodeHandler,1,11461,0x563e72ab6f20,4720,Mul.ExtraWide
code-creation,BytecodeHandler,1,11467,0x563e72ab81a0,4590,Div.ExtraWide
code-creation,BytecodeHandler,1,11473,0x563e72ab93a0,4622,Mod.ExtraWide
code-creation,BytecodeHandler,1,11480,0x563e72aba5c0,1612,Exp.ExtraWide
code-creation,BytecodeHandler,1,11486,0x563e72abac20,5559,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,1,11492,0x563e72abc1e0,5563,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,1,11498,0x563e72abd7a0,5559,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,1,11505,0x563e72abed60,5559,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,1,11511,0x563e72ac0320,5559,ShiftRight.ExtraWide
code-creation,BytecodeHandler,1,11518,0x563e72ac18e0,5563,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,1,11526,0x563e72ac2ea0,4164,AddSmi.ExtraWide
code-creation,BytecodeHandler,1,11532,0x563e72ac3f00,3694,SubSmi.ExtraWide
code-creation,BytecodeHandler,1,11539,0x563e72ac4d80,3864,MulSmi.ExtraWide
code-creation,BytecodeHandler,1,11545,0x563e72ac5ca0,3758,DivSmi.ExtraWide
code-creation,BytecodeHandler,1,11551,0x563e72ac6b60,3782,ModSmi.ExtraWide
code-creation,BytecodeHandler,1,11557,0x563e72ac7a40,1636,ExpSmi.ExtraWide
code-creation,BytecodeHandler,1,11564,0x563e72ac80c0,3580,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,1,11570,0x563e72ac8ec0,3580,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,1,11577,0x563e72ac9cc0,3580,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,1,11584,0x563e72acaac0,3580,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,1,11590,0x563e72acb8c0,3580,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,1,11597,0x563e72acc6c0,3584,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,1,11604,0x563e72acd4e0,3138,Inc.ExtraWide
code-creation,BytecodeHandler,1,11610,0x563e72ace140,3138,Dec.ExtraWide
code-creation,BytecodeHandler,1,11616,0x563e72aceda0,3280,Negate.ExtraWide
code-creation,BytecodeHandler,1,11622,0x563e72acfa80,3667,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,1,11629,0x563e72ad08e0,626,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,1,11636,0x563e72ad0b60,626,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,1,11643,0x563e72ad0de0,1122,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,1,11650,0x563e72ad1260,2458,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,1,11656,0x563e72ad1c00,2458,CallProperty.ExtraWide
code-creation,BytecodeHandler,1,11663,0x563e72ad25a0,2378,CallProperty0.ExtraWide
code-creation,BytecodeHandler,1,11670,0x563e72ad2f00,2394,CallProperty1.ExtraWide
code-creation,BytecodeHandler,1,11676,0x563e72ad3860,2410,CallProperty2.ExtraWide
code-creation,BytecodeHandler,1,11683,0x563e72ad41e0,2434,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,1,11690,0x563e72ad4b80,2366,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,1,11697,0x563e72ad54c0,2394,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,1,11704,0x563e72ad5e20,2406,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,1,11711,0x563e72ad67a0,543,CallNoFeedback.ExtraWide
code-creation,BytecodeHandler,1,11718,0x563e72ad69c0,2458,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,1,11725,0x563e72ad7360,730,CallRuntime.ExtraWide
code-creation,BytecodeHandler,1,11731,0x563e72ad7640,954,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,1,11738,0x563e72ad7a00,543,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,1,11745,0x563e72ad7c20,11352,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,1,11752,0x563e72ada880,3796,Construct.ExtraWide
code-creation,BytecodeHandler,1,11758,0x563e72adb760,2732,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,1,11765,0x563e72adc220,8410,TestEqual.ExtraWide
code-creation,BytecodeHandler,1,11772,0x563e72ade300,6980,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,1,11778,0x563e72adfe60,7020,TestLessThan.ExtraWide
code-creation,BytecodeHandler,1,11785,0x563e72ae19e0,7020,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,1,11792,0x563e72ae3560,7020,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,1,11799,0x563e72ae50e0,7020,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,1,11806,0x563e72ae6c60,337,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,1,11813,0x563e72ae6dc0,3964,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,1,11819,0x563e72ae7d40,1196,TestIn.ExtraWide
code-creation,BytecodeHandler,1,11826,0x563e72ae8200,610,ToName.ExtraWide
code-creation,BytecodeHandler,1,11832,0x563e72ae8480,2112,ToNumber.ExtraWide
code-creation,BytecodeHandler,1,11838,0x563e72ae8ce0,2384,ToNumeric.ExtraWide
code-creation,BytecodeHandler,1,11844,0x563e72ae9640,610,ToObject.ExtraWide
code-creation,BytecodeHandler,1,11851,0x563e72ae98c0,2736,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,1,11858,0x563e72aea380,6482,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,1,11867,0x563e72aebce0,2928,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,1,11875,0x563e72aec860,10116,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,1,11881,0x563e72aef000,1252,CloneObject.ExtraWide
code-creation,BytecodeHandler,1,11888,0x563e72aef500,2814,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,1,11895,0x563e72af0000,3422,CreateClosure.ExtraWide
code-creation,BytecodeHandler,1,11902,0x563e72af0d60,1440,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,1,11909,0x563e72af1320,1456,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,1,11915,0x563e72af18e0,1506,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,1,11923,0x563e72af1ee0,1506,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,1,11929,0x563e72af24e0,1456,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,1,11936,0x563e72af2aa0,2232,JumpLoop.ExtraWide
code-creation,BytecodeHandler,1,11942,0x563e72af3360,828,Jump.ExtraWide
code-creation,BytecodeHandler,1,11949,0x563e72af36a0,1622,JumpConstant.ExtraWide
code-creation,BytecodeHandler,1,11955,0x563e72af3d00,1706,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,1,11962,0x563e72af43c0,1706,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,1,11969,0x563e72af4a80,1706,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,1,11977,0x563e72af5140,1706,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,1,11984,0x563e72af5800,1702,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,1,11991,0x563e72af5ec0,1896,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,1,11998,0x563e72af6640,1896,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,1,12005,0x563e72af6dc0,1936,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,1,12013,0x563e72af7560,2312,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,1,12020,0x563e72af7e80,2316,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,1,12027,0x563e72af87a0,1554,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,1,12034,0x563e72af8dc0,1562,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,1,12041,0x563e72af93e0,1102,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,1,12048,0x563e72af9840,1102,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,1,12054,0x563e72af9ca0,896,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,1,12061,0x563e72afa040,896,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,1,12068,0x563e72afa3e0,896,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,1,12074,0x563e72afa780,896,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,1,12081,0x563e72afab20,912,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,1,12088,0x563e72afaec0,1154,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,1,12095,0x563e72afb360,1936,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,1,12102,0x563e72afbb00,3580,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,1,12109,0x563e72afc900,3110,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,1,12116,0x563e72afd540,354,ForInContinue.ExtraWide
code-creation,BytecodeHandler,1,12122,0x563e72afd6c0,2742,ForInNext.ExtraWide
code-creation,BytecodeHandler,1,12129,0x563e72afe180,495,ForInStep.ExtraWide
code-creation,BytecodeHandler,1,12135,0x563e72afe380,1457,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,1,12143,0x563e72afe940,2256,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,1,12150,0x563e72aff220,2874,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,1,12156,0x563e72affd60,2208,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,1,12163,0x563e72b00620,1232,GetIterator.ExtraWide
code-creation,BytecodeHandler,1,12170,0x563e72b00b00,654,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,1,12176,0x563e72b00da0,343,Abort.ExtraWide
tick,0x7f4810c64187,12186,0,0x0,6
tick,0x7f4810c64187,12199,0,0x0,6
tick,0x7f4810bd3951,12209,0,0x0,6
tick,0x563e719364aa,12229,0,0x0,6
tick,0x563e7197ed83,12239,0,0x0,6
timer-event-start,V8.CompileScriptMicroSeconds,13164
timer-event-start,V8.CompileCode,13179
timer-event-start,V8.CompileMicroSeconds,13214
code-creation,Script,12,13269,0x37b0526f5746,26, v8/statistics:1:1,0x37b0526f5598,~
script-source,8,v8/statistics,native function getV8Statistics();
code-source-info,0x37b0526f5746,8,0,34,C15O0C16O7C25O34,,
timer-event-end,V8.CompileMicroSeconds,13294
timer-event-end,V8.CompileCode,13298
timer-event-end,V8.CompileScriptMicroSeconds,13302
tick,0x563e72b4c786,13313,0,0x0,5
timer-event-start,V8.CompileScriptMicroSeconds,17065
timer-event-start,V8.CompileCode,17137
timer-event-start,V8.CompileMicroSeconds,17581
code-creation,Script,12,17694,0x37b0526f78a6,22, shared_queue.js:1:1,0x37b0526f77c0,~
script-source,9,shared_queue.js,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n/*\nSharedQueue Binary Layout\n+-------------------------------+-------------------------------+\n|                        NUM_RECORDS (32)                       |\n+---------------------------------------------------------------+\n|                        NUM_SHIFTED_OFF (32)                   |\n+---------------------------------------------------------------+\n|                        HEAD (32)                              |\n+---------------------------------------------------------------+\n|                        OFFSETS (32)                           |\n+---------------------------------------------------------------+\n|                        RECORD_ENDS (*MAX_RECORDS)           ...\n+---------------------------------------------------------------+\n|                        RECORDS (*MAX_RECORDS)               ...\n+---------------------------------------------------------------+\n */\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n(window => {\n  const GLOBAL_NAMESPACE = "Deno";\n  const CORE_NAMESPACE = "core";\n  const MAX_RECORDS = 100;\n  const INDEX_NUM_RECORDS = 0;\n  const INDEX_NUM_SHIFTED_OFF = 1;\n  const INDEX_HEAD = 2;\n  const INDEX_OFFSETS = 3;\n  const INDEX_RECORDS = INDEX_OFFSETS + 2 * MAX_RECORDS;\n  const HEAD_INIT = 4 * INDEX_RECORDS;\n\n  // Available on start due to bindings.\n  const Deno = window[GLOBAL_NAMESPACE];\n  const core = Deno[CORE_NAMESPACE];\n  // Warning: DO NOT use window.Deno after this point.\n  // It is possible that the Deno namespace has been deleted.\n  // Use the above local Deno and core variable instead.\n\n  let sharedBytes;\n  let shared32;\n  let initialized = false;\n\n  function maybeInit() {\n    if (!initialized) {\n      init();\n      initialized = true;\n    }\n  }\n\n  function init() {\n    const shared = Deno.core.shared;\n    assert(shared.byteLength > 0);\n    assert(sharedBytes == null);\n    assert(shared32 == null);\n    sharedBytes = new Uint8Array(shared);\n    shared32 = new Int32Array(shared);\n    // Callers should not call Deno.core.recv\x2C use setAsyncHandler.\n    Deno.core.recv(handleAsyncMsgFromRust);\n  }\n\n  function ops() {\n    // op id 0 is a special value to retreive the map of registered ops.\n    const opsMapBytes = Deno.core.send(0\x2C new Uint8Array([])\x2C null);\n    const opsMapJson = String.fromCharCode.apply(null\x2C opsMapBytes);\n    return JSON.parse(opsMapJson);\n  }\n\n  function assert(cond) {\n    if (!cond) {\n      throw Error("assert");\n    }\n  }\n\n  function reset() {\n    maybeInit();\n    shared32[INDEX_NUM_RECORDS] = 0;\n    shared32[INDEX_NUM_SHIFTED_OFF] = 0;\n    shared32[INDEX_HEAD] = HEAD_INIT;\n  }\n\n  function head() {\n    maybeInit();\n    return shared32[INDEX_HEAD];\n  }\n\n  function numRecords() {\n    return shared32[INDEX_NUM_RECORDS];\n  }\n\n  function size() {\n    return shared32[INDEX_NUM_RECORDS] - shared32[INDEX_NUM_SHIFTED_OFF];\n  }\n\n  function setMeta(index\x2C end\x2C opId) {\n    shared32[INDEX_OFFSETS + 2 * index] = end;\n    shared32[INDEX_OFFSETS + 2 * index + 1] = opId;\n  }\n\n  function getMeta(index) {\n    if (index < numRecords()) {\n      const buf = shared32[INDEX_OFFSETS + 2 * index];\n      const opId = shared32[INDEX_OFFSETS + 2 * index + 1];\n      return [opId\x2C buf];\n    } else {\n      return null;\n    }\n  }\n\n  function getOffset(index) {\n    if (index < numRecords()) {\n      if (index == 0) {\n        return HEAD_INIT;\n      } else {\n        return shared32[INDEX_OFFSETS + 2 * (index - 1)];\n      }\n    } else {\n      return null;\n    }\n  }\n\n  function push(opId\x2C buf) {\n    const off = head();\n    const end = off + buf.byteLength;\n    const index = numRecords();\n    if (end > shared32.byteLength || index >= MAX_RECORDS) {\n      // console.log("shared_queue.js push fail");\n      return false;\n    }\n    setMeta(index\x2C end\x2C opId);\n    assert(end - off == buf.byteLength);\n    sharedBytes.set(buf\x2C off);\n    shared32[INDEX_NUM_RECORDS] += 1;\n    shared32[INDEX_HEAD] = end;\n    return true;\n  }\n\n  /// Returns null if empty.\n  function shift() {\n    const i = shared32[INDEX_NUM_SHIFTED_OFF];\n    if (size() == 0) {\n      assert(i == 0);\n      return null;\n    }\n\n    const off = getOffset(i);\n    const [opId\x2C end] = getMeta(i);\n\n    if (size() > 1) {\n      shared32[INDEX_NUM_SHIFTED_OFF] += 1;\n    } else {\n      reset();\n    }\n\n    assert(off != null);\n    assert(end != null);\n    const buf = sharedBytes.subarray(off\x2C end);\n    return [opId\x2C buf];\n  }\n\n  let asyncHandler;\n  function setAsyncHandler(cb) {\n    maybeInit();\n    assert(asyncHandler == null);\n    asyncHandler = cb;\n  }\n\n  function handleAsyncMsgFromRust(opId\x2C buf) {\n    if (buf) {\n      // This is the overflow_response case of deno::Isolate::poll().\n      asyncHandler(opId\x2C buf);\n    } else {\n      while (true) {\n        const opIdBuf = shift();\n        if (opIdBuf == null) {\n          break;\n        }\n        asyncHandler(...opIdBuf);\n      }\n    }\n  }\n\n  function dispatch(opId\x2C control\x2C zeroCopy = null) {\n    maybeInit();\n    return Deno.core.send(opId\x2C control\x2C zeroCopy);\n  }\n\n  const denoCore = {\n    setAsyncHandler\x2C\n    dispatch\x2C\n    sharedQueue: {\n      MAX_RECORDS\x2C\n      head\x2C\n      numRecords\x2C\n      size\x2C\n      push\x2C\n      reset\x2C\n      shift\n    }\x2C\n    ops\n  };\n\n  assert(window[GLOBAL_NAMESPACE] != null);\n  assert(window[GLOBAL_NAMESPACE][CORE_NAMESPACE] != null);\n  Object.assign(core\x2C denoCore);\n})(this);\n
code-source-info,0x37b0526f78a6,9,0,5402,C0O0C1O1029C15O5394C21O5402,,
code-creation,Script,12,18761,0x37b0526f80be,379, shared_queue.js:21:2,0x37b0526f7800,~
code-source-info,0x37b0526f80be
timer-event-end,V8.CompileMicroSeconds,19002
timer-event-end,V8.CompileCode,19010
timer-event-end,V8.CompileScriptMicroSeconds,19027
timer-event-start,V8.Execute,19044
timer-event-start,V8.Execute,19052
timer-event-start,V8.CompileCode,19272
code-creation,LazyCompile,12,19360,0x37b0526f85ae,21,assert shared_queue.js:68:18,0x37b0526f7a00,~
code-source-info,0x37b0526f85ae,9,2448,2512,C0O2448C1O2461C5O2480C14O2486C18O2480C20O2511,,
timer-event-end,V8.CompileCode,19413
timer-event-end,V8.Execute,19488
timer-event-end,V8.Execute,19498
timer-event-start,V8.CompileScriptMicroSeconds,19528
timer-event-start,V8.CompileCode,19545
timer-event-start,V8.CompileMicroSeconds,19565
code-creation,Script,12,19607,0x37b0526f879e,16, file:///home/yankun/workspace/rust/deno/__anonymous__:1:1,0x37b0526f8700,~
script-source,10,file:///home/yankun/workspace/rust/deno/__anonymous__,denoMain()
code-source-info,0x37b0526f879e,10,0,10,C0O0C1O0C9O0C15O10,,
timer-event-end,V8.CompileMicroSeconds,19678
timer-event-end,V8.CompileCode,19686
timer-event-end,V8.CompileScriptMicroSeconds,19699
timer-event-start,V8.Execute,19713
timer-event-start,V8.Execute,19720
timer-event-start,V8.CompileCode,19738
code-creation,LazyCompile,12,20770,0x37b0526f8a5e,355,denoMain /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:6970:22,0x281636be17d8,~
script-source,5,/home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js,define("$deno$/window.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n    // (0\x2C eval) is indirect eval.\n    // See the links below for details:\n    // - https://stackoverflow.com/a/14120023\n    // - https://tc39.github.io/ecma262/#sec-performeval (spec)\n    exports.window = (0\x2C eval)("this");\n});\n// TODO: The above should be replaced with globalThis\n// when the globalThis proposal goes to stage 4\n// See https://github.com/tc39/proposal-global\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\ndefine("$deno$/dom_types.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // https://dom.spec.whatwg.org/#node\n    var NodeType;\n    (function (NodeType) {\n        NodeType[NodeType["ELEMENT_NODE"] = 1] = "ELEMENT_NODE";\n        NodeType[NodeType["TEXT_NODE"] = 3] = "TEXT_NODE";\n        NodeType[NodeType["DOCUMENT_FRAGMENT_NODE"] = 11] = "DOCUMENT_FRAGMENT_NODE";\n    })(NodeType = exports.NodeType || (exports.NodeType = {}));\n    exports.eventTargetHost = Symbol();\n    exports.eventTargetListeners = Symbol();\n    exports.eventTargetMode = Symbol();\n    exports.eventTargetNodeType = Symbol();\n    var EventPhase;\n    (function (EventPhase) {\n        EventPhase[EventPhase["NONE"] = 0] = "NONE";\n        EventPhase[EventPhase["CAPTURING_PHASE"] = 1] = "CAPTURING_PHASE";\n        EventPhase[EventPhase["AT_TARGET"] = 2] = "AT_TARGET";\n        EventPhase[EventPhase["BUBBLING_PHASE"] = 3] = "BUBBLING_PHASE";\n    })(EventPhase = exports.EventPhase || (exports.EventPhase = {}));\n});\ndefine("$deno$/types.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n});\ndefine("$deno$/util.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/window.ts"]\x2C function (require\x2C exports\x2C window_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    let logDebug = false;\n    let logSource = "JS";\n    // @internal\n    function setLogDebug(debug\x2C source) {\n        logDebug = debug;\n        if (source) {\n            logSource = source;\n        }\n    }\n    exports.setLogDebug = setLogDebug;\n    /** Debug logging for deno.\n     * Enable with the `--log-debug` or `-D` command line flag.\n     * @internal\n     */\n    function log(...args) {\n        if (logDebug) {\n            // if we destructure `console` off `window` too early\x2C we don't bind to\n            // the right console\x2C therefore we don't log anything out.\n            window_ts_1.window.console.log(`DEBUG ${logSource} -`\x2C ...args);\n        }\n    }\n    exports.log = log;\n    // @internal\n    function assert(cond\x2C msg = "assert") {\n        if (!cond) {\n            throw Error(msg);\n        }\n    }\n    exports.assert = assert;\n    // @internal\n    function typedArrayToArrayBuffer(ta) {\n        const ab = ta.buffer.slice(ta.byteOffset\x2C ta.byteOffset + ta.byteLength);\n        return ab;\n    }\n    exports.typedArrayToArrayBuffer = typedArrayToArrayBuffer;\n    // @internal\n    function arrayToStr(ui8) {\n        return String.fromCharCode(...ui8);\n    }\n    exports.arrayToStr = arrayToStr;\n    // @internal\n    function createResolvable() {\n        let methods;\n        const promise = new Promise((resolve\x2C reject) => {\n            methods = { resolve\x2C reject };\n        });\n        // TypeScript doesn't know that the Promise callback occurs synchronously\n        // therefore use of not null assertion (`!`)\n        return Object.assign(promise\x2C methods);\n    }\n    exports.createResolvable = createResolvable;\n    // @internal\n    function notImplemented() {\n        throw new Error("Not implemented");\n    }\n    exports.notImplemented = notImplemented;\n    // @internal\n    function unreachable() {\n        throw new Error("Code not reachable");\n    }\n    exports.unreachable = unreachable;\n    // @internal\n    function hexdump(u8) {\n        return Array.prototype.map\n            .call(u8\x2C (x) => {\n            return ("00" + x.toString(16)).slice(-2);\n        })\n            .join(" ");\n    }\n    exports.hexdump = hexdump;\n    // @internal\n    function containsOnlyASCII(str) {\n        if (typeof str !== "string") {\n            return false;\n        }\n        return /^[\\x00-\\x7F]*$/.test(str);\n    }\n    exports.containsOnlyASCII = containsOnlyASCII;\n    const TypedArrayConstructor = Object.getPrototypeOf(Uint8Array);\n    function isTypedArray(x) {\n        return x instanceof TypedArrayConstructor;\n    }\n    exports.isTypedArray = isTypedArray;\n    // Returns whether o is an object\x2C not null\x2C and not a function.\n    // @internal\n    function isObject(o) {\n        return o != null && typeof o === "object";\n    }\n    exports.isObject = isObject;\n    // Returns whether o is iterable.\n    function isIterable(o) {\n        // checks for null and undefined\n        if (o == null) {\n            return false;\n        }\n        return (typeof o[Symbol.iterator] === "function");\n    }\n    exports.isIterable = isIterable;\n    // @internal\n    function requiredArguments(name\x2C length\x2C required) {\n        if (length < required) {\n            const errMsg = `${name} requires at least ${required} argument${required === 1 ? "" : "s"}\x2C but only ${length} present`;\n            throw new TypeError(errMsg);\n        }\n    }\n    exports.requiredArguments = requiredArguments;\n    // @internal\n    function immutableDefine(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    o\x2C p\x2C \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value) {\n        Object.defineProperty(o\x2C p\x2C {\n            value\x2C\n            configurable: false\x2C\n            writable: false\n        });\n    }\n    exports.immutableDefine = immutableDefine;\n    // Returns values from a WeakMap to emulate private properties in JavaScript\n    function getPrivateValue(instance\x2C weakMap\x2C key) {\n        if (weakMap.has(instance)) {\n            return weakMap.get(instance)[key];\n        }\n        throw new TypeError("Illegal invocation");\n    }\n    exports.getPrivateValue = getPrivateValue;\n    /**\n     * Determines whether an object has a property with the specified name.\n     * Avoid calling prototype builtin `hasOwnProperty` for two reasons:\n     *\n     * 1. `hasOwnProperty` is defined on the object as something else:\n     *\n     *      const options = {\n     *        ending: 'utf8'\x2C\n     *        hasOwnProperty: 'foo'\n     *      };\n     *      options.hasOwnProperty('ending') // throws a TypeError\n     *\n     * 2. The object doesn't inherit from `Object.prototype`:\n     *\n     *       const options = Object.create(null);\n     *       options.ending = 'utf8';\n     *       options.hasOwnProperty('ending'); // throws a TypeError\n     *\n     * @param obj A Object.\n     * @param v A property name.\n     * @see https://eslint.org/docs/rules/no-prototype-builtins\n     * @internal\n     */\n    function hasOwnProperty(obj\x2C v) {\n        if (obj == null) {\n            return false;\n        }\n        return Object.prototype.hasOwnProperty.call(obj\x2C v);\n    }\n    exports.hasOwnProperty = hasOwnProperty;\n    /**\n     * Split a number into two parts: lower 32 bit and higher 32 bit\n     * (as if the number is represented as uint64.)\n     *\n     * @param n Number to split.\n     * @internal\n     */\n    function splitNumberToParts(n) {\n        // JS bitwise operators (OR\x2C SHIFT) operate as if number is uint32.\n        const lower = n | 0;\n        // This is also faster than Math.floor(n / 0x100000000) in V8.\n        const higher = (n - lower) / 0x100000000;\n        return [lower\x2C higher];\n    }\n    exports.splitNumberToParts = splitNumberToParts;\n});\n// Forked from https://github.com/beatgammit/base64-js\n// Copyright (c) 2014 Jameson Little. MIT License.\ndefine("$deno$/base64.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const lookup = [];\n    const revLookup = [];\n    const code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";\n    for (let i = 0\x2C len = code.length; i < len; ++i) {\n        lookup[i] = code[i];\n        revLookup[code.charCodeAt(i)] = i;\n    }\n    // Support decoding URL-safe base64 strings\x2C as Node.js does.\n    // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n    revLookup["-".charCodeAt(0)] = 62;\n    revLookup["_".charCodeAt(0)] = 63;\n    function getLens(b64) {\n        const len = b64.length;\n        if (len % 4 > 0) {\n            throw new Error("Invalid string. Length must be a multiple of 4");\n        }\n        // Trim off extra bytes after placeholder bytes are found\n        // See: https://github.com/beatgammit/base64-js/issues/42\n        let validLen = b64.indexOf("=");\n        if (validLen === -1)\n            validLen = len;\n        const placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);\n        return [validLen\x2C placeHoldersLen];\n    }\n    // base64 is 4/3 + up to two characters of the original data\n    function byteLength(b64) {\n        const lens = getLens(b64);\n        const validLen = lens[0];\n        const placeHoldersLen = lens[1];\n        return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;\n    }\n    exports.byteLength = byteLength;\n    function _byteLength(b64\x2C validLen\x2C placeHoldersLen) {\n        return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;\n    }\n    function toByteArray(b64) {\n        let tmp;\n        const lens = getLens(b64);\n        const validLen = lens[0];\n        const placeHoldersLen = lens[1];\n        const arr = new Uint8Array(_byteLength(b64\x2C validLen\x2C placeHoldersLen));\n        let curByte = 0;\n        // if there are placeholders\x2C only get up to the last complete 4 chars\n        const len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n        let i;\n        for (i = 0; i < len; i += 4) {\n            tmp =\n                (revLookup[b64.charCodeAt(i)] << 18) |\n                    (revLookup[b64.charCodeAt(i + 1)] << 12) |\n                    (revLookup[b64.charCodeAt(i + 2)] << 6) |\n                    revLookup[b64.charCodeAt(i + 3)];\n            arr[curByte++] = (tmp >> 16) & 0xff;\n            arr[curByte++] = (tmp >> 8) & 0xff;\n            arr[curByte++] = tmp & 0xff;\n        }\n        if (placeHoldersLen === 2) {\n            tmp =\n                (revLookup[b64.charCodeAt(i)] << 2) |\n                    (revLookup[b64.charCodeAt(i + 1)] >> 4);\n            arr[curByte++] = tmp & 0xff;\n        }\n        if (placeHoldersLen === 1) {\n            tmp =\n                (revLookup[b64.charCodeAt(i)] << 10) |\n                    (revLookup[b64.charCodeAt(i + 1)] << 4) |\n                    (revLookup[b64.charCodeAt(i + 2)] >> 2);\n            arr[curByte++] = (tmp >> 8) & 0xff;\n            arr[curByte++] = tmp & 0xff;\n        }\n        return arr;\n    }\n    exports.toByteArray = toByteArray;\n    function tripletToBase64(num) {\n        return (lookup[(num >> 18) & 0x3f] +\n            lookup[(num >> 12) & 0x3f] +\n            lookup[(num >> 6) & 0x3f] +\n            lookup[num & 0x3f]);\n    }\n    function encodeChunk(uint8\x2C start\x2C end) {\n        let tmp;\n        const output = [];\n        for (let i = start; i < end; i += 3) {\n            tmp =\n                ((uint8[i] << 16) & 0xff0000) +\n                    ((uint8[i + 1] << 8) & 0xff00) +\n                    (uint8[i + 2] & 0xff);\n            output.push(tripletToBase64(tmp));\n        }\n        return output.join("");\n    }\n    function fromByteArray(uint8) {\n        let tmp;\n        const len = uint8.length;\n        const extraBytes = len % 3; // if we have 1 byte left\x2C pad 2 bytes\n        const parts = [];\n        const maxChunkLength = 16383; // must be multiple of 3\n        // go through the array every three bytes\x2C we'll deal with trailing stuff later\n        for (let i = 0\x2C len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n            parts.push(encodeChunk(uint8\x2C i\x2C i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n        }\n        // pad the end with zeros\x2C but make sure to not forget the extra bytes\n        if (extraBytes === 1) {\n            tmp = uint8[len - 1];\n            parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + "==");\n        }\n        else if (extraBytes === 2) {\n            tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n            parts.push(lookup[tmp >> 10] +\n                lookup[(tmp >> 4) & 0x3f] +\n                lookup[(tmp << 2) & 0x3f] +\n                "=");\n        }\n        return parts.join("");\n    }\n    exports.fromByteArray = fromByteArray;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\ndefine("$deno$/errors.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** A Deno specific error.  The `kind` property is set to a specific error code\n     * which can be used to in application logic.\n     *\n     *       try {\n     *         somethingThatMightThrow();\n     *       } catch (e) {\n     *         if (\n     *           e instanceof Deno.DenoError &&\n     *           e.kind === Deno.ErrorKind.Overflow\n     *         ) {\n     *           console.error("Overflow error!");\n     *         }\n     *       }\n     *\n     */\n    class DenoError extends Error {\n        constructor(kind\x2C msg) {\n            super(msg);\n            this.kind = kind;\n            this.name = ErrorKind[kind];\n        }\n    }\n    exports.DenoError = DenoError;\n    // Warning! The values in this enum are duplicated in cli/msg.rs\n    // Update carefully!\n    var ErrorKind;\n    (function (ErrorKind) {\n        ErrorKind[ErrorKind["NoError"] = 0] = "NoError";\n        ErrorKind[ErrorKind["NotFound"] = 1] = "NotFound";\n        ErrorKind[ErrorKind["PermissionDenied"] = 2] = "PermissionDenied";\n        ErrorKind[ErrorKind["ConnectionRefused"] = 3] = "ConnectionRefused";\n        ErrorKind[ErrorKind["ConnectionReset"] = 4] = "ConnectionReset";\n        ErrorKind[ErrorKind["ConnectionAborted"] = 5] = "ConnectionAborted";\n        ErrorKind[ErrorKind["NotConnected"] = 6] = "NotConnected";\n        ErrorKind[ErrorKind["AddrInUse"] = 7] = "AddrInUse";\n        ErrorKind[ErrorKind["AddrNotAvailable"] = 8] = "AddrNotAvailable";\n        ErrorKind[ErrorKind["BrokenPipe"] = 9] = "BrokenPipe";\n        ErrorKind[ErrorKind["AlreadyExists"] = 10] = "AlreadyExists";\n        ErrorKind[ErrorKind["WouldBlock"] = 11] = "WouldBlock";\n        ErrorKind[ErrorKind["InvalidInput"] = 12] = "InvalidInput";\n        ErrorKind[ErrorKind["InvalidData"] = 13] = "InvalidData";\n        ErrorKind[ErrorKind["TimedOut"] = 14] = "TimedOut";\n        ErrorKind[ErrorKind["Interrupted"] = 15] = "Interrupted";\n        ErrorKind[ErrorKind["WriteZero"] = 16] = "WriteZero";\n        ErrorKind[ErrorKind["Other"] = 17] = "Other";\n        ErrorKind[ErrorKind["UnexpectedEof"] = 18] = "UnexpectedEof";\n        ErrorKind[ErrorKind["BadResource"] = 19] = "BadResource";\n        ErrorKind[ErrorKind["CommandFailed"] = 20] = "CommandFailed";\n        ErrorKind[ErrorKind["EmptyHost"] = 21] = "EmptyHost";\n        ErrorKind[ErrorKind["IdnaError"] = 22] = "IdnaError";\n        ErrorKind[ErrorKind["InvalidPort"] = 23] = "InvalidPort";\n        ErrorKind[ErrorKind["InvalidIpv4Address"] = 24] = "InvalidIpv4Address";\n        ErrorKind[ErrorKind["InvalidIpv6Address"] = 25] = "InvalidIpv6Address";\n        ErrorKind[ErrorKind["InvalidDomainCharacter"] = 26] = "InvalidDomainCharacter";\n        ErrorKind[ErrorKind["RelativeUrlWithoutBase"] = 27] = "RelativeUrlWithoutBase";\n        ErrorKind[ErrorKind["RelativeUrlWithCannotBeABaseBase"] = 28] = "RelativeUrlWithCannotBeABaseBase";\n        ErrorKind[ErrorKind["SetHostOnCannotBeABaseUrl"] = 29] = "SetHostOnCannotBeABaseUrl";\n        ErrorKind[ErrorKind["Overflow"] = 30] = "Overflow";\n        ErrorKind[ErrorKind["HttpUser"] = 31] = "HttpUser";\n        ErrorKind[ErrorKind["HttpClosed"] = 32] = "HttpClosed";\n        ErrorKind[ErrorKind["HttpCanceled"] = 33] = "HttpCanceled";\n        ErrorKind[ErrorKind["HttpParse"] = 34] = "HttpParse";\n        ErrorKind[ErrorKind["HttpOther"] = 35] = "HttpOther";\n        ErrorKind[ErrorKind["TooLarge"] = 36] = "TooLarge";\n        ErrorKind[ErrorKind["InvalidUri"] = 37] = "InvalidUri";\n        ErrorKind[ErrorKind["InvalidSeekMode"] = 38] = "InvalidSeekMode";\n        ErrorKind[ErrorKind["OpNotAvailable"] = 39] = "OpNotAvailable";\n        ErrorKind[ErrorKind["WorkerInitFailed"] = 40] = "WorkerInitFailed";\n        ErrorKind[ErrorKind["UnixError"] = 41] = "UnixError";\n        ErrorKind[ErrorKind["NoAsyncSupport"] = 42] = "NoAsyncSupport";\n        ErrorKind[ErrorKind["NoSyncSupport"] = 43] = "NoSyncSupport";\n        ErrorKind[ErrorKind["ImportMapError"] = 44] = "ImportMapError";\n        ErrorKind[ErrorKind["InvalidPath"] = 45] = "InvalidPath";\n        ErrorKind[ErrorKind["ImportPrefixMissing"] = 46] = "ImportPrefixMissing";\n        ErrorKind[ErrorKind["UnsupportedFetchScheme"] = 47] = "UnsupportedFetchScheme";\n        ErrorKind[ErrorKind["TooManyRedirects"] = 48] = "TooManyRedirects";\n        ErrorKind[ErrorKind["Diagnostic"] = 49] = "Diagnostic";\n        ErrorKind[ErrorKind["JSError"] = 50] = "JSError";\n    })(ErrorKind = exports.ErrorKind || (exports.ErrorKind = {}));\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n// The following code is based off of text-encoding at:\n// https://github.com/inexorabletash/text-encoding\n//\n// Anyone is free to copy\x2C modify\x2C publish\x2C use\x2C compile\x2C sell\x2C or\n// distribute this software\x2C either in source code form or as a compiled\n// binary\x2C for any purpose\x2C commercial or non-commercial\x2C and by any\n// means.\n//\n// In jurisdictions that recognize copyright laws\x2C the author or authors\n// of this software dedicate any and all copyright interest in the\n// software to the public domain. We make this dedication for the benefit\n// of the public at large and to the detriment of our heirs and\n// successors. We intend this dedication to be an overt act of\n// relinquishment in perpetuity of all present and future rights to this\n// software under copyright law.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C\n// EXPRESS OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR\n// OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C\n// ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\ndefine("$deno$/text_encoding.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/base64.ts"\x2C "$deno$/errors.ts"]\x2C function (require\x2C exports\x2C base64\x2C errors_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const CONTINUE = null;\n    const END_OF_STREAM = -1;\n    const FINISHED = -1;\n    function decoderError(fatal) {\n        if (fatal) {\n            throw new TypeError("Decoder error.");\n        }\n        return 0xfffd; // default code point\n    }\n    function inRange(a\x2C min\x2C max) {\n        return min <= a && a <= max;\n    }\n    function isASCIIByte(a) {\n        return inRange(a\x2C 0x00\x2C 0x7f);\n    }\n    function stringToCodePoints(input) {\n        const u = [];\n        for (const c of input) {\n            u.push(c.codePointAt(0));\n        }\n        return u;\n    }\n    class UTF8Decoder {\n        constructor(options) {\n            this._codePoint = 0;\n            this._bytesSeen = 0;\n            this._bytesNeeded = 0;\n            this._lowerBoundary = 0x80;\n            this._upperBoundary = 0xbf;\n            this._fatal = options.fatal || false;\n            this._ignoreBOM = options.ignoreBOM || false;\n        }\n        handler(stream\x2C byte) {\n            if (byte === END_OF_STREAM && this._bytesNeeded !== 0) {\n                this._bytesNeeded = 0;\n                return decoderError(this._fatal);\n            }\n            if (byte === END_OF_STREAM) {\n                return FINISHED;\n            }\n            if (this._ignoreBOM) {\n                if ((this._bytesSeen === 0 && byte !== 0xef) ||\n                    (this._bytesSeen === 1 && byte !== 0xbb)) {\n                    this._ignoreBOM = false;\n                }\n                if (this._bytesSeen === 2) {\n                    this._ignoreBOM = false;\n                    if (byte === 0xbf) {\n                        //Ignore BOM\n                        this._codePoint = 0;\n                        this._bytesNeeded = 0;\n                        this._bytesSeen = 0;\n                        return CONTINUE;\n                    }\n                }\n            }\n            if (this._bytesNeeded === 0) {\n                if (isASCIIByte(byte)) {\n                    // Single byte code point\n                    return byte;\n                }\n                else if (inRange(byte\x2C 0xc2\x2C 0xdf)) {\n                    // Two byte code point\n                    this._bytesNeeded = 1;\n                    this._codePoint = byte & 0x1f;\n                }\n                else if (inRange(byte\x2C 0xe0\x2C 0xef)) {\n                    // Three byte code point\n                    if (byte === 0xe0) {\n                        this._lowerBoundary = 0xa0;\n                    }\n                    else if (byte === 0xed) {\n                        this._upperBoundary = 0x9f;\n                    }\n                    this._bytesNeeded = 2;\n                    this._codePoint = byte & 0xf;\n                }\n                else if (inRange(byte\x2C 0xf0\x2C 0xf4)) {\n                    if (byte === 0xf0) {\n                        this._lowerBoundary = 0x90;\n                    }\n                    else if (byte === 0xf4) {\n                        this._upperBoundary = 0x8f;\n                    }\n                    this._bytesNeeded = 3;\n                    this._codePoint = byte & 0x7;\n                }\n                else {\n                    return decoderError(this._fatal);\n                }\n                return CONTINUE;\n            }\n            if (!inRange(byte\x2C this._lowerBoundary\x2C this._upperBoundary)) {\n                // Byte out of range\x2C so encoding error\n                this._codePoint = 0;\n                this._bytesNeeded = 0;\n                this._bytesSeen = 0;\n                stream.prepend(byte);\n                return decoderError(this._fatal);\n            }\n            this._lowerBoundary = 0x80;\n            this._upperBoundary = 0xbf;\n            this._codePoint = (this._codePoint << 6) | (byte & 0x3f);\n            this._bytesSeen++;\n            if (this._bytesSeen !== this._bytesNeeded) {\n                return CONTINUE;\n            }\n            const codePoint = this._codePoint;\n            this._codePoint = 0;\n            this._bytesNeeded = 0;\n            this._bytesSeen = 0;\n            return codePoint;\n        }\n    }\n    class UTF8Encoder {\n        handler(codePoint) {\n            if (codePoint === END_OF_STREAM) {\n                return FINISHED;\n            }\n            if (inRange(codePoint\x2C 0x00\x2C 0x7f)) {\n                return codePoint;\n            }\n            let count;\n            let offset;\n            if (inRange(codePoint\x2C 0x0080\x2C 0x07ff)) {\n                count = 1;\n                offset = 0xc0;\n            }\n            else if (inRange(codePoint\x2C 0x0800\x2C 0xffff)) {\n                count = 2;\n                offset = 0xe0;\n            }\n            else if (inRange(codePoint\x2C 0x10000\x2C 0x10ffff)) {\n                count = 3;\n                offset = 0xf0;\n            }\n            else {\n                throw TypeError(`Code point out of range: \\\\x${codePoint.toString(16)}`);\n            }\n            const bytes = [(codePoint >> (6 * count)) + offset];\n            while (count > 0) {\n                const temp = codePoint >> (6 * (count - 1));\n                bytes.push(0x80 | (temp & 0x3f));\n                count--;\n            }\n            return bytes;\n        }\n    }\n    /** Decodes a string of data which has been encoded using base-64. */\n    function atob(s) {\n        s = String(s);\n        s = s.replace(/[\\t\\n\\f\\r ]/g\x2C "");\n        if (s.length % 4 === 0) {\n            s = s.replace(/==?$/\x2C "");\n        }\n        const rem = s.length % 4;\n        if (rem === 1 || /[^+/0-9A-Za-z]/.test(s)) {\n            // TODO: throw `DOMException`\n            throw new errors_ts_1.DenoError(errors_ts_1.ErrorKind.InvalidInput\x2C "The string to be decoded is not correctly encoded");\n        }\n        // base64-js requires length exactly times of 4\n        if (rem > 0) {\n            s = s.padEnd(s.length + (4 - rem)\x2C "=");\n        }\n        const byteArray = base64.toByteArray(s);\n        let result = "";\n        for (let i = 0; i < byteArray.length; i++) {\n            result += String.fromCharCode(byteArray[i]);\n        }\n        return result;\n    }\n    exports.atob = atob;\n    /** Creates a base-64 ASCII string from the input string. */\n    function btoa(s) {\n        const byteArray = [];\n        for (let i = 0; i < s.length; i++) {\n            const charCode = s[i].charCodeAt(0);\n            if (charCode > 0xff) {\n                throw new errors_ts_1.DenoError(errors_ts_1.ErrorKind.InvalidInput\x2C "The string to be encoded contains characters " +\n                    "outside of the Latin1 range.");\n            }\n            byteArray.push(charCode);\n        }\n        const result = base64.fromByteArray(Uint8Array.from(byteArray));\n        return result;\n    }\n    exports.btoa = btoa;\n    class SingleByteDecoder {\n        constructor(index\x2C options) {\n            if (options.ignoreBOM) {\n                throw new TypeError("Ignoring the BOM is available only with utf-8.");\n            }\n            this._fatal = options.fatal || false;\n            this._index = index;\n        }\n        handler(stream\x2C byte) {\n            if (byte === END_OF_STREAM) {\n                return FINISHED;\n            }\n            if (isASCIIByte(byte)) {\n                return byte;\n            }\n            const codePoint = this._index[byte - 0x80];\n            if (codePoint == null) {\n                return decoderError(this._fatal);\n            }\n            return codePoint;\n        }\n    }\n    // The encodingMap is a hash of labels that are indexed by the conical\n    // encoding.\n    const encodingMap = {\n        "windows-1252": [\n            "ansi_x3.4-1968"\x2C\n            "ascii"\x2C\n            "cp1252"\x2C\n            "cp819"\x2C\n            "csisolatin1"\x2C\n            "ibm819"\x2C\n            "iso-8859-1"\x2C\n            "iso-ir-100"\x2C\n            "iso8859-1"\x2C\n            "iso88591"\x2C\n            "iso_8859-1"\x2C\n            "iso_8859-1:1987"\x2C\n            "l1"\x2C\n            "latin1"\x2C\n            "us-ascii"\x2C\n            "windows-1252"\x2C\n            "x-cp1252"\n        ]\x2C\n        "utf-8": ["unicode-1-1-utf-8"\x2C "utf-8"\x2C "utf8"]\n    };\n    // We convert these into a Map where every label resolves to its canonical\n    // encoding type.\n    const encodings = new Map();\n    for (const key of Object.keys(encodingMap)) {\n        const labels = encodingMap[key];\n        for (const label of labels) {\n            encodings.set(label\x2C key);\n        }\n    }\n    // A map of functions that return new instances of a decoder indexed by the\n    // encoding type.\n    const decoders = new Map();\n    decoders.set("utf-8"\x2C (options) => {\n        return new UTF8Decoder(options);\n    });\n    // Single byte decoders are an array of code point lookups\n    const encodingIndexes = new Map();\n    // prettier-ignore\n    encodingIndexes.set("windows-1252"\x2C [8364\x2C 129\x2C 8218\x2C 402\x2C 8222\x2C 8230\x2C 8224\x2C 8225\x2C 710\x2C 8240\x2C 352\x2C 8249\x2C 338\x2C 141\x2C 381\x2C 143\x2C 144\x2C 8216\x2C 8217\x2C 8220\x2C 8221\x2C 8226\x2C 8211\x2C 8212\x2C 732\x2C 8482\x2C 353\x2C 8250\x2C 339\x2C 157\x2C 382\x2C 376\x2C 160\x2C 161\x2C 162\x2C 163\x2C 164\x2C 165\x2C 166\x2C 167\x2C 168\x2C 169\x2C 170\x2C 171\x2C 172\x2C 173\x2C 174\x2C 175\x2C 176\x2C 177\x2C 178\x2C 179\x2C 180\x2C 181\x2C 182\x2C 183\x2C 184\x2C 185\x2C 186\x2C 187\x2C 188\x2C 189\x2C 190\x2C 191\x2C 192\x2C 193\x2C 194\x2C 195\x2C 196\x2C 197\x2C 198\x2C 199\x2C 200\x2C 201\x2C 202\x2C 203\x2C 204\x2C 205\x2C 206\x2C 207\x2C 208\x2C 209\x2C 210\x2C 211\x2C 212\x2C 213\x2C 214\x2C 215\x2C 216\x2C 217\x2C 218\x2C 219\x2C 220\x2C 221\x2C 222\x2C 223\x2C 224\x2C 225\x2C 226\x2C 227\x2C 228\x2C 229\x2C 230\x2C 231\x2C 232\x2C 233\x2C 234\x2C 235\x2C 236\x2C 237\x2C 238\x2C 239\x2C 240\x2C 241\x2C 242\x2C 243\x2C 244\x2C 245\x2C 246\x2C 247\x2C 248\x2C 249\x2C 250\x2C 251\x2C 252\x2C 253\x2C 254\x2C 255]);\n    for (const [key\x2C index] of encodingIndexes) {\n        decoders.set(key\x2C (options) => {\n            return new SingleByteDecoder(index\x2C options);\n        });\n    }\n    function codePointsToString(codePoints) {\n        let s = "";\n        for (const cp of codePoints) {\n            s += String.fromCodePoint(cp);\n        }\n        return s;\n    }\n    class Stream {\n        constructor(tokens) {\n            this._tokens = [].slice.call(tokens);\n            this._tokens.reverse();\n        }\n        endOfStream() {\n            return !this._tokens.length;\n        }\n        read() {\n            return !this._tokens.length ? END_OF_STREAM : this._tokens.pop();\n        }\n        prepend(token) {\n            if (Array.isArray(token)) {\n                while (token.length) {\n                    this._tokens.push(token.pop());\n                }\n            }\n            else {\n                this._tokens.push(token);\n            }\n        }\n        push(token) {\n            if (Array.isArray(token)) {\n                while (token.length) {\n                    this._tokens.unshift(token.shift());\n                }\n            }\n            else {\n                this._tokens.unshift(token);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function isEitherArrayBuffer(x) {\n        return x instanceof SharedArrayBuffer || x instanceof ArrayBuffer;\n    }\n    class TextDecoder {\n        constructor(label = "utf-8"\x2C options = { fatal: false }) {\n            /** Returns `true` if error mode is "fatal"\x2C and `false` otherwise. */\n            this.fatal = false;\n            /** Returns `true` if ignore BOM flag is set\x2C and `false` otherwise. */\n            this.ignoreBOM = false;\n            if (options.ignoreBOM) {\n                this.ignoreBOM = true;\n            }\n            if (options.fatal) {\n                this.fatal = true;\n            }\n            label = String(label)\n                .trim()\n                .toLowerCase();\n            const encoding = encodings.get(label);\n            if (!encoding) {\n                throw new RangeError(`The encoding label provided ('${label}') is invalid.`);\n            }\n            if (!decoders.has(encoding)) {\n                throw new TypeError(`Internal decoder ('${encoding}') not found.`);\n            }\n            this._encoding = encoding;\n        }\n        /** Returns encoding's name\x2C lowercased. */\n        get encoding() {\n            return this._encoding;\n        }\n        /** Returns the result of running encoding's decoder. */\n        decode(input\x2C options = { stream: false }) {\n            if (options.stream) {\n                throw new TypeError("Stream not supported.");\n            }\n            let bytes;\n            if (input instanceof Uint8Array) {\n                bytes = input;\n            }\n            else if (isEitherArrayBuffer(input)) {\n                bytes = new Uint8Array(input);\n            }\n            else if (typeof input === "object" &&\n                "buffer" in input &&\n                isEitherArrayBuffer(input.buffer)) {\n                bytes = new Uint8Array(input.buffer\x2C input.byteOffset\x2C input.byteLength);\n            }\n            else {\n                bytes = new Uint8Array(0);\n            }\n            const decoder = decoders.get(this._encoding)({\n                fatal: this.fatal\x2C\n                ignoreBOM: this.ignoreBOM\n            });\n            const inputStream = new Stream(bytes);\n            const output = [];\n            while (true) {\n                const result = decoder.handler(inputStream\x2C inputStream.read());\n                if (result === FINISHED) {\n                    break;\n                }\n                if (result !== CONTINUE) {\n                    output.push(result);\n                }\n            }\n            if (output.length > 0 && output[0] === 0xfeff) {\n                output.shift();\n            }\n            return codePointsToString(output);\n        }\n        get [Symbol.toStringTag]() {\n            return "TextDecoder";\n        }\n    }\n    exports.TextDecoder = TextDecoder;\n    class TextEncoder {\n        constructor() {\n            /** Returns "utf-8". */\n            this.encoding = "utf-8";\n        }\n        /** Returns the result of running UTF-8's encoder. */\n        encode(input = "") {\n            const encoder = new UTF8Encoder();\n            const inputStream = new Stream(stringToCodePoints(input));\n            const output = [];\n            while (true) {\n                const result = encoder.handler(inputStream.read());\n                if (result === FINISHED) {\n                    break;\n                }\n                if (Array.isArray(result)) {\n                    output.push(...result);\n                }\n                else {\n                    output.push(result);\n                }\n            }\n            return new Uint8Array(output);\n        }\n        encodeInto(input\x2C dest) {\n            const encoder = new UTF8Encoder();\n            const inputStream = new Stream(stringToCodePoints(input));\n            let written = 0;\n            let read = 0;\n            while (true) {\n                const result = encoder.handler(inputStream.read());\n                if (result === FINISHED) {\n                    break;\n                }\n                read++;\n                if (Array.isArray(result)) {\n                    dest.set(result\x2C written);\n                    written += result.length;\n                    if (result.length > 3) {\n                        // increment read a second time if greater than U+FFFF\n                        read++;\n                    }\n                }\n                else {\n                    dest[written] = result;\n                    written++;\n                }\n            }\n            return {\n                read\x2C\n                written\n            };\n        }\n        get [Symbol.toStringTag]() {\n            return "TextEncoder";\n        }\n    }\n    exports.TextEncoder = TextEncoder;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\ndefine("$deno$/build.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    exports.build = {\n        arch: ""\x2C\n        os: ""\n    };\n    function setBuildInfo(os\x2C arch) {\n        exports.build.os = os;\n        exports.build.arch = arch;\n        Object.freeze(exports.build);\n    }\n    exports.setBuildInfo = setBuildInfo;\n});\ndefine("$deno$/blob.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/build.ts"]\x2C function (require\x2C exports\x2C util_ts_1\x2C text_encoding_ts_1\x2C build_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    exports.bytesSymbol = Symbol("bytes");\n    function convertLineEndingsToNative(s) {\n        const nativeLineEnd = build_ts_1.build.os == "win" ? "\\r\\n" : "\\n";\n        let position = 0;\n        let collectionResult = collectSequenceNotCRLF(s\x2C position);\n        let token = collectionResult.collected;\n        position = collectionResult.newPosition;\n        let result = token;\n        while (position < s.length) {\n            const c = s.charAt(position);\n            if (c == "\\r") {\n                result += nativeLineEnd;\n                position++;\n                if (position < s.length && s.charAt(position) == "\\n") {\n                    position++;\n                }\n            }\n            else if (c == "\\n") {\n                position++;\n                result += nativeLineEnd;\n            }\n            collectionResult = collectSequenceNotCRLF(s\x2C position);\n            token = collectionResult.collected;\n            position = collectionResult.newPosition;\n            result += token;\n        }\n        return result;\n    }\n    function collectSequenceNotCRLF(s\x2C position) {\n        const start = position;\n        for (let c = s.charAt(position); position < s.length && !(c == "\\r" || c == "\\n"); c = s.charAt(++position))\n            ;\n        return { collected: s.slice(start\x2C position)\x2C newPosition: position };\n    }\n    function toUint8Arrays(blobParts\x2C doNormalizeLineEndingsToNative) {\n        const ret = [];\n        const enc = new text_encoding_ts_1.TextEncoder();\n        for (const element of blobParts) {\n            if (typeof element === "string") {\n                let str = element;\n                if (doNormalizeLineEndingsToNative) {\n                    str = convertLineEndingsToNative(element);\n                }\n                ret.push(enc.encode(str));\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            }\n            else if (element instanceof DenoBlob) {\n                ret.push(element[exports.bytesSymbol]);\n            }\n            else if (element instanceof Uint8Array) {\n                ret.push(element);\n            }\n            else if (element instanceof Uint16Array) {\n                const uint8 = new Uint8Array(element.buffer);\n                ret.push(uint8);\n            }\n            else if (element instanceof Uint32Array) {\n                const uint8 = new Uint8Array(element.buffer);\n                ret.push(uint8);\n            }\n            else if (ArrayBuffer.isView(element)) {\n                // Convert view to Uint8Array.\n                const uint8 = new Uint8Array(element.buffer);\n                ret.push(uint8);\n            }\n            else if (element instanceof ArrayBuffer) {\n                // Create a new Uint8Array view for the given ArrayBuffer.\n                const uint8 = new Uint8Array(element);\n                ret.push(uint8);\n            }\n            else {\n                ret.push(enc.encode(String(element)));\n            }\n        }\n        return ret;\n    }\n    function processBlobParts(blobParts\x2C options) {\n        const normalizeLineEndingsToNative = options.ending === "native";\n        // ArrayBuffer.transfer is not yet implemented in V8\x2C so we just have to\n        // pre compute size of the array buffer and do some sort of static allocation\n        // instead of dynamic allocation.\n        const uint8Arrays = toUint8Arrays(blobParts\x2C normalizeLineEndingsToNative);\n        const byteLength = uint8Arrays\n            .map((u8) => u8.byteLength)\n            .reduce((a\x2C b) => a + b\x2C 0);\n        const ab = new ArrayBuffer(byteLength);\n        const bytes = new Uint8Array(ab);\n        let courser = 0;\n        for (const u8 of uint8Arrays) {\n            bytes.set(u8\x2C courser);\n            courser += u8.byteLength;\n        }\n        return bytes;\n    }\n    // A WeakMap holding blob to byte array mapping.\n    // Ensures it does not impact garbage collection.\n    exports.blobBytesWeakMap = new WeakMap();\n    class DenoBlob {\n        /** A blob object represents a file-like object of immutable\x2C raw data. */\n        constructor(blobParts\x2C options) {\n            this.size = 0;\n            this.type = "";\n            if (arguments.length === 0) {\n                this[exports.bytesSymbol] = new Uint8Array();\n                return;\n            }\n            options = options || {};\n            // Set ending property's default value to "transparent".\n            if (!util_ts_1.hasOwnProperty(options\x2C "ending")) {\n                options.ending = "transparent";\n            }\n            if (options.type && !util_ts_1.containsOnlyASCII(options.type)) {\n                const errMsg = "The 'type' property must consist of ASCII characters.";\n                throw new SyntaxError(errMsg);\n            }\n            const bytes = processBlobParts(blobParts\x2C options);\n            // Normalize options.type.\n            let type = options.type ? options.type : "";\n            if (type.length) {\n                for (let i = 0; i < type.length; ++i) {\n                    const char = type[i];\n                    if (char < "\\u0020" || char > "\\u007E") {\n                        type = "";\n                        break;\n                    }\n                }\n                type = type.toLowerCase();\n            }\n            // Set Blob object's properties.\n            this[exports.bytesSymbol] = bytes;\n            this.size = bytes.byteLength;\n            this.type = type;\n            // Register bytes for internal private use.\n            exports.blobBytesWeakMap.set(this\x2C bytes);\n        }\n        slice(start\x2C end\x2C contentType) {\n            return new DenoBlob([this[exports.bytesSymbol].slice(start\x2C end)]\x2C {\n                type: contentType || this.type\n            });\n        }\n    }\n    exports.DenoBlob = DenoBlob;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n// Interfaces 100% copied from Go.\n// Documentation liberally lifted from them too.\n// Thank you! We love Go!\ndefine("$deno$/io.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // TODO(kt3k): EOF should be `unique symbol` type.\n    // That might require some changes of ts_library_builder.\n    // See #2591 for more details.\n    exports.EOF = null;\n    // Seek whence values.\n    // https://golang.org/pkg/io/#pkg-constants\n    var SeekMode;\n    (function (SeekMode) {\n        SeekMode[SeekMode["SEEK_START"] = 0] = "SEEK_START";\n        SeekMode[SeekMode["SEEK_CURRENT"] = 1] = "SEEK_CURRENT";\n        SeekMode[SeekMode["SEEK_END"] = 2] = "SEEK_END";\n    })(SeekMode = exports.SeekMode || (exports.SeekMode = {}));\n    /** Copies from `src` to `dst` until either `EOF` is reached on `src`\n     * or an error occurs. It returns the number of bytes copied and the first\n     * error encountered while copying\x2C if any.\n     *\n     * Because `copy()` is defined to read from `src` until `EOF`\x2C it does not\n     * treat an `EOF` from `read()` as an error to be reported.\n     */\n    // https://golang.org/pkg/io/#Copy\n    async function copy(dst\x2C src) {\n        let n = 0;\n        const b = new Uint8Array(32 * 1024);\n        let gotEOF = false;\n        while (gotEOF === false) {\n            const result = await src.read(b);\n            if (result === exports.EOF) {\n                gotEOF = true;\n            }\n            else {\n                n += await dst.write(b.subarray(0\x2C result));\n            }\n        }\n        return n;\n    }\n    exports.copy = copy;\n    /** Turns `r` into async iterator.\n     *\n     *      for await (const chunk of toAsyncIterator(reader)) {\n     *          console.log(chunk)\n     *      }\n     */\n    function toAsyncIterator(r) {\n        const b = new Uint8Array(1024);\n        // Keep track if end-of-file has been reached\x2C then\n        // signal that iterator is done during subsequent next()\n        // call. This is required because `r` can return a `number | EOF`\n        // with data read and EOF reached. But if iterator returns\n        // `done` then `value` is discarded.\n        //\n        // See https://github.com/denoland/deno/issues/2330 for reference.\n        let sawEof = false;\n        return {\n            [Symbol.asyncIterator]() {\n                return this;\n            }\x2C\n            async next() {\n                if (sawEof) {\n                    return { value: new Uint8Array()\x2C done: true };\n                }\n                const result = await r.read(b);\n                if (result === exports.EOF) {\n                    sawEof = true;\n                    return { value: new Uint8Array()\x2C done: true };\n                }\n                return {\n                    value: b.subarray(0\x2C result)\x2C\n                    done: false\n                };\n            }\n        };\n    }\n    exports.toAsyncIterator = toAsyncIterator;\n});\ndefine("$deno$/core.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/window.ts"]\x2C function (require\x2C exports\x2C window_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // This allows us to access core in API even if we\n    // dispose window.Deno\n    exports.core = window_ts_2.window.Deno.core;\n});\ndefine("$deno$/dispatch_minimal.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/core.ts"]\x2C function (require\x2C exports\x2C util\x2C core_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const promiseTableMin = new Map();\n    // Note it's important that promiseId starts at 1 instead of 0\x2C because sync\n    // messages are indicated with promiseId 0. If we ever add wrap around logic for\n    // overflows\x2C this should be taken into account.\n    let _nextPromiseId = 1;\n    function nextPromiseId() {\n        return _nextPromiseId++;\n    }\n    function recordFromBufMinimal(opId\x2C buf32) {\n        if (buf32.length != 3) {\n            throw Error("Bad message");\n        }\n        return {\n            promiseId: buf32[0]\x2C\n            opId\x2C\n            arg: buf32[1]\x2C\n            result: buf32[2]\n        };\n    }\n    exports.recordFromBufMinimal = recordFromBufMinimal;\n    const scratch32 = new Int32Array(3);\n    const scratchBytes = new Uint8Array(scratch32.buffer\x2C scratch32.byteOffset\x2C scratch32.byteLength);\n    util.assert(scratchBytes.byteLength === scratch32.length * 4);\n    function asyncMsgFromRust(opId\x2C ui8) {\n        const buf32 = new Int32Array(ui8.buffer\x2C ui8.byteOffset\x2C ui8.byteLength / 4);\n        const record = recordFromBufMinimal(opId\x2C buf32);\n        const { promiseId\x2C result } = record;\n        const promise = promiseTableMin.get(promiseId);\n        promiseTableMin.delete(promiseId);\n        promise.resolve(result);\n    }\n    exports.asyncMsgFromRust = asyncMsgFromRust;\n    function sendAsyncMinimal(opId\x2C arg\x2C zeroCopy) {\n        const promiseId = nextPromiseId(); // AKA cmdId\n        scratch32[0] = promiseId;\n        scratch32[1] = arg;\n        scratch32[2] = 0; // result\n        const promise = util.createResolvable();\n        const buf = core_ts_1.core.dispatch(opId\x2C scratchBytes\x2C zeroCopy);\n        if (buf) {\n            const buf32 = new Int32Array(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength / 4);\n            const record = recordFromBufMinimal(opId\x2C buf32);\n            // Sync result.\n            promise.resolve(record.result);\n        }\n        else {\n            // Async result.\n            promiseTableMin.set(promiseId\x2C promise);\n        }\n        return promise;\n    }\n    exports.sendAsyncMinimal = sendAsyncMinimal;\n    function sendSyncMinimal(opId\x2C arg\x2C zeroCopy) {\n        scratch32[0] = 0; // promiseId 0 indicates sync\n        scratch32[1] = arg;\n        const res = core_ts_1.core.dispatch(opId\x2C scratchBytes\x2C zeroCopy);\n        const res32 = new Int32Array(res.buffer\x2C res.byteOffset\x2C 3);\n        const resRecord = recordFromBufMinimal(opId\x2C res32);\n        return resRecord.result;\n    }\n    exports.sendSyncMinimal = sendSyncMinimal;\n});\ndefine("$deno$/dispatch_json.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/core.ts"\x2C "$deno$/errors.ts"]\x2C function (require\x2C exports\x2C util\x2C text_encoding_ts_2\x2C core_ts_2\x2C errors_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const promiseTable = new Map();\n    let _nextPromiseId = 1;\n    function nextPromiseId() {\n        return _nextPromiseId++;\n    }\n    function decode(ui8) {\n        const s = new text_encoding_ts_2.TextDecoder().decode(ui8);\n        return JSON.parse(s);\n    }\n    function encode(args) {\n        const s = JSON.stringify(args);\n        return new text_encoding_ts_2.TextEncoder().encode(s);\n    }\n    function unwrapResponse(res) {\n        if (res.err != null) {\n            throw new errors_ts_2.DenoError(res.err.kind\x2C res.err.message);\n        }\n        util.assert(res.ok != null);\n        return res.ok;\n    }\n    function asyncMsgFromRust(opId\x2C resUi8) {\n        const res = decode(resUi8);\n        util.assert(res.promiseId != null);\n        const promise = promiseTable.get(res.promiseId);\n        util.assert(promise != null);\n        promiseTable.delete(res.promiseId);\n        promise.resolve(res);\n    }\n    exports.asyncMsgFromRust = asyncMsgFromRust;\n    function sendSync(opId\x2C args = {}\x2C zeroCopy) {\n        const argsUi8 = encode(args);\n        const resUi8 = core_ts_2.core.dispatch(opId\x2C argsUi8\x2C zeroCopy);\n        util.assert(resUi8 != null);\n        const res = decode(resUi8);\n        util.assert(res.promiseId == null);\n        return unwrapResponse(res);\n    }\n    exports.sendSync = sendSync;\n    async function sendAsync(opId\x2C args = {}\x2C zeroCopy) {\n        const promiseId = nextPromiseId();\n        args = Object.assign(args\x2C { promiseId });\n        const promise = util.createResolvable();\n        const argsUi8 = encode(args);\n        const buf = core_ts_2.core.dispatch(opId\x2C argsUi8\x2C zeroCopy);\n        if (buf) {\n            // Sync result.\n            const res = decode(buf);\n            promise.resolve(res);\n        }\n        else {\n            // Async result.\n            promiseTable.set(promiseId\x2C promise);\n        }\n        const res = await promise;\n        return unwrapResponse(res);\n    }\n    exports.sendAsync = sendAsync;\n});\ndefine("$deno$/dispatch.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_minimal.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C minimal\x2C json) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function asyncMsgFromRust(opId\x2C ui8) {\n        switch (opId) {\n            case exports.OP_WRITE:\n            case exports.OP_READ:\n                minimal.asyncMsgFromRust(opId\x2C ui8);\n                break;\n            case exports.OP_EXIT:\n            case exports.OP_IS_TTY:\n            case exports.OP_ENV:\n            case exports.OP_EXEC_PATH:\n            case exports.OP_UTIME:\n            case exports.OP_OPEN:\n            case exports.OP_SEEK:\n            case exports.OP_FETCH:\n            case exports.OP_REPL_START:\n            case exports.OP_REPL_READLINE:\n            case exports.OP_ACCEPT:\n            case exports.OP_DIAL:\n            case exports.OP_GLOBAL_TIMER:\n            case exports.OP_HOST_GET_WORKER_CLOSED:\n            case exports.OP_HOST_GET_MESSAGE:\n            case exports.OP_WORKER_GET_MESSAGE:\n            case exports.OP_RUN_STATUS:\n            case exports.OP_MKDIR:\n            case exports.OP_CHMOD:\n            case exports.OP_CHOWN:\n            case exports.OP_REMOVE:\n            case exports.OP_COPY_FILE:\n            case exports.OP_STAT:\n            case exports.OP_READ_DIR:\n            case exports.OP_RENAME:\n            case exports.OP_LINK:\n            case exports.OP_SYMLINK:\n            case exports.OP_READ_LINK:\n            case exports.OP_TRUNCATE:\n            case exports.OP_MAKE_TEMP_DIR:\n            case exports.OP_DIAL_TLS:\n            case exports.OP_FETCH_SOURCE_FILES:\n                json.asyncMsgFromRust(opId\x2C ui8);\n                break;\n            default:\n                throw Error("bad async opId");\n        }\n    }\n    exports.asyncMsgFromRust = asyncMsgFromRust;\n});\ndefine("$deno$/files.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/io.ts"\x2C "$deno$/dispatch_minimal.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C io_ts_1\x2C dispatch_minimal_ts_1\x2C dispatch\x2C dispatch_json_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Open a file and return an instance of the `File` object\n     *  synchronously.\n     *\n     *       const file = Deno.openSync("/foo/bar.txt");\n     */\n    function openSync(filename\x2C mode = "r") {\n        const rid = dispatch_json_ts_1.sendSync(dispatch.OP_OPEN\x2C { filename\x2C mode });\n        return new File(rid);\n    }\n    exports.openSync = openSync;\n    /** Open a file and return an instance of the `File` object.\n     *\n     *       (async () => {\n     *         const file = await Deno.open("/foo/bar.txt");\n     *       })();\n     */\n    async function open(filename\x2C mode = "r") {\n        const rid = await dispatch_json_ts_1.sendAsync(dispatch.OP_OPEN\x2C { filename\x2C mode });\n        return new File(rid);\n    }\n    exports.open = open;\n    /** Read synchronously from a file ID into an array buffer.\n     *\n     * Return `number | EOF` for the operation.\n     *\n     *      const file = Deno.openSync("/foo/bar.txt");\n     *      const buf = new Uint8Array(100);\n     *      const nread = Deno.readSync(file.rid\x2C buf);\n     *      const text = new TextDecoder().decode(buf);\n     *\n     */\n    function readSync(rid\x2C p) {\n        const nread = dispatch_minimal_ts_1.sendSyncMinimal(dispatch.OP_READ\x2C rid\x2C p);\n        if (nread < 0) {\n            throw new Error("read error");\n        }\n        else if (nread == 0) {\n            return io_ts_1.EOF;\n        }\n        else {\n            return nread;\n        }\n    }\n    exports.readSync = readSync;\n    /** Read from a file ID into an array buffer.\n     *\n     * Resolves with the `number | EOF` for the operation.\n     *\n     *       (async () => {\n     *         const file = await Deno.open("/foo/bar.txt");\n     *         const buf = new Uint8Array(100);\n     *         const nread = await Deno.read(file.rid\x2C buf);\n     *         const text = new TextDecoder().decode(buf);\n     *       })();\n     */\n    async function read(rid\x2C p) {\n        const nread = await dispatch_minimal_ts_1.sendAsyncMinimal(dispatch.OP_READ\x2C rid\x2C p);\n        if (nread < 0) {\n            throw new Error("read error");\n        }\n        else if (nread == 0) {\n            return io_ts_1.EOF;\n        }\n        else {\n            return nread;\n        }\n    }\n    exports.read = read;\n    /** Write synchronously to the file ID the contents of the array buffer.\n     *\n     * Resolves with the number of bytes written.\n     *\n     *       const encoder = new TextEncoder();\n     *       const data = encoder.encode("Hello world\\n");\n     *       const file = Deno.openSync("/foo/bar.txt");\n     *       Deno.writeSync(file.rid\x2C data);\n     */\n    function writeSync(rid\x2C p) {\n        const result = dispatch_minimal_ts_1.sendSyncMinimal(dispatch.OP_WRITE\x2C rid\x2C p);\n        if (result < 0) {\n            throw new Error("write error");\n        }\n        else {\n            return result;\n        }\n    }\n    exports.writeSync = writeSync;\n    /** Write to the file ID the contents of the array buffer.\n     *\n     * Resolves with the number of bytes written.\n     *\n     *      (async () => {\n     *        const encoder = new TextEncoder();\n     *        const data = encoder.encode("Hello world\\n");\n     *        const file = await Deno.open("/foo/bar.txt");\n     *        await Deno.write(file.rid\x2C data);\n     *      })();\n     *\n     */\n    async function write(rid\x2C p) {\n        const result = await dispatch_minimal_ts_1.sendAsyncMinimal(dispatch.OP_WRITE\x2C rid\x2C p);\n        if (result < 0) {\n            throw new Error("write error");\n        }\n        else {\n            return result;\n        }\n    }\n    exports.write = write;\n    /** Seek a file ID synchronously to the given offset under mode given by `whence`.\n     *\n     *       const file = Deno.openSync("/foo/bar.txt");\n     *       Deno.seekSync(file.rid\x2C 0\x2C 0);\n     */\n    function seekSync(rid\x2C offset\x2C whence) {\n        dispatch_json_ts_1.sendSync(dispatch.OP_SEEK\x2C { rid\x2C offset\x2C whence });\n    }\n    exports.seekSync = seekSync;\n    /** Seek a file ID to the given offset under mode given by `whence`.\n     *\n     *      (async () => {\n     *        const file = await Deno.open("/foo/bar.txt");\n     *        await Deno.seek(file.rid\x2C 0\x2C 0);\n     *      })();\n     */\n    async function seek(rid\x2C offset\x2C whence) {\n        await dispatch_json_ts_1.sendAsync(dispatch.OP_SEEK\x2C { rid\x2C offset\x2C whence });\n    }\n    exports.seek = seek;\n    /** Close the file ID. */\n    function close(rid) {\n        dispatch_json_ts_1.sendSync(dispatch.OP_CLOSE\x2C { rid });\n    }\n    exports.close = close;\n    /** The Deno abstraction for reading and writing files. */\n    class File {\n        constructor(rid) {\n            this.rid = rid;\n        }\n        write(p) {\n            return write(this.rid\x2C p);\n        }\n        writeSync(p) {\n            return writeSync(this.rid\x2C p);\n        }\n        read(p) {\n            return read(this.rid\x2C p);\n        }\n        readSync(p) {\n            return readSync(this.rid\x2C p);\n        }\n        seek(offset\x2C whence) {\n            return seek(this.rid\x2C offset\x2C whence);\n        }\n        seekSync(offset\x2C whence) {\n            return seekSync(this.rid\x2C offset\x2C whence);\n        }\n        close() {\n            close(this.rid);\n        }\n    }\n    exports.File = File;\n    /** An instance of `File` for stdin. */\n    exports.stdin = new File(0);\n    /** An instance of `File` for stdout. */\n    exports.stdout = new File(1);\n    /** An instance of `File` for stderr. */\n    exports.stderr = new File(2);\n    /** A factory function for creating instances of `File` associated with the\n     * supplied file name.\n     * @internal\n     */\n    function create(filename) {\n        return open(filename\x2C "w+");\n    }\n    exports.create = create;\n});\n// Copyright Joyent\x2C Inc. and other Node contributors. MIT license.\n// Forked from Node's lib/internal/cli_table.js\ndefine("$deno$/console_table.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C text_encoding_ts_3\x2C util_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const encoder = new text_encoding_ts_3.TextEncoder();\n    const tableChars = {\n        middleMiddle: "\u2500"\x2C\n        rowMiddle: "\u253c"\x2C\n        topRight: "\u2510"\x2C\n        topLeft: "\u250c"\x2C\n        leftMiddle: "\u251c"\x2C\n        topMiddle: "\u252c"\x2C\n        bottomRight: "\u2518"\x2C\n        bottomLeft: "\u2514"\x2C\n        bottomMiddle: "\u2534"\x2C\n        rightMiddle: "\u2524"\x2C\n        left: "\u2502 "\x2C\n        right: " \u2502"\x2C\n        middle: " \u2502 "\n    };\n    const colorRegExp = /\\u001b\\[\\d\\d?m/g;\n    function removeColors(str) {\n        return str.replace(colorRegExp\x2C "");\n    }\n    function countBytes(str) {\n        const normalized = removeColors(String(str)).normalize("NFC");\n        return encoder.encode(normalized).byteLength;\n    }\n    function renderRow(row\x2C columnWidths) {\n        let out = tableChars.left;\n        for (let i = 0; i < row.length; i++) {\n            const cell = row[i];\n            const len = countBytes(cell);\n            const needed = (columnWidths[i] - len) / 2;\n            // round(needed) + ceil(needed) will always add up to the amount\n            // of spaces we need while also left justifying the output.\n            out += `${" ".repeat(needed)}${cell}${" ".repeat(Math.ceil(needed))}`;\n            if (i !== row.length - 1) {\n                out += tableChars.middle;\n            }\n        }\n        out += tableChars.right;\n        return out;\n    }\n    function cliTable(head\x2C columns) {\n        const rows = [];\n        const columnWidths = head.map((h) => countBytes(h));\n        const longestColumn = columns.reduce((n\x2C a) => Math.max(n\x2C a.length)\x2C 0);\n        for (let i = 0; i < head.length; i++) {\n            const column = columns[i];\n            for (let j = 0; j < longestColumn; j++) {\n                if (rows[j] === undefined) {\n                    rows[j] = [];\n                }\n                const value = (rows[j][i] = util_ts_2.hasOwnProperty(column\x2C j) ? column[j] : "");\n                const width = columnWidths[i] || 0;\n                const counted = countBytes(value);\n                columnWidths[i] = Math.max(width\x2C counted);\n            }\n        }\n        const divider = columnWidths.map((i) => tableChars.middleMiddle.repeat(i + 2));\n        let result = `${tableChars.topLeft}${divider.join(tableChars.topMiddle)}` +\n            `${tableChars.topRight}\\n${renderRow(head\x2C columnWidths)}\\n` +\n            `${tableChars.leftMiddle}${divider.join(tableChars.rowMiddle)}` +\n            `${tableChars.rightMiddle}\\n`;\n        for (const row of rows) {\n            result += `${renderRow(row\x2C columnWidths)}\\n`;\n        }\n        result +=\n            `${tableChars.bottomLeft}${divider.join(tableChars.bottomMiddle)}` +\n                tableChars.bottomRight;\n        return result;\n    }\n    exports.cliTable = cliTable;\n});\ndefine("$deno$/console.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/files.ts"\x2C "$deno$/console_table.ts"]\x2C function (require\x2C exports\x2C util_ts_3\x2C text_encoding_ts_4\x2C files_ts_1\x2C console_table_ts_1) {\n    "use strict";\n    var _a;\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // Default depth of logging nested objects\n    const DEFAULT_MAX_DEPTH = 4;\n    // Number of elements an object must have before it's displayed in appreviated\n    // form.\n    const OBJ_ABBREVIATE_SIZE = 5;\n    const STR_ABBREVIATE_SIZE = 100;\n    // Char codes\n    const CHAR_PERCENT = 37; /* % */\n    const CHAR_LOWERCASE_S = 115; /* s */\n    const CHAR_LOWERCASE_D = 100; /* d */\n    const CHAR_LOWERCASE_I = 105; /* i */\n    const CHAR_LOWERCASE_F = 102; /* f */\n    const CHAR_LOWERCASE_O = 111; /* o */\n    const CHAR_UPPERCASE_O = 79; /* O */\n    const CHAR_LOWERCASE_C = 99; /* c */\n    class CSI {\n    }\n    exports.CSI = CSI;\n    CSI.kClear = "\\x1b[1;1H";\n    CSI.kClearScreenDown = "\\x1b[0J";\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n    function cursorTo(stream\x2C _x\x2C _y) {\n        const uint8 = new text_encoding_ts_4.TextEncoder().encode(CSI.kClear);\n        stream.write(uint8);\n    }\n    function clearScreenDown(stream) {\n        const uint8 = new text_encoding_ts_4.TextEncoder().encode(CSI.kClearScreenDown);\n        stream.write(uint8);\n    }\n    function getClassInstanceName(instance) {\n        if (typeof instance !== "object") {\n            return "";\n        }\n        if (!instance) {\n            return "";\n        }\n        const proto = Object.getPrototypeOf(instance);\n        if (proto && proto.constructor) {\n            return proto.constructor.name; // could be "Object" or "Array"\n        }\n        return "";\n    }\n    function createFunctionString(value\x2C _ctx) {\n        // Might be Function/AsyncFunction/GeneratorFunction\n        const cstrName = Object.getPrototypeOf(value).constructor.name;\n        if (value.name && value.name !== "anonymous") {\n            // from MDN spec\n            return `[${cstrName}: ${value.name}]`;\n        }\n        return `[${cstrName}]`;\n    }\n    function createIterableString(value\x2C ctx\x2C level\x2C maxLevel\x2C config) {\n        if (level >= maxLevel) {\n            return `[${config.typeName}]`;\n        }\n        ctx.add(value);\n        const entries = [];\n        // In cases e.g. Uint8Array.prototype\n        try {\n            for (const el of value) {\n                entries.push(config.entryHandler(el\x2C ctx\x2C level + 1\x2C maxLevel));\n            }\n        }\n        catch (e) { }\n        ctx.delete(value);\n        const iPrefix = `${config.displayName ? config.displayName + " " : ""}`;\n        const iContent = entries.length === 0 ? "" : ` ${entries.join("\x2C ")} `;\n        return `${iPrefix}${config.delims[0]}${iContent}${config.delims[1]}`;\n    }\n    function stringify(value\x2C ctx\x2C level\x2C maxLevel) {\n        switch (typeof value) {\n            case "string":\n                return value;\n            case "number":\n                // Special handling of -0\n                return Object.is(value\x2C -0) ? "-0" : `${value}`;\n            case "boolean":\n            case "undefined":\n            case "symbol":\n                return String(value);\n            case "bigint":\n                return `${value}n`;\n            case "function":\n                return createFunctionString(value\x2C ctx);\n            case "object":\n                if (value === null) {\n                    return "null";\n                }\n                if (ctx.has(value)) {\n                    return "[Circular]";\n                }\n                return createObjectString(value\x2C ctx\x2C level\x2C maxLevel);\n            default:\n                return "[Not Implemented]";\n        }\n    }\n    // Print strings when they are inside of arrays or objects with quotes\n    function stringifyWithQuotes(value\x2C ctx\x2C level\x2C maxLevel) {\n        switch (typeof value) {\n            case "string":\n                const trunc = value.length > STR_ABBREVIATE_SIZE\n                    ? value.slice(0\x2C STR_ABBREVIATE_SIZE) + "..."\n                    : value;\n                return JSON.stringify(trunc);\n            default:\n                return stringify(value\x2C ctx\x2C level\x2C maxLevel);\n        }\n    }\n    function createArrayString(value\x2C ctx\x2C level\x2C maxLevel) {\n        const printConfig = {\n            typeName: "Array"\x2C\n            displayName: ""\x2C\n            delims: ["["\x2C "]"]\x2C\n            entryHandler: (el\x2C ctx\x2C level\x2C maxLevel) => stringifyWithQuotes(el\x2C ctx\x2C level + 1\x2C maxLevel)\n        };\n        return createIterableString(value\x2C ctx\x2C level\x2C maxLevel\x2C printConfig);\n    }\n    function createTypedArrayString(typedArrayName\x2C value\x2C ctx\x2C level\x2C maxLevel) {\n        const printConfig = {\n            typeName: typedArrayName\x2C\n            displayName: typedArrayName\x2C\n            delims: ["["\x2C "]"]\x2C\n            entryHandler: (el\x2C ctx\x2C level\x2C maxLevel) => stringifyWithQuotes(el\x2C ctx\x2C level + 1\x2C maxLevel)\n        };\n        return createIterableString(value\x2C ctx\x2C level\x2C maxLevel\x2C printConfig);\n    }\n    function createSetString(value\x2C ctx\x2C level\x2C maxLevel) {\n        const printConfig = {\n            typeName: "Set"\x2C\n            displayName: "Set"\x2C\n            delims: ["{"\x2C "}"]\x2C\n            entryHandler: (el\x2C ctx\x2C level\x2C maxLevel) => stringifyWithQuotes(el\x2C ctx\x2C level + 1\x2C maxLevel)\n        };\n        return createIterableString(value\x2C ctx\x2C level\x2C maxLevel\x2C printConfig);\n    }\n    function createMapString(value\x2C ctx\x2C level\x2C maxLevel) {\n        const printConfig = {\n            typeName: "Map"\x2C\n            displayName: "Map"\x2C\n            delims: ["{"\x2C "}"]\x2C\n            entryHandler: (el\x2C ctx\x2C level\x2C maxLevel) => {\n                const [key\x2C val] = el;\n                return `${stringifyWithQuotes(key\x2C ctx\x2C level + 1\x2C maxLevel)} => ${stringifyWithQuotes(val\x2C ctx\x2C level + 1\x2C maxLevel)}`;\n            }\n        };\n        return createIterableString(value\x2C ctx\x2C level\x2C maxLevel\x2C printConfig);\n    }\n    function createWeakSetString() {\n        return "WeakSet { [items unknown] }"; // as seen in Node\n    }\n    function createWeakMapString() {\n        return "WeakMap { [items unknown] }"; // as seen in Node\n    }\n    function createDateString(value) {\n        // without quotes\x2C ISO format\n        return value.toISOString();\n    }\n    function createRegExpString(value) {\n        return value.toString();\n    }\n    /* eslint-disable @typescript-eslint/ban-types */\n    function createStringWrapperString(value) {\n        return `[String: "${value.toString()}"]`;\n    }\n    function createBooleanWrapperString(value) {\n        return `[Boolean: ${value.toString()}]`;\n    }\n    function createNumberWrapperString(value) {\n        return `[Number: ${value.toString()}]`;\n    }\n    /* eslint-enable @typescript-eslint/ban-types */\n    // TODO: Promise\x2C requires v8 bindings to get info\n    // TODO: Proxy\n    function createRawObjectString(value\x2C ctx\x2C level\x2C maxLevel) {\n        if (level >= maxLevel) {\n            return "[Object]";\n        }\n        ctx.add(value);\n        let baseString = "";\n        const className = getClassInstanceName(value);\n        let shouldShowClassName = false;\n        if (className && className !== "Object" && className !== "anonymous") {\n            shouldShowClassName = true;\n        }\n        const keys = Object.keys(value);\n        const entries = keys.map((key) => {\n            if (keys.length > OBJ_ABBREVIATE_SIZE) {\n                return key;\n            }\n            else {\n                return `${key}: ${stringifyWithQuotes(value[key]\x2C ctx\x2C level + 1\x2C maxLevel)}`;\n            }\n        });\n        ctx.delete(value);\n        if (entries.length === 0) {\n            baseString = "{}";\n        }\n        else {\n            baseString = `{ ${entries.join("\x2C ")} }`;\n        }\n        if (shouldShowClassName) {\n            baseString = `${className} ${baseString}`;\n        }\n        return baseString;\n    }\n    function createObjectString(value\x2C ...args) {\n        if (exports.customInspect in value && typeof value[exports.customInspect] === "function") {\n            return String(value[exports.customInspect]());\n        }\n        else if (value instanceof Error) {\n            return String(value.stack);\n        }\n        else if (Array.isArray(value)) {\n            return createArrayString(value\x2C ...args);\n        }\n        else if (value instanceof Number) {\n            return createNumberWrapperString(value);\n        }\n        else if (value instanceof Boolean) {\n            return createBooleanWrapperString(value);\n        }\n        else if (value instanceof String) {\n            return createStringWrapperString(value);\n        }\n        else if (value instanceof RegExp) {\n            return createRegExpString(value);\n        }\n        else if (value instanceof Date) {\n            return createDateString(value);\n        }\n        else if (value instanceof Set) {\n            return createSetString(value\x2C ...args);\n        }\n        else if (value instanceof Map) {\n            return createMapString(value\x2C ...args);\n        }\n        else if (value instanceof WeakSet) {\n            return createWeakSetString();\n        }\n        else if (value instanceof WeakMap) {\n            return createWeakMapString();\n        }\n        else if (util_ts_3.isTypedArray(value)) {\n            return createTypedArrayString(Object.getPrototypeOf(value).constructor.name\x2C value\x2C ...args);\n        }\n        else {\n            // Otherwise\x2C default object formatting\n            return createRawObjectString(value\x2C ...args);\n        }\n    }\n    /** TODO Do not expose this from "deno" namespace.\n     * @internal\n     */\n    function stringifyArgs(args\x2C options = {}) {\n        const first = args[0];\n        let a = 0;\n        let str = "";\n        let join = "";\n        if (typeof first === "string") {\n            let tempStr;\n            let lastPos = 0;\n            for (let i = 0; i < first.length - 1; i++) {\n                if (first.charCodeAt(i) === CHAR_PERCENT) {\n                    const nextChar = first.charCodeAt(++i);\n                    if (a + 1 !== args.length) {\n                        switch (nextChar) {\n                            case CHAR_LOWERCASE_S:\n                                // format as a string\n                                tempStr = String(args[++a]);\n                                break;\n                            case CHAR_LOWERCASE_D:\n                            case CHAR_LOWERCASE_I:\n                                // format as an integer\n                                const tempInteger = args[++a];\n                                if (typeof tempInteger === "bigint") {\n                                    tempStr = `${tempInteger}n`;\n                                }\n                                else if (typeof tempInteger === "symbol") {\n                                    tempStr = "NaN";\n                                }\n                                else {\n                                    tempStr = `${parseInt(String(tempInteger)\x2C 10)}`;\n                                }\n                                break;\n                            case CHAR_LOWERCASE_F:\n                                // format as a floating point value\n                                const tempFloat = args[++a];\n                                if (typeof tempFloat === "symbol") {\n                                    tempStr = "NaN";\n                                }\n                                else {\n                                    tempStr = `${parseFloat(String(tempFloat))}`;\n                                }\n                                break;\n                            case CHAR_LOWERCASE_O:\n                            case CHAR_UPPERCASE_O:\n                                // format as an object\n                                tempStr = stringify(args[++a]\x2C new Set()\x2C 0\x2C options.depth != undefined ? options.depth : DEFAULT_MAX_DEPTH);\n                                break;\n                            case CHAR_PERCENT:\n                                str += first.slice(lastPos\x2C i);\n                                lastPos = i + 1;\n                                continue;\n                            case CHAR_LOWERCASE_C:\n                                // TODO: applies CSS style rules to the output string as specified\n                                continue;\n                            default:\n                                // any other character is not a correct placeholder\n                                continue;\n                        }\n                        if (lastPos !== i - 1) {\n                            str += first.slice(lastPos\x2C i - 1);\n                        }\n                        str += tempStr;\n                        lastPos = i + 1;\n                    }\n                    else if (nextChar === CHAR_PERCENT) {\n                        str += first.slice(lastPos\x2C i);\n                        lastPos = i + 1;\n                    }\n                }\n            }\n            if (lastPos !== 0) {\n                a++;\n                join = " ";\n                if (lastPos < first.length) {\n                    str += first.slice(lastPos);\n                }\n            }\n        }\n        while (a < args.length) {\n            const value = args[a];\n            str += join;\n            if (typeof value === "string") {\n                str += value;\n            }\n            else {\n                // use default maximum depth for null or undefined argument\n                str += stringify(value\x2C new Set()\x2C 0\x2C options.depth != undefined ? options.depth : DEFAULT_MAX_DEPTH);\n            }\n            join = " ";\n            a++;\n        }\n        const { indentLevel } = options;\n        if (indentLevel != null && indentLevel > 0) {\n            const groupIndent = " ".repeat(indentLevel);\n            if (str.indexOf("\\n") !== -1) {\n                str = str.replace(/\\n/g\x2C `\\n${groupIndent}`);\n            }\n            str = groupIndent + str;\n        }\n        return str;\n    }\n    exports.stringifyArgs = stringifyArgs;\n    const countMap = new Map();\n    const timerMap = new Map();\n    const isConsoleInstance = Symbol("isConsoleInstance");\n    class Console {\n        /** @internal */\n        constructor(printFunc) {\n            this.printFunc = printFunc;\n            this[_a] = false;\n            /** Writes the arguments to stdout */\n            this.log = (...args) => {\n                this.printFunc(stringifyArgs(args\x2C {\n                    indentLevel: this.indentLevel\n                }) + "\\n"\x2C false);\n            };\n            /** Writes the arguments to stdout */\n            this.debug = this.log;\n            /** Writes the arguments to stdout */\n            this.info = this.log;\n            /** Writes the properties of the supplied `obj` to stdout */\n            this.dir = (obj\x2C options = {}) => {\n                this.printFunc(stringifyArgs([obj]\x2C options) + "\\n"\x2C false);\n            };\n            /** From MDN:\n             * Displays an interactive tree of the descendant elements of\n             * the specified XML/HTML element. If it is not possible to display\n             * as an element the JavaScript Object view is shown instead.\n             * The output is presented as a hierarchical listing of expandable\n             * nodes that let you see the contents of child nodes.\n             *\n             * Since we write to stdout\x2C we can't display anything interactive\n             * we just fall back to `console.dir`.\n             */\n            this.dirxml = this.dir;\n            /** Writes the arguments to stdout */\n            this.warn = (...args) => {\n                this.printFunc(stringifyArgs(args\x2C {\n                    indentLevel: this.indentLevel\n                }) + "\\n"\x2C true);\n            };\n            /** Writes the arguments to stdout */\n            this.error = this.warn;\n            /** Writes an error message to stdout if the assertion is `false`. If the\n             * assertion is `true`\x2C nothing happens.\n             *\n             * ref: https://console.spec.whatwg.org/#assert\n             */\n            this.assert = (condition = false\x2C ...args) => {\n                if (condition) {\n                    return;\n                }\n                if (args.length === 0) {\n                    this.error("Assertion failed");\n                    return;\n                }\n                const [first\x2C ...rest] = args;\n                if (typeof first === "string") {\n                    this.error(`Assertion failed: ${first}`\x2C ...rest);\n                    return;\n                }\n                this.error(`Assertion failed:`\x2C ...args);\n            };\n            this.count = (label = "default") => {\n                label = String(label);\n                if (countMap.has(label)) {\n                    const current = countMap.get(label) || 0;\n                    countMap.set(label\x2C current + 1);\n                }\n                else {\n                    countMap.set(label\x2C 1);\n                }\n                this.info(`${label}: ${countMap.get(label)}`);\n            };\n            this.countReset = (label = "default") => {\n                label = String(label);\n                if (countMap.has(label)) {\n                    countMap.set(label\x2C 0);\n                }\n                else {\n                    this.warn(`Count for '${label}' does not exist`);\n                }\n            };\n            this.table = (data\x2C properties) => {\n                if (properties !== undefined && !Array.isArray(properties)) {\n                    throw new Error("The 'properties' argument must be of type Array. " +\n                        "Received type string");\n                }\n                if (data === null || typeof data !== "object") {\n                    return this.log(data);\n                }\n                const objectValues = {};\n                const indexKeys = [];\n                const values = [];\n                const stringifyValue = (value) => stringifyWithQuotes(value\x2C new Set()\x2C 0\x2C 1);\n                const toTable = (header\x2C body) => this.log(console_table_ts_1.cliTable(header\x2C body));\n                const createColumn = (value\x2C shift) => [\n                    ...(shift ? [...new Array(shift)].map(() => "") : [])\x2C\n                    stringifyValue(value)\n                ];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let resultData;\n                const isSet = data instanceof Set;\n                const isMap = data instanceof Map;\n                const valuesKey = "Values";\n                const indexKey = isSet || isMap ? "(iteration index)" : "(index)";\n                if (data instanceof Set) {\n                    resultData = [...data];\n                }\n                else if (data instanceof Map) {\n                    let idx = 0;\n                    resultData = {};\n                    data.forEach((v\x2C k) => {\n                        resultData[idx] = { Key: k\x2C Values: v };\n                        idx++;\n                    });\n                }\n                else {\n                    resultData = data;\n                }\n                Object.keys(resultData).forEach((k\x2C idx) => {\n                    const value = resultData[k];\n                    if (value !== null && typeof value === "object") {\n                        Object.entries(value).forEach(([k\x2C v]) => {\n                            if (properties && !properties.includes(k)) {\n                                return;\n                            }\n                            if (objectValues[k]) {\n                                objectValues[k].push(stringifyValue(v));\n                            }\n                            else {\n                                objectValues[k] = createColumn(v\x2C idx);\n                            }\n                        });\n                        values.push("");\n                    }\n                    else {\n                        values.push(stringifyValue(value));\n                    }\n                    indexKeys.push(k);\n                });\n                const headerKeys = Object.keys(objectValues);\n                const bodyValues = Object.values(objectValues);\n                const header = [\n                    indexKey\x2C\n                    ...(properties || [\n                        ...headerKeys\x2C\n                        !isMap && values.length > 0 && valuesKey\n                    ])\n                ].filter(Boolean);\n                const body = [indexKeys\x2C ...bodyValues\x2C values];\n                toTable(header\x2C body);\n            };\n            this.time = (label = "default") => {\n                label = String(label);\n                if (timerMap.has(label)) {\n                    this.warn(`Timer '${label}' already exists`);\n                    return;\n                }\n                timerMap.set(label\x2C Date.now());\n            };\n            this.timeLog = (label = "default"\x2C ...args) => {\n                label = String(label);\n                if (!timerMap.has(label)) {\n                    this.warn(`Timer '${label}' does not exists`);\n                    return;\n                }\n                const startTime = timerMap.get(label);\n                const duration = Date.now() - startTime;\n                this.info(`${label}: ${duration}ms`\x2C ...args);\n            };\n            this.timeEnd = (label = "default") => {\n                label = String(label);\n                if (!timerMap.has(label)) {\n                    this.warn(`Timer '${label}' does not exists`);\n                    return;\n                }\n                const startTime = timerMap.get(label);\n                timerMap.delete(label);\n                const duration = Date.now() - startTime;\n                this.info(`${label}: ${duration}ms`);\n            };\n            this.group = (...label) => {\n                if (label.length > 0) {\n                    this.log(...label);\n                }\n                this.indentLevel += 2;\n            };\n            this.groupCollapsed = this.group;\n            this.groupEnd = () => {\n                if (this.indentLevel > 0) {\n                    this.indentLevel -= 2;\n                }\n            };\n            this.clear = () => {\n                this.indentLevel = 0;\n                cursorTo(files_ts_1.stdout\x2C 0\x2C 0);\n                clearScreenDown(files_ts_1.stdout);\n            };\n            this.trace = (...args) => {\n                const message = stringifyArgs(args\x2C { indentLevel: 0 });\n                const err = {\n                    name: "Trace"\x2C\n                    message\n                };\n                // @ts-ignore\n                Error.captureStackTrace(err\x2C this.trace);\n                this.error(err.stack);\n            };\n            this.indentLevel = 0;\n            this[isConsoleInstance] = true;\n            // ref https://console.spec.whatwg.org/#console-namespace\n            // For historical web-compatibility reasons\x2C the namespace object for\n            // console must have as its [[Prototype]] an empty object\x2C created as if\n            // by ObjectCreate(%ObjectPrototype%)\x2C instead of %ObjectPrototype%.\n            const console = Object.create({});\n            Object.assign(console\x2C this);\n            return console;\n        }\n        static [(_a = isConsoleInstance\x2C Symbol.hasInstance)](instance) {\n            return instance[isConsoleInstance];\n        }\n    }\n    exports.Console = Console;\n    /** A symbol which can be used as a key for a custom method which will be called\n     * when `Deno.inspect()` is called\x2C or when the object is logged to the console.\n     */\n    exports.customInspect = Symbol.for("Deno.customInspect");\n    /**\n     * `inspect()` converts input into string that has the same format\n     * as printed by `console.log(...)`;\n     */\n    function inspect(value\x2C options) {\n        const opts = options || {};\n        if (typeof value === "string") {\n            return value;\n        }\n        else {\n            return stringify(value\x2C new Set()\x2C 0\x2C opts.depth != undefined ? opts.depth : DEFAULT_MAX_DEPTH);\n        }\n    }\n    exports.inspect = inspect;\n});\ndefine("$deno$/get_random_values.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_2\x2C util_ts_4) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Synchronously collects cryptographically secure random values. The\n     * underlying CSPRNG in use is Rust's `rand::rngs::ThreadRng`.\n     *\n     *       const arr = new Uint8Array(32);\n     *       crypto.getRandomValues(arr);\n     */\n    function getRandomValues(typedArray) {\n        util_ts_4.assert(typedArray !== null\x2C "Input must not be null");\n        util_ts_4.assert(typedArray.length <= 65536\x2C "Input must not be longer than 65536");\n        const ui8 = new Uint8Array(typedArray.buffer\x2C typedArray.byteOffset\x2C typedArray.byteLength);\n        dispatch_json_ts_2.sendSync(dispatch.OP_GET_RANDOM_VALUES\x2C {}\x2C ui8);\n        return typedArray;\n    }\n    exports.getRandomValues = getRandomValues;\n});\ndefine("$deno$/event.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dom_types.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C domTypes\x2C util_ts_5) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // WeakMaps are recommended for private attributes (see MDN link below)\n    // https://developer.mozilla.org/en-US/docs/Archive/Add-ons/Add-on_SDK/Guides/Contributor_s_Guide/Private_Properties#Using_WeakMaps\n    exports.eventAttributes = new WeakMap();\n    function isTrusted() {\n        return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "isTrusted");\n    }\n    class Event {\n        constructor(type\x2C eventInitDict = {}) {\n            // Each event has the following associated flags\n            this._canceledFlag = false;\n            this._dispatchedFlag = false;\n            this._initializedFlag = false;\n            this._inPassiveListenerFlag = false;\n            this._stopImmediatePropagationFlag = false;\n            this._stopPropagationFlag = false;\n            // Property for objects on which listeners will be invoked\n            this._path = [];\n            util_ts_5.requiredArguments("Event"\x2C arguments.length\x2C 1);\n            type = String(type);\n            this._initializedFlag = true;\n            exports.eventAttributes.set(this\x2C {\n                type\x2C\n                bubbles: eventInitDict.bubbles || false\x2C\n                cancelable: eventInitDict.cancelable || false\x2C\n                composed: eventInitDict.composed || false\x2C\n                currentTarget: null\x2C\n                eventPhase: domTypes.EventPhase.NONE\x2C\n                isTrusted: false\x2C\n                relatedTarget: null\x2C\n                target: null\x2C\n                timeStamp: Date.now()\n            });\n            Reflect.defineProperty(this\x2C "isTrusted"\x2C {\n                enumerable: true\x2C\n                get: isTrusted\n            });\n        }\n        get bubbles() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "bubbles");\n        }\n        get cancelBubble() {\n            return this._stopPropagationFlag;\n        }\n        set cancelBubble(value) {\n            this._stopPropagationFlag = value;\n        }\n        get cancelBubbleImmediately() {\n            return this._stopImmediatePropagationFlag;\n        }\n        set cancelBubbleImmediately(value) {\n            this._stopImmediatePropagationFlag = value;\n        }\n        get cancelable() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "cancelable");\n        }\n        get composed() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "composed");\n        }\n        get currentTarget() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "currentTarget");\n        }\n        set currentTarget(value) {\n            exports.eventAttributes.set(this\x2C {\n                type: this.type\x2C\n                bubbles: this.bubbles\x2C\n                cancelable: this.cancelable\x2C\n                composed: this.composed\x2C\n                currentTarget: value\x2C\n                eventPhase: this.eventPhase\x2C\n                isTrusted: this.isTrusted\x2C\n                relatedTarget: this.relatedTarget\x2C\n                target: this.target\x2C\n                timeStamp: this.timeStamp\n            });\n        }\n        get defaultPrevented() {\n            return this._canceledFlag;\n        }\n        get dispatched() {\n            return this._dispatchedFlag;\n        }\n        set dispatched(value) {\n            this._dispatchedFlag = value;\n        }\n        get eventPhase() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "eventPhase");\n        }\n        set eventPhase(value) {\n            exports.eventAttributes.set(this\x2C {\n                type: this.type\x2C\n                bubbles: this.bubbles\x2C\n                cancelable: this.cancelable\x2C\n                composed: this.composed\x2C\n                currentTarget: this.currentTarget\x2C\n                eventPhase: value\x2C\n                isTrusted: this.isTrusted\x2C\n                relatedTarget: this.relatedTarget\x2C\n                target: this.target\x2C\n                timeStamp: this.timeStamp\n            });\n        }\n        get initialized() {\n            return this._initializedFlag;\n        }\n        set inPassiveListener(value) {\n            this._inPassiveListenerFlag = value;\n        }\n        get path() {\n            return this._path;\n        }\n        set path(value) {\n            this._path = value;\n        }\n        get relatedTarget() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "relatedTarget");\n        }\n        set relatedTarget(value) {\n            exports.eventAttributes.set(this\x2C {\n                type: this.type\x2C\n                bubbles: this.bubbles\x2C\n                cancelable: this.cancelable\x2C\n                composed: this.composed\x2C\n                currentTarget: this.currentTarget\x2C\n                eventPhase: this.eventPhase\x2C\n                isTrusted: this.isTrusted\x2C\n                relatedTarget: value\x2C\n                target: this.target\x2C\n                timeStamp: this.timeStamp\n            });\n        }\n        get target() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "target");\n        }\n        set target(value) {\n            exports.eventAttributes.set(this\x2C {\n                type: this.type\x2C\n                bubbles: this.bubbles\x2C\n                cancelable: this.cancelable\x2C\n                composed: this.composed\x2C\n                currentTarget: this.currentTarget\x2C\n                eventPhase: this.eventPhase\x2C\n                isTrusted: this.isTrusted\x2C\n                relatedTarget: this.relatedTarget\x2C\n                target: value\x2C\n                timeStamp: this.timeStamp\n            });\n        }\n        get timeStamp() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "timeStamp");\n        }\n        get type() {\n            return util_ts_5.getPrivateValue(this\x2C exports.eventAttributes\x2C "type");\n        }\n        /** Returns the event\u2019s path (objects on which listeners will be\n         * invoked). This does not include nodes in shadow trees if the\n         * shadow root was created with its ShadowRoot.mode closed.\n         *\n         *      event.composedPath();\n         */\n        composedPath() {\n            if (this._path.length === 0) {\n                return [];\n            }\n            const composedPath = [\n                {\n                    item: this.currentTarget\x2C\n                    itemInShadowTree: false\x2C\n                    relatedTarget: null\x2C\n                    rootOfClosedTree: false\x2C\n                    slotInClosedTree: false\x2C\n                    target: null\x2C\n                    touchTargetList: []\n                }\n            ];\n            let currentTargetIndex = 0;\n            let currentTargetHiddenSubtreeLevel = 0;\n            for (let index = this._path.length - 1; index >= 0; index--) {\n                const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = this._path[index];\n                if (rootOfClosedTree) {\n                    currentTargetHiddenSubtreeLevel++;\n                }\n                if (item === this.currentTarget) {\n                    currentTargetIndex = index;\n                    break;\n                }\n                if (slotInClosedTree) {\n                    currentTargetHiddenSubtreeLevel--;\n                }\n            }\n            let currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n            let maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n            for (let i = currentTargetIndex - 1; i >= 0; i--) {\n                const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = this._path[i];\n                if (rootOfClosedTree) {\n                    currentHiddenLevel++;\n                }\n                if (currentHiddenLevel <= maxHiddenLevel) {\n                    composedPath.unshift({\n                        item\x2C\n                        itemInShadowTree: false\x2C\n                        relatedTarget: null\x2C\n                        rootOfClosedTree: false\x2C\n                        slotInClosedTree: false\x2C\n                        target: null\x2C\n                        touchTargetList: []\n                    });\n                }\n                if (slotInClosedTree) {\n                    currentHiddenLevel--;\n                    if (currentHiddenLevel < maxHiddenLevel) {\n                        maxHiddenLevel = currentHiddenLevel;\n                    }\n                }\n            }\n            currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n            maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n            for (let index = currentTargetIndex + 1; index < this._path.length; index++) {\n                const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = this._path[index];\n                if (slotInClosedTree) {\n                    currentHiddenLevel++;\n                }\n                if (currentHiddenLevel <= maxHiddenLevel) {\n                    composedPath.push({\n                        item\x2C\n                        itemInShadowTree: false\x2C\n                        relatedTarget: null\x2C\n                        rootOfClosedTree: false\x2C\n                        slotInClosedTree: false\x2C\n                        target: null\x2C\n                        touchTargetList: []\n                    });\n                }\n                if (rootOfClosedTree) {\n                    currentHiddenLevel--;\n                    if (currentHiddenLevel < maxHiddenLevel) {\n                        maxHiddenLevel = currentHiddenLevel;\n                    }\n                }\n            }\n            return composedPath;\n        }\n        /** Cancels the event (if it is cancelable).\n         * See https://dom.spec.whatwg.org/#set-the-canceled-flag\n         *\n         *      event.preventDefault();\n         */\n        preventDefault() {\n            if (this.cancelable && !this._inPassiveListenerFlag) {\n                this._canceledFlag = true;\n            }\n        }\n        /** Stops the propagation of events further along in the DOM.\n         *\n         *      event.stopPropagation();\n         */\n        stopPropagation() {\n            this._stopPropagationFlag = true;\n        }\n        /** For this particular event\x2C no other listener will be called.\n         * Neither those attached on the same element\x2C nor those attached\n         * on elements which will be traversed later (in capture phase\x2C\n         * for instance).\n         *\n         *      event.stopImmediatePropagation();\n         */\n        stopImmediatePropagation() {\n            this._stopPropagationFlag = true;\n            this._stopImmediatePropagationFlag = true;\n        }\n    }\n    exports.Event = Event;\n    /** Built-in objects providing `get` methods for our\n     * interceptable JavaScript operations.\n     */\n    Reflect.defineProperty(Event.prototype\x2C "bubbles"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "cancelable"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "composed"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "currentTarget"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "defaultPrevented"\x2C {\n        enumerable: true\n    });\n    Reflect.defineProperty(Event.prototype\x2C "dispatched"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "eventPhase"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "target"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "timeStamp"\x2C { enumerable: true });\n    Reflect.defineProperty(Event.prototype\x2C "type"\x2C { enumerable: true });\n});\ndefine("$deno$/custom_event.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/event.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C event\x2C util_ts_6) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // WeakMaps are recommended for private attributes (see MDN link below)\n    // https://developer.mozilla.org/en-US/docs/Archive/Add-ons/Add-on_SDK/Guides/Contributor_s_Guide/Private_Properties#Using_WeakMaps\n    exports.customEventAttributes = new WeakMap();\n    class CustomEvent extends event.Event {\n        constructor(type\x2C customEventInitDict = {}) {\n            util_ts_6.requiredArguments("CustomEvent"\x2C arguments.length\x2C 1);\n            super(type\x2C customEventInitDict);\n            const { detail = null } = customEventInitDict;\n            exports.customEventAttributes.set(this\x2C { detail });\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        get detail() {\n            return util_ts_6.getPrivateValue(this\x2C exports.customEventAttributes\x2C "detail");\n        }\n        initCustomEvent(type\x2C bubbles\x2C cancelable\x2C \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        detail) {\n            if (this.dispatched) {\n                return;\n            }\n            exports.customEventAttributes.set(this\x2C { detail });\n        }\n        get [Symbol.toStringTag]() {\n            return "CustomEvent";\n        }\n    }\n    exports.CustomEvent = CustomEvent;\n    /** Built-in objects providing `get` methods for our\n     * interceptable JavaScript operations.\n     */\n    Reflect.defineProperty(CustomEvent.prototype\x2C "detail"\x2C { enumerable: true });\n});\ndefine("$deno$/os.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/core.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/util.ts"\x2C "$deno$/util.ts"\x2C "$deno$/window.ts"\x2C "$deno$/deno.ts"]\x2C function (require\x2C exports\x2C core_ts_3\x2C dispatch\x2C dispatch_json_ts_3\x2C util_ts_7\x2C util\x2C window_ts_3\x2C deno_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Check if running in terminal.\n     *\n     *       console.log(Deno.isTTY().stdout);\n     */\n    function isTTY() {\n        return dispatch_json_ts_3.sendSync(dispatch.OP_IS_TTY);\n    }\n    exports.isTTY = isTTY;\n    /** Get the hostname.\n     * Requires the `--allow-env` flag.\n     *\n     *       console.log(Deno.hostname());\n     */\n    function hostname() {\n        return dispatch_json_ts_3.sendSync(dispatch.OP_HOSTNAME);\n    }\n    exports.hostname = hostname;\n    /** Exit the Deno process with optional exit code. */\n    function exit(code = 0) {\n        dispatch_json_ts_3.sendSync(dispatch.OP_EXIT\x2C { code });\n        return util.unreachable();\n    }\n    exports.exit = exit;\n    function setEnv(key\x2C value) {\n        dispatch_json_ts_3.sendSync(dispatch.OP_SET_ENV\x2C { key\x2C value });\n    }\n    function getEnv(key) {\n        return dispatch_json_ts_3.sendSync(dispatch.OP_GET_ENV\x2C { key })[0];\n    }\n    function env(key) {\n        if (key) {\n            return getEnv(key);\n        }\n        const env = dispatch_json_ts_3.sendSync(dispatch.OP_ENV);\n        return new Proxy(env\x2C {\n            set(obj\x2C prop\x2C value) {\n                setEnv(prop\x2C value);\n                return Reflect.set(obj\x2C prop\x2C value);\n            }\n        });\n    }\n    exports.env = env;\n    // This function bootstraps an environment within Deno\x2C it is shared both by\n    // the runtime and the compiler environments.\n    // @internal\n    function start(preserveDenoNamespace = true\x2C source) {\n        core_ts_3.core.setAsyncHandler(dispatch.asyncMsgFromRust);\n        const ops = core_ts_3.core.ops();\n        // TODO(bartlomieju): this is a prototype\x2C we should come up with\n        // something a bit more sophisticated\n        for (const [name\x2C opId] of Object.entries(ops)) {\n            const opName = `OP_${name.toUpperCase()}`;\n            // Assign op ids to actual variables\n            dispatch[opName] = opId;\n        }\n        // First we send an empty `Start` message to let the privileged side know we\n        // are ready. The response should be a `StartRes` message containing the CLI\n        // args and other info.\n        const s = dispatch_json_ts_3.sendSync(dispatch.OP_START);\n        util.setLogDebug(s.debugFlag\x2C source);\n        // pid and noColor need to be set in the Deno module before it's set to be\n        // frozen.\n        deno_ts_1._setGlobals(s.pid\x2C s.noColor);\n        delete window_ts_3.window.Deno._setGlobals;\n        Object.freeze(window_ts_3.window.Deno);\n        if (preserveDenoNamespace) {\n            util.immutableDefine(window_ts_3.window\x2C "Deno"\x2C window_ts_3.window.Deno);\n            // Deno.core could ONLY be safely frozen here (not in globals.ts)\n            // since shared_queue.js will modify core properties.\n            Object.freeze(window_ts_3.window.Deno.core);\n            // core.sharedQueue is an object so we should also freeze it.\n            Object.freeze(window_ts_3.window.Deno.core.sharedQueue);\n        }\n        else {\n            // Remove window.Deno\n            delete window_ts_3.window.Deno;\n            util_ts_7.assert(window_ts_3.window.Deno === undefined);\n        }\n        return s;\n    }\n    exports.start = start;\n    /**\n     * Returns the current user's home directory.\n     * Requires the `--allow-env` flag.\n     */\n    function homeDir() {\n        const path = dispatch_json_ts_3.sendSync(dispatch.OP_HOME_DIR);\n        if (!path) {\n            throw new Error("Could not get home directory.");\n        }\n        return path;\n    }\n    exports.homeDir = homeDir;\n    /**\n     * Returns the path to the current deno executable.\n     * Requires the `--allow-env` flag.\n     */\n    function execPath() {\n        return dispatch_json_ts_3.sendSync(dispatch.OP_EXEC_PATH);\n    }\n    exports.execPath = execPath;\n});\ndefine("$deno$/dir.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_4\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /**\n     * `cwd()` Return a string representing the current working directory.\n     * If the current directory can be reached via multiple paths\n     * (due to symbolic links)\x2C `cwd()` may return\n     * any one of them.\n     * throws `NotFound` exception if directory not available\n     */\n    function cwd() {\n        return dispatch_json_ts_4.sendSync(dispatch.OP_CWD);\n    }\n    exports.cwd = cwd;\n    /**\n     * `chdir()` Change the current working directory to path.\n     * throws `NotFound` exception if directory not available\n     */\n    function chdir(directory) {\n        dispatch_json_ts_4.sendSync(dispatch.OP_CHDIR\x2C { directory });\n    }\n    exports.chdir = chdir;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\ndefine("$deno$/buffer.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/io.ts"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/errors.ts"]\x2C function (require\x2C exports\x2C io_ts_2\x2C util_ts_8\x2C text_encoding_ts_5\x2C errors_ts_3) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // MIN_READ is the minimum ArrayBuffer size passed to a read call by\n    // buffer.ReadFrom. As long as the Buffer has at least MIN_READ bytes beyond\n    // what is required to hold the contents of r\x2C readFrom() will not grow the\n    // underlying buffer.\n    const MIN_READ = 512;\n    const MAX_SIZE = 2 ** 32 - 2;\n    // `off` is the offset into `dst` where it will at which to begin writing values\n    // from `src`.\n    // Returns the number of bytes copied.\n    function copyBytes(dst\x2C src\x2C off = 0) {\n        const r = dst.byteLength - off;\n        if (src.byteLength > r) {\n            src = src.subarray(0\x2C r);\n        }\n        dst.set(src\x2C off);\n        return src.byteLength;\n    }\n    /** A Buffer is a variable-sized buffer of bytes with read() and write()\n     * methods. Based on https://golang.org/pkg/bytes/#Buffer\n     */\n    class Buffer {\n        constructor(ab) {\n            this.off = 0; // read at buf[off]\x2C write at buf[buf.byteLength]\n            if (ab == null) {\n                this.buf = new Uint8Array(0);\n                return;\n            }\n            this.buf = new Uint8Array(ab);\n        }\n        /** bytes() returns a slice holding the unread portion of the buffer.\n         * The slice is valid for use only until the next buffer modification (that\n         * is\x2C only until the next call to a method like read()\x2C write()\x2C reset()\x2C or\n         * truncate()). The slice aliases the buffer content at least until the next\n         * buffer modification\x2C so immediate changes to the slice will affect the\n         * result of future reads.\n         */\n        bytes() {\n            return this.buf.subarray(this.off);\n        }\n        /** toString() returns the contents of the unread portion of the buffer\n         * as a string. Warning - if multibyte characters are present when data is\n         * flowing through the buffer\x2C this method may result in incorrect strings\n         * due to a character being split.\n         */\n        toString() {\n            const decoder = new text_encoding_ts_5.TextDecoder();\n            return decoder.decode(this.buf.subarray(this.off));\n        }\n        /** empty() returns whether the unread portion of the buffer is empty. */\n        empty() {\n            return this.buf.byteLength <= this.off;\n        }\n        /** length is a getter that returns the number of bytes of the unread\n         * portion of the buffer\n         */\n        get length() {\n            return this.buf.byteLength - this.off;\n        }\n        /** Returns the capacity of the buffer's underlying byte slice\x2C that is\x2C\n         * the total space allocated for the buffer's data.\n         */\n        get capacity() {\n            return this.buf.buffer.byteLength;\n        }\n        /** truncate() discards all but the first n unread bytes from the buffer but\n         * continues to use the same allocated storage.  It throws if n is negative or\n         * greater than the length of the buffer.\n         */\n        truncate(n) {\n            if (n === 0) {\n                this.reset();\n                return;\n            }\n            if (n < 0 || n > this.length) {\n                throw Error("bytes.Buffer: truncation out of range");\n            }\n            this._reslice(this.off + n);\n        }\n        /** reset() resets the buffer to be empty\x2C but it retains the underlying\n         * storage for use by future writes. reset() is the same as truncate(0)\n         */\n        reset() {\n            this._reslice(0);\n            this.off = 0;\n        }\n        /** _tryGrowByReslice() is a version of grow for the fast-case\n         * where the internal buffer only needs to be resliced. It returns the index\n         * where bytes should be written and whether it succeeded.\n         * It returns -1 if a reslice was not needed.\n         */\n        _tryGrowByReslice(n) {\n            const l = this.buf.byteLength;\n            if (n <= this.capacity - l) {\n                this._reslice(l + n);\n                return l;\n            }\n            return -1;\n        }\n        _reslice(len) {\n            util_ts_8.assert(len <= this.buf.buffer.byteLength);\n            this.buf = new Uint8Array(this.buf.buffer\x2C 0\x2C len);\n        }\n        /** readSync() reads the next len(p) bytes from the buffer or until the buffer\n         * is drained. The return value n is the number of bytes read. If the\n         * buffer has no data to return\x2C eof in the response will be true.\n         */\n        readSync(p) {\n            if (this.empty()) {\n                // Buffer is empty\x2C reset to recover space.\n                this.reset();\n                if (p.byteLength === 0) {\n                    // this edge case is tested in 'bufferReadEmptyAtEOF' test\n                    return 0;\n                }\n                return io_ts_2.EOF;\n            }\n            const nread = copyBytes(p\x2C this.buf.subarray(this.off));\n            this.off += nread;\n            return nread;\n        }\n        async read(p) {\n            const rr = this.readSync(p);\n            return Promise.resolve(rr);\n        }\n        writeSync(p) {\n            const m = this._grow(p.byteLength);\n            return copyBytes(this.buf\x2C p\x2C m);\n        }\n        async write(p) {\n            const n = this.writeSync(p);\n            return Promise.resolve(n);\n        }\n        /** _grow() grows the buffer to guarantee space for n more bytes.\n         * It returns the index where bytes should be written.\n         * If the buffer can't grow it will throw with ErrTooLarge.\n         */\n        _grow(n) {\n            const m = this.length;\n            // If buffer is empty\x2C reset to recover space.\n            if (m === 0 && this.off !== 0) {\n                this.reset();\n            }\n            // Fast: Try to grow by means of a reslice.\n            const i = this._tryGrowByReslice(n);\n            if (i >= 0) {\n                return i;\n            }\n            const c = this.capacity;\n            if (n <= Math.floor(c / 2) - m) {\n                // We can slide things down instead of allocating a new\n                // ArrayBuffer. We only need m+n <= c to slide\x2C but\n                // we instead let capacity get twice as large so we\n                // don't spend all our time copying.\n                copyBytes(this.buf\x2C this.buf.subarray(this.off));\n            }\n            else if (c > MAX_SIZE - c - n) {\n                throw new errors_ts_3.DenoError(errors_ts_3.ErrorKind.TooLarge\x2C "The buffer cannot be grown beyond the maximum size.");\n            }\n            else {\n                // Not enough space anywhere\x2C we need to allocate.\n                const buf = new Uint8Array(2 * c + n);\n                copyBytes(buf\x2C this.buf.subarray(this.off));\n                this.buf = buf;\n            }\n            // Restore this.off and len(this.buf).\n            this.off = 0;\n            this._reslice(m + n);\n            return m;\n        }\n        /** grow() grows the buffer's capacity\x2C if necessary\x2C to guarantee space for\n         * another n bytes. After grow(n)\x2C at least n bytes can be written to the\n         * buffer without another allocation. If n is negative\x2C grow() will panic. If\n         * the buffer can't grow it will throw ErrTooLarge.\n         * Based on https://golang.org/pkg/bytes/#Buffer.Grow\n         */\n        grow(n) {\n            if (n < 0) {\n                throw Error("Buffer.grow: negative count");\n            }\n            const m = this._grow(n);\n            this._reslice(m);\n        }\n        /** readFrom() reads data from r until EOF and appends it to the buffer\x2C\n         * growing the buffer as needed. It returns the number of bytes read. If the\n         * buffer becomes too large\x2C readFrom will panic with ErrTooLarge.\n         * Based on https://golang.org/pkg/bytes/#Buffer.ReadFrom\n         */\n        async readFrom(r) {\n            let n = 0;\n            while (true) {\n                try {\n                    const i = this._grow(MIN_READ);\n                    this._reslice(i);\n                    const fub = new Uint8Array(this.buf.buffer\x2C i);\n                    const nread = await r.read(fub);\n                    if (nread === io_ts_2.EOF) {\n                        return n;\n                    }\n                    this._reslice(i + nread);\n                    n += nread;\n                }\n                catch (e) {\n                    return n;\n                }\n            }\n        }\n        /** Sync version of `readFrom`\n         */\n        readFromSync(r) {\n            let n = 0;\n            while (true) {\n                try {\n                    const i = this._grow(MIN_READ);\n                    this._reslice(i);\n                    const fub = new Uint8Array(this.buf.buffer\x2C i);\n                    const nread = r.readSync(fub);\n                    if (nread === io_ts_2.EOF) {\n                        return n;\n                    }\n                    this._reslice(i + nread);\n                    n += nread;\n                }\n                catch (e) {\n                    return n;\n                }\n            }\n        }\n    }\n    exports.Buffer = Buffer;\n    /** Read `r` until EOF and return the content as `Uint8Array`.\n     */\n    async function readAll(r) {\n        const buf = new Buffer();\n        await buf.readFrom(r);\n        return buf.bytes();\n    }\n    exports.readAll = readAll;\n    /** Read synchronously `r` until EOF and return the content as `Uint8Array`.\n     */\n    function readAllSync(r) {\n        const buf = new Buffer();\n        buf.readFromSync(r);\n        return buf.bytes();\n    }\n    exports.readAllSync = readAllSync;\n    /** Write all the content of `arr` to `w`.\n     */\n    async function writeAll(w\x2C arr) {\n        let nwritten = 0;\n        while (nwritten < arr.length) {\n            nwritten += await w.write(arr.subarray(nwritten));\n        }\n    }\n    exports.writeAll = writeAll;\n    /** Write synchronously all the content of `arr` to `w`.\n     */\n    function writeAllSync(w\x2C arr) {\n        let nwritten = 0;\n        while (nwritten < arr.length) {\n            nwritten += w.writeSync(arr.subarray(nwritten));\n        }\n    }\n    exports.writeAllSync = writeAllSync;\n});\ndefine("$deno$/mkdir.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_5\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Creates a new directory with the specified path synchronously.\n     * If `recursive` is set to true\x2C nested directories will be created (also known\n     * as "mkdir -p").\n     * `mode` sets permission bits (before umask) on UNIX and does nothing on\n     * Windows.\n     *\n     *       Deno.mkdirSync("new_dir");\n     *       Deno.mkdirSync("nested/directories"\x2C true);\n     */\n    function mkdirSync(path\x2C recursive = false\x2C mode = 0o777) {\n        dispatch_json_ts_5.sendSync(dispatch.OP_MKDIR\x2C { path\x2C recursive\x2C mode });\n    }\n    exports.mkdirSync = mkdirSync;\n    /** Creates a new directory with the specified path.\n     * If `recursive` is set to true\x2C nested directories will be created (also known\n     * as "mkdir -p").\n     * `mode` sets permission bits (before umask) on UNIX and does nothing on\n     * Windows.\n     *\n     *       await Deno.mkdir("new_dir");\n     *       await Deno.mkdir("nested/directories"\x2C true);\n     */\n    async function mkdir(path\x2C recursive = false\x2C mode = 0o777) {\n        await dispatch_json_ts_5.sendAsync(dispatch.OP_MKDIR\x2C { path\x2C recursive\x2C mode });\n    }\n    exports.mkdir = mkdir;\n});\ndefine("$deno$/make_temp_dir.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_6\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** makeTempDirSync is the synchronous version of `makeTempDir`.\n     *\n     *       const tempDirName0 = Deno.makeTempDirSync();\n     *       const tempDirName1 = Deno.makeTempDirSync({ prefix: 'my_temp' });\n     */\n    function makeTempDirSync(options = {}) {\n        return dispatch_json_ts_6.sendSync(dispatch.OP_MAKE_TEMP_DIR\x2C options);\n    }\n    exports.makeTempDirSync = makeTempDirSync;\n    /** makeTempDir creates a new temporary directory in the directory `dir`\x2C its\n     * name beginning with `prefix` and ending with `suffix`.\n     * It returns the full path to the newly created directory.\n     * If `dir` is unspecified\x2C tempDir uses the default directory for temporary\n     * files. Multiple programs calling tempDir simultaneously will not choose the\n     * same directory. It is the caller's responsibility to remove the directory\n     * when no longer needed.\n     *\n     *       const tempDirName0 = await Deno.makeTempDir();\n     *       const tempDirName1 = await Deno.makeTempDir({ prefix: 'my_temp' });\n     */\n    async function makeTempDir(options = {}) {\n        return await dispatch_json_ts_6.sendAsync(dispatch.OP_MAKE_TEMP_DIR\x2C options);\n    }\n    exports.makeTempDir = makeTempDir;\n});\ndefine("$deno$/chmod.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_7\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Changes the permission of a specific file/directory of specified path\n     * synchronously.\n     *\n     *       Deno.chmodSync("/path/to/file"\x2C 0o666);\n     */\n    function chmodSync(path\x2C mode) {\n        dispatch_json_ts_7.sendSync(dispatch.OP_CHMOD\x2C { path\x2C mode });\n    }\n    exports.chmodSync = chmodSync;\n    /** Changes the permission of a specific file/directory of specified path.\n     *\n     *       await Deno.chmod("/path/to/file"\x2C 0o666);\n     */\n    async function chmod(path\x2C mode) {\n        await dispatch_json_ts_7.sendAsync(dispatch.OP_CHMOD\x2C { path\x2C mode });\n    }\n    exports.chmod = chmod;\n});\ndefine("$deno$/chown.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_8\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /**\n     * Change owner of a regular file or directory synchronously. Unix only at the moment.\n     * @param path path to the file\n     * @param uid user id of the new owner\n     * @param gid group id of the new owner\n     */\n    function chownSync(path\x2C uid\x2C gid) {\n        dispatch_json_ts_8.sendSync(dispatch.OP_CHOWN\x2C { path\x2C uid\x2C gid });\n    }\n    exports.chownSync = chownSync;\n    /**\n     * Change owner of a regular file or directory asynchronously. Unix only at the moment.\n     * @param path path to the file\n     * @param uid user id of the new owner\n     * @param gid group id of the new owner\n     */\n    async function chown(path\x2C uid\x2C gid) {\n        await dispatch_json_ts_8.sendAsync(dispatch.OP_CHOWN\x2C { path\x2C uid\x2C gid });\n    }\n    exports.chown = chown;\n});\ndefine("$deno$/utime.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_9\x2C dispatch_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function toSecondsFromEpoch(v) {\n        return v instanceof Date ? v.valueOf() / 1000 : v;\n    }\n    /** Synchronously changes the access and modification times of a file system\n     * object referenced by `filename`. Given times are either in seconds\n     * (Unix epoch time) or as `Date` objects.\n     *\n     *       Deno.utimeSync("myfile.txt"\x2C 1556495550\x2C new Date());\n     */\n    function utimeSync(filename\x2C atime\x2C mtime) {\n        dispatch_json_ts_9.sendSync(dispatch_ts_1.OP_UTIME\x2C {\n            filename\x2C\n            // TODO(ry) split atime\x2C mtime into [seconds\x2C nanoseconds] tuple\n            atime: toSecondsFromEpoch(atime)\x2C\n            mtime: toSecondsFromEpoch(mtime)\n        });\n    }\n    exports.utimeSync = utimeSync;\n    /** Changes the access and modification times of a file system object\n     * referenced by `filename`. Given times are either in seconds\n     * (Unix epoch time) or as `Date` objects.\n     *\n     *       await Deno.utime("myfile.txt"\x2C 1556495550\x2C new Date());\n     */\n    async function utime(filename\x2C atime\x2C mtime) {\n        await dispatch_json_ts_9.sendAsync(dispatch_ts_1.OP_UTIME\x2C {\n            filename\x2C\n            // TODO(ry) split atime\x2C mtime into [seconds\x2C nanoseconds] tuple\n            atime: toSecondsFromEpoch(atime)\x2C\n            mtime: toSecondsFromEpoch(mtime)\n        });\n    }\n    exports.utime = utime;\n});\ndefine("$deno$/remove.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_10\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Removes the named file or directory synchronously. Would throw\n     * error if permission denied\x2C not found\x2C or directory not empty if `recursive`\n     * set to false.\n     * `recursive` is set to false by default.\n     *\n     *       Deno.removeSync("/path/to/dir/or/file"\x2C {recursive: false});\n     */\n    function removeSync(path\x2C options = {}) {\n        dispatch_json_ts_10.sendSync(dispatch.OP_REMOVE\x2C { path\x2C recursive: !!options.recursive });\n    }\n    exports.removeSync = removeSync;\n    /** Removes the named file or directory. Would throw error if\n     * permission denied\x2C not found\x2C or directory not empty if `recursive` set\n     * to false.\n     * `recursive` is set to false by default.\n     *\n     *       await Deno.remove("/path/to/dir/or/file"\x2C {recursive: false});\n     */\n    async function remove(path\x2C options = {}) {\n        await dispatch_json_ts_10.sendAsync(dispatch.OP_REMOVE\x2C { path\x2C recursive: !!options.recursive });\n    }\n    exports.remove = remove;\n});\ndefine("$deno$/rename.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_11\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Synchronously renames (moves) `oldpath` to `newpath`. If `newpath` already\n     * exists and is not a directory\x2C `renameSync()` replaces it. OS-specific\n     * restrictions may apply when `oldpath` and `newpath` are in different\n     * directories.\n     *\n     *       Deno.renameSync("old/path"\x2C "new/path");\n     */\n    function renameSync(oldpath\x2C newpath) {\n        dispatch_json_ts_11.sendSync(dispatch.OP_RENAME\x2C { oldpath\x2C newpath });\n    }\n    exports.renameSync = renameSync;\n    /** Renames (moves) `oldpath` to `newpath`. If `newpath` already exists and is\n     * not a directory\x2C `rename()` replaces it. OS-specific restrictions may apply\n     * when `oldpath` and `newpath` are in different directories.\n     *\n     *       await Deno.rename("old/path"\x2C "new/path");\n     */\n    async function rename(oldpath\x2C newpath) {\n        await dispatch_json_ts_11.sendAsync(dispatch.OP_RENAME\x2C { oldpath\x2C newpath });\n    }\n    exports.rename = rename;\n});\ndefine("$deno$/read_file.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/files.ts"\x2C "$deno$/buffer.ts"]\x2C function (require\x2C exports\x2C files_ts_2\x2C buffer_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Read the entire contents of a file synchronously.\n     *\n     *       const decoder = new TextDecoder("utf-8");\n     *       const data = Deno.readFileSync("hello.txt");\n     *       console.log(decoder.decode(data));\n     */\n    function readFileSync(filename) {\n        const file = files_ts_2.openSync(filename);\n        const contents = buffer_ts_1.readAllSync(file);\n        file.close();\n        return contents;\n    }\n    exports.readFileSync = readFileSync;\n    /** Read the entire contents of a file.\n     *\n     *       const decoder = new TextDecoder("utf-8");\n     *       const data = await Deno.readFile("hello.txt");\n     *       console.log(decoder.decode(data));\n     */\n    async function readFile(filename) {\n        const file = await files_ts_2.open(filename);\n        const contents = await buffer_ts_1.readAll(file);\n        file.close();\n        return contents;\n    }\n    exports.readFile = readFile;\n});\ndefine("$deno$/stat.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/file_info.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_12\x2C dispatch\x2C file_info_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Queries the file system for information on the path provided. If the given\n     * path is a symlink information about the symlink will be returned.\n     *\n     *       const fileInfo = await Deno.lstat("hello.txt");\n     *       assert(fileInfo.isFile());\n     */\n    async function lstat(filename) {\n        const res = (await dispatch_json_ts_12.sendAsync(dispatch.OP_STAT\x2C {\n            filename\x2C\n            lstat: true\n        }));\n        return new file_info_ts_1.FileInfoImpl(res);\n    }\n    exports.lstat = lstat;\n    /** Queries the file system for information on the path provided synchronously.\n     * If the given path is a symlink information about the symlink will be\n     * returned.\n     *\n     *       const fileInfo = Deno.lstatSync("hello.txt");\n     *       assert(fileInfo.isFile());\n     */\n    function lstatSync(filename) {\n        const res = dispatch_json_ts_12.sendSync(dispatch.OP_STAT\x2C {\n            filename\x2C\n            lstat: true\n        });\n        return new file_info_ts_1.FileInfoImpl(res);\n    }\n    exports.lstatSync = lstatSync;\n    /** Queries the file system for information on the path provided. `stat` Will\n     * always follow symlinks.\n     *\n     *       const fileInfo = await Deno.stat("hello.txt");\n     *       assert(fileInfo.isFile());\n     */\n    async function stat(filename) {\n        const res = (await dispatch_json_ts_12.sendAsync(dispatch.OP_STAT\x2C {\n            filename\x2C\n            lstat: false\n        }));\n        return new file_info_ts_1.FileInfoImpl(res);\n    }\n    exports.stat = stat;\n    /** Queries the file system for information on the path provided synchronously.\n     * `statSync` Will always follow symlinks.\n     *\n     *       const fileInfo = Deno.statSync("hello.txt");\n     *       assert(fileInfo.isFile());\n     */\n    function statSync(filename) {\n        const res = dispatch_json_ts_12.sendSync(dispatch.OP_STAT\x2C {\n            filename\x2C\n            lstat: false\n        });\n        return new file_info_ts_1.FileInfoImpl(res);\n    }\n    exports.statSync = statSync;\n});\ndefine("$deno$/file_info.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // @internal\n    class FileInfoImpl {\n        /* @internal */\n        constructor(_res) {\n            this._res = _res;\n            const modified = this._res.modified;\n            const accessed = this._res.accessed;\n            const created = this._res.created;\n            const hasMode = this._res.hasMode;\n            const mode = this._res.mode; // negative for invalid mode (Windows)\n            const name = this._res.name;\n            this._isFile = this._res.isFile;\n            this._isSymlink = this._res.isSymlink;\n            this.len = this._res.len;\n            this.modified = modified ? modified : null;\n            this.accessed = accessed ? accessed : null;\n            this.created = created ? created : null;\n            // null on Windows\n            this.mode = hasMode ? mode : null;\n            this.name = name ? name : null;\n        }\n        isFile() {\n            return this._isFile;\n        }\n        isDirectory() {\n            return !this._isFile && !this._isSymlink;\n        }\n        isSymlink() {\n            return this._isSymlink;\n        }\n    }\n    exports.FileInfoImpl = FileInfoImpl;\n});\ndefine("$deno$/read_dir.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/file_info.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_13\x2C dispatch\x2C file_info_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function res(response) {\n        return response.entries.map((statRes) => {\n            return new file_info_ts_2.FileInfoImpl(statRes);\n        });\n    }\n    /** Reads the directory given by path and returns a list of file info\n     * synchronously.\n     *\n     *       const files = Deno.readDirSync("/");\n     */\n    function readDirSync(path) {\n        return res(dispatch_json_ts_13.sendSync(dispatch.OP_READ_DIR\x2C { path }));\n    }\n    exports.readDirSync = readDirSync;\n    /** Reads the directory given by path and returns a list of file info.\n     *\n     *       const files = await Deno.readDir("/");\n     */\n    async function readDir(path) {\n        return res(await dispatch_json_ts_13.sendAsync(dispatch.OP_READ_DIR\x2C { path }));\n    }\n    exports.readDir = readDir;\n});\ndefine("$deno$/copy_file.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_14\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Copies the contents of a file to another by name synchronously.\n     * Creates a new file if target does not exists\x2C and if target exists\x2C\n     * overwrites original content of the target file.\n     *\n     * It would also copy the permission of the original file\n     * to the destination.\n     *\n     *       Deno.copyFileSync("from.txt"\x2C "to.txt");\n     */\n    function copyFileSync(from\x2C to) {\n        dispatch_json_ts_14.sendSync(dispatch.OP_COPY_FILE\x2C { from\x2C to });\n    }\n    exports.copyFileSync = copyFileSync;\n    /** Copies the contents of a file to another by name.\n     *\n     * Creates a new file if target does not exists\x2C and if target exists\x2C\n     * overwrites original content of the target file.\n     *\n     * It would also copy the permission of the original file\n     * to the destination.\n     *\n     *       await Deno.copyFile("from.txt"\x2C "to.txt");\n     */\n    async function copyFile(from\x2C to) {\n        await dispatch_json_ts_14.sendAsync(dispatch.OP_COPY_FILE\x2C { from\x2C to });\n    }\n    exports.copyFile = copyFile;\n});\ndefine("$deno$/read_link.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_15\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Returns the destination of the named symbolic link synchronously.\n     *\n     *       const targetPath = Deno.readlinkSync("symlink/path");\n     */\n    function readlinkSync(name) {\n        return dispatch_json_ts_15.sendSync(dispatch.OP_READ_LINK\x2C { name });\n    }\n    exports.readlinkSync = readlinkSync;\n    /** Returns the destination of the named symbolic link.\n     *\n     *       const targetPath = await Deno.readlink("symlink/path");\n     */\n    async function readlink(name) {\n        return await dispatch_json_ts_15.sendAsync(dispatch.OP_READ_LINK\x2C { name });\n    }\n    exports.readlink = readlink;\n});\ndefine("$deno$/link.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_16\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Synchronously creates `newname` as a hard link to `oldname`.\n     *\n     *       Deno.linkSync("old/name"\x2C "new/name");\n     */\n    function linkSync(oldname\x2C newname) {\n        dispatch_json_ts_16.sendSync(dispatch.OP_LINK\x2C { oldname\x2C newname });\n    }\n    exports.linkSync = linkSync;\n    /** Creates `newname` as a hard link to `oldname`.\n     *\n     *       await Deno.link("old/name"\x2C "new/name");\n     */\n    async function link(oldname\x2C newname) {\n        await dispatch_json_ts_16.sendAsync(dispatch.OP_LINK\x2C { oldname\x2C newname });\n    }\n    exports.link = link;\n});\ndefine("$deno$/symlink.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/util.ts"\x2C "$deno$/build.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_17\x2C dispatch\x2C util\x2C build_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Synchronously creates `newname` as a symbolic link to `oldname`. The type\n     * argument can be set to `dir` or `file` and is only available on Windows\n     * (ignored on other platforms).\n     *\n     *       Deno.symlinkSync("old/name"\x2C "new/name");\n     */\n    function symlinkSync(oldname\x2C newname\x2C type) {\n        if (build_ts_2.build.os === "win" && type) {\n            return util.notImplemented();\n        }\n        dispatch_json_ts_17.sendSync(dispatch.OP_SYMLINK\x2C { oldname\x2C newname });\n    }\n    exports.symlinkSync = symlinkSync;\n    /** Creates `newname` as a symbolic link to `oldname`. The type argument can be\n     * set to `dir` or `file` and is only available on Windows (ignored on other\n     * platforms).\n     *\n     *       await Deno.symlink("old/name"\x2C "new/name");\n     */\n    async function symlink(oldname\x2C newname\x2C type) {\n        if (build_ts_2.build.os === "win" && type) {\n            return util.notImplemented();\n        }\n        await dispatch_json_ts_17.sendAsync(dispatch.OP_SYMLINK\x2C { oldname\x2C newname });\n    }\n    exports.symlink = symlink;\n});\ndefine("$deno$/write_file.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/stat.ts"\x2C "$deno$/files.ts"\x2C "$deno$/chmod.ts"\x2C "$deno$/buffer.ts"]\x2C function (require\x2C exports\x2C stat_ts_1\x2C files_ts_3\x2C chmod_ts_1\x2C buffer_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Write a new file\x2C with given filename and data synchronously.\n     *\n     *       const encoder = new TextEncoder();\n     *       const data = encoder.encode("Hello world\\n");\n     *       Deno.writeFileSync("hello.txt"\x2C data);\n     */\n    function writeFileSync(filename\x2C data\x2C options = {}) {\n        if (options.create !== undefined) {\n            const create = !!options.create;\n            if (!create) {\n                // verify that file exists\n                stat_ts_1.statSync(filename);\n            }\n        }\n        const openMode = !!options.append ? "a" : "w";\n        const file = files_ts_3.openSync(filename\x2C openMode);\n        if (options.perm !== undefined && options.perm !== null) {\n            chmod_ts_1.chmodSync(filename\x2C options.perm);\n        }\n        buffer_ts_2.writeAllSync(file\x2C data);\n        file.close();\n    }\n    exports.writeFileSync = writeFileSync;\n    /** Write a new file\x2C with given filename and data.\n     *\n     *       const encoder = new TextEncoder();\n     *       const data = encoder.encode("Hello world\\n");\n     *       await Deno.writeFile("hello.txt"\x2C data);\n     */\n    async function writeFile(filename\x2C data\x2C options = {}) {\n        if (options.create !== undefined) {\n            const create = !!options.create;\n            if (!create) {\n                // verify that file exists\n                await stat_ts_1.stat(filename);\n            }\n        }\n        const openMode = !!options.append ? "a" : "w";\n        const file = await files_ts_3.open(filename\x2C openMode);\n        if (options.perm !== undefined && options.perm !== null) {\n            await chmod_ts_1.chmod(filename\x2C options.perm);\n        }\n        await buffer_ts_2.writeAll(file\x2C data);\n        file.close();\n    }\n    exports.writeFile = writeFile;\n});\ndefine("$deno$/error_stack.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_18\x2C util_ts_9) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Given a current location in a module\x2C lookup the source location and\n     * return it.\n     *\n     * When Deno transpiles code\x2C it keep source maps of the transpiled code.  This\n     * function can be used to lookup the original location.  This is automatically\n     * done when accessing the `.stack` of an error\x2C or when an uncaught error is\n     * logged.  This function can be used to perform the lookup for creating better\n     * error handling.\n     *\n     * **Note:** `line` and `column` are 1 indexed\x2C which matches display\n     * expectations\x2C but is not typical of most index numbers in Deno.\n     *\n     * An example:\n     *\n     *       const orig = Deno.applySourceMap({\n     *         location: "file://my/module.ts"\x2C\n     *         line: 5\x2C\n     *         column: 15\n     *       });\n     *       console.log(`${orig.filename}:${orig.line}:${orig.column}`);\n     *\n     */\n    function applySourceMap(location) {\n        const { filename\x2C line\x2C column } = location;\n        // On this side\x2C line/column are 1 based\x2C but in the source maps\x2C they are\n        // 0 based\x2C so we have to convert back and forth\n        const res = dispatch_json_ts_18.sendSync(dispatch.OP_APPLY_SOURCE_MAP\x2C {\n            filename\x2C\n            line: line - 1\x2C\n            column: column - 1\n        });\n        return {\n            filename: res.filename\x2C\n            line: res.line + 1\x2C\n            column: res.column + 1\n        };\n    }\n    exports.applySourceMap = applySourceMap;\n    /** Mutate the call site so that it returns the location\x2C instead of its\n     * original location.\n     */\n    function patchCallSite(callSite\x2C location) {\n        return {\n            getThis() {\n                return callSite.getThis();\n            }\x2C\n            getTypeName() {\n                return callSite.getTypeName();\n            }\x2C\n            getFunction() {\n                return callSite.getFunction();\n            }\x2C\n            getFunctionName() {\n                return callSite.getFunctionName();\n            }\x2C\n            getMethodName() {\n                return callSite.getMethodName();\n            }\x2C\n            getFileName() {\n                return location.filename;\n            }\x2C\n            getLineNumber() {\n                return location.line;\n            }\x2C\n            getColumnNumber() {\n                return location.column;\n            }\x2C\n            getEvalOrigin() {\n                return callSite.getEvalOrigin();\n            }\x2C\n            isToplevel() {\n                return callSite.isToplevel();\n            }\x2C\n            isEval() {\n                return callSite.isEval();\n            }\x2C\n            isNative() {\n                return callSite.isNative();\n            }\x2C\n            isConstructor() {\n                return callSite.isConstructor();\n            }\x2C\n            isAsync() {\n                return callSite.isAsync();\n            }\x2C\n            isPromiseAll() {\n                return callSite.isPromiseAll();\n            }\x2C\n            getPromiseIndex() {\n                return callSite.getPromiseIndex();\n            }\n        };\n    }\n    /** Return a string representations of a CallSite's method call name\n     *\n     * This is adapted directly from V8.\n     */\n    function getMethodCall(callSite) {\n        let result = "";\n        const typeName = callSite.getTypeName();\n        const methodName = callSite.getMethodName();\n        const functionName = callSite.getFunctionName();\n        if (functionName) {\n            if (typeName) {\n                const startsWithTypeName = functionName.startsWith(typeName);\n                if (!startsWithTypeName) {\n                    result += `${typeName}.`;\n                }\n            }\n            result += functionName;\n            if (methodName) {\n                if (!functionName.endsWith(methodName)) {\n                    result += ` [as ${methodName}]`;\n                }\n            }\n        }\n        else {\n            if (typeName) {\n                result += `${typeName}.`;\n            }\n            if (methodName) {\n                result += methodName;\n            }\n            else {\n                result += "<anonymous>";\n            }\n        }\n        return result;\n    }\n    /** Return a string representations of a CallSite's file location\n     *\n     * This is adapted directly from V8.\n     */\n    function getFileLocation(callSite) {\n        if (callSite.isNative()) {\n            return "native";\n        }\n        let result = "";\n        const fileName = callSite.getFileName();\n        if (!fileName && callSite.isEval()) {\n            const evalOrigin = callSite.getEvalOrigin();\n            util_ts_9.assert(evalOrigin != null);\n            result += `${evalOrigin}\x2C `;\n        }\n        if (fileName) {\n            result += fileName;\n        }\n        else {\n            result += "<anonymous>";\n        }\n        const lineNumber = callSite.getLineNumber();\n        if (lineNumber != null) {\n            result += `:${lineNumber}`;\n            const columnNumber = callSite.getColumnNumber();\n            if (columnNumber != null) {\n                result += `:${columnNumber}`;\n            }\n        }\n        return result;\n    }\n    /** Convert a CallSite to a string.\n     *\n     * This is adapted directly from V8.\n     */\n    function callSiteToString(callSite) {\n        let result = "";\n        const functionName = callSite.getFunctionName();\n        const isTopLevel = callSite.isToplevel();\n        const isAsync = callSite.isAsync();\n        const isPromiseAll = callSite.isPromiseAll();\n        const isConstructor = callSite.isConstructor();\n        const isMethodCall = !(isTopLevel || isConstructor);\n        if (isAsync) {\n            result += "async ";\n        }\n        if (isPromiseAll) {\n            result += `Promise.all (index ${callSite.getPromiseIndex})`;\n            return result;\n        }\n        if (isMethodCall) {\n            result += getMethodCall(callSite);\n        }\n        else if (isConstructor) {\n            result += "new ";\n            if (functionName) {\n                result += functionName;\n            }\n            else {\n                result += "<anonymous>";\n            }\n        }\n        else if (functionName) {\n            result += functionName;\n        }\n        else {\n            result += getFileLocation(callSite);\n            return result;\n        }\n        result += ` (${getFileLocation(callSite)})`;\n        return result;\n    }\n    /** A replacement for the default stack trace preparer which will op into Rust\n     * to apply source maps to individual sites\n     */\n    function prepareStackTrace(error\x2C structuredStackTrace) {\n        return (`${error.name}: ${error.message}\\n` +\n            structuredStackTrace\n                .map((callSite) => {\n                const filename = callSite.getFileName();\n                const line = callSite.getLineNumber();\n                const column = callSite.getColumnNumber();\n                if (filename && line != null && column != null) {\n                    return patchCallSite(callSite\x2C applySourceMap({\n                        filename\x2C\n                        line\x2C\n                        column\n                    }));\n                }\n                return callSite;\n            })\n                .map((callSite) => `    at ${callSiteToString(callSite)}`)\n                .join("\\n"));\n    }\n    /** Sets the `prepareStackTrace` method on the Error constructor which will\n     * op into Rust to remap source code for caught errors where the `.stack` is\n     * being accessed.\n     *\n     * See: https://v8.dev/docs/stack-trace-api\n     */\n    // @internal\n    function setPrepareStackTrace(ErrorConstructor) {\n        ErrorConstructor.prepareStackTrace = prepareStackTrace;\n    }\n    exports.setPrepareStackTrace = setPrepareStackTrace;\n});\ndefine("$deno$/permissions.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_19) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Inspect granted permissions for the current program.\n     *\n     *       if (Deno.permissions().read) {\n     *         const file = await Deno.readFile("example.test");\n     *         // ...\n     *       }\n     */\n    function permissions() {\n        return dispatch_json_ts_19.sendSync(dispatch.OP_PERMISSIONS);\n    }\n    exports.permissions = permissions;\n    /** Revoke a permission. When the permission was already revoked nothing changes\n     *\n     *       if (Deno.permissions().read) {\n     *         const file = await Deno.readFile("example.test");\n     *         Deno.revokePermission('read');\n     *       }\n     *       Deno.readFile("example.test"); // -> error or permission prompt\n     */\n    function revokePermission(permission) {\n        dispatch_json_ts_19.sendSync(dispatch.OP_REVOKE_PERMISSION\x2C { permission });\n    }\n    exports.revokePermission = revokePermission;\n});\ndefine("$deno$/truncate.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_20\x2C dispatch) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function coerceLen(len) {\n        if (!len) {\n            return 0;\n        }\n        if (len < 0) {\n            return 0;\n        }\n        return len;\n    }\n    /** Truncates or extends the specified file synchronously\x2C updating the size of\n     * this file to become size.\n     *\n     *       Deno.truncateSync("hello.txt"\x2C 10);\n     */\n    function truncateSync(name\x2C len) {\n        dispatch_json_ts_20.sendSync(dispatch.OP_TRUNCATE\x2C { name\x2C len: coerceLen(len) });\n    }\n    exports.truncateSync = truncateSync;\n    /**\n     * Truncates or extends the specified file\x2C updating the size of this file to\n     * become size.\n     *\n     *       await Deno.truncate("hello.txt"\x2C 10);\n     */\n    async function truncate(name\x2C len) {\n        await dispatch_json_ts_20.sendAsync(dispatch.OP_TRUNCATE\x2C { name\x2C len: coerceLen(len) });\n    }\n    exports.truncate = truncate;\n});\ndefine("$deno$/net.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/files.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C util_ts_10\x2C files_ts_4\x2C dispatch\x2C dispatch_json_ts_21) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    var ShutdownMode;\n    (function (ShutdownMode) {\n        // See http://man7.org/linux/man-pages/man2/shutdown.2.html\n        // Corresponding to SHUT_RD\x2C SHUT_WR\x2C SHUT_RDWR\n        ShutdownMode[ShutdownMode["Read"] = 0] = "Read";\n        ShutdownMode[ShutdownMode["Write"] = 1] = "Write";\n        ShutdownMode[ShutdownMode["ReadWrite"] = 2] = "ReadWrite"; // unused\n    })(ShutdownMode || (ShutdownMode = {}));\n    function shutdown(rid\x2C how) {\n        dispatch_json_ts_21.sendSync(dispatch.OP_SHUTDOWN\x2C { rid\x2C how });\n    }\n    class ConnImpl {\n        constructor(rid\x2C remoteAddr\x2C localAddr) {\n            this.rid = rid;\n            this.remoteAddr = remoteAddr;\n            this.localAddr = localAddr;\n        }\n        write(p) {\n            return files_ts_4.write(this.rid\x2C p);\n        }\n        read(p) {\n            return files_ts_4.read(this.rid\x2C p);\n        }\n        close() {\n            files_ts_4.close(this.rid);\n        }\n        /** closeRead shuts down (shutdown(2)) the reading side of the TCP connection.\n         * Most callers should just use close().\n         */\n        closeRead() {\n            shutdown(this.rid\x2C ShutdownMode.Read);\n        }\n        /** closeWrite shuts down (shutdown(2)) the writing side of the TCP\n         * connection. Most callers should just use close().\n         */\n        closeWrite() {\n            shutdown(this.rid\x2C ShutdownMode.Write);\n        }\n    }\n    exports.ConnImpl = ConnImpl;\n    class ListenerImpl {\n        constructor(rid\x2C transport\x2C localAddr) {\n            this.rid = rid;\n            this.transport = transport;\n            this.localAddr = localAddr;\n        }\n        async accept() {\n            const res = await dispatch_json_ts_21.sendAsync(dispatch.OP_ACCEPT\x2C { rid: this.rid });\n            return new ConnImpl(res.rid\x2C res.remoteAddr\x2C res.localAddr);\n        }\n        close() {\n            files_ts_4.close(this.rid);\n        }\n        addr() {\n            return {\n                transport: this.transport\x2C\n                address: this.localAddr\n            };\n        }\n        async next() {\n            return {\n                done: false\x2C\n                value: await this.accept()\n            };\n        }\n        [Symbol.asyncIterator]() {\n            return this;\n        }\n    }\n    /** Listen announces on the local transport address.\n     *\n     * @param options\n     * @param options.port The port to connect to. (Required.)\n     * @param options.hostname A literal IP address or host name that can be\n     *   resolved to an IP address. If not specified\x2C defaults to 0.0.0.0\n     * @param options.transport Defaults to "tcp". Later we plan to add "tcp4"\x2C\n     *   "tcp6"\x2C "udp"\x2C "udp4"\x2C "udp6"\x2C "ip"\x2C "ip4"\x2C "ip6"\x2C "unix"\x2C "unixgram" and\n     *   "unixpacket".\n     *\n     * Examples:\n     *\n     *     listen({ port: 80 })\n     *     listen({ hostname: "192.0.2.1"\x2C port: 80 })\n     *     listen({ hostname: "[2001:db8::1]"\x2C port: 80 });\n     *     listen({ hostname: "golang.org"\x2C port: 80\x2C transport: "tcp" })\n     */\n    function listen(options) {\n        const hostname = options.hostname || "0.0.0.0";\n        const transport = options.transport || "tcp";\n        const res = dispatch_json_ts_21.sendSync(dispatch.OP_LISTEN\x2C {\n            hostname\x2C\n            port: options.port\x2C\n            transport\n        });\n        return new ListenerImpl(res.rid\x2C transport\x2C res.localAddr);\n    }\n    exports.listen = listen;\n    /** Dial connects to the address on the named transport.\n     *\n     * @param options\n     * @param options.port The port to connect to. (Required.)\n     * @param options.hostname A literal IP address or host name that can be\n     *   resolved to an IP address. If not specified\x2C defaults to 127.0.0.1\n     * @param options.transport Defaults to "tcp". Later we plan to add "tcp4"\x2C\n     *   "tcp6"\x2C "udp"\x2C "udp4"\x2C "udp6"\x2C "ip"\x2C "ip4"\x2C "ip6"\x2C "unix"\x2C "unixgram" and\n     *   "unixpacket".\n     *\n     * Examples:\n     *\n     *     dial({ port: 80 })\n     *     dial({ hostname: "192.0.2.1"\x2C port: 80 })\n     *     dial({ hostname: "[2001:db8::1]"\x2C port: 80 });\n     *     dial({ hostname: "golang.org"\x2C port: 80\x2C transport: "tcp" })\n     */\n    async function dial(options) {\n        const res = await dispatch_json_ts_21.sendAsync(dispatch.OP_DIAL\x2C {\n            hostname: options.hostname || "127.0.0.1"\x2C\n            port: options.port\x2C\n            transport: options.transport || "tcp"\n        });\n        return new ConnImpl(res.rid\x2C res.remoteAddr\x2C res.localAddr);\n    }\n    exports.dial = dial;\n    /** **RESERVED** */\n    async function connect(_transport\x2C _address) {\n        return util_ts_10.notImplemented();\n    }\n    exports.connect = connect;\n});\ndefine("$deno$/tls.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/net.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_22\x2C dispatch\x2C net_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const dialTLSDefaults = { hostname: "127.0.0.1"\x2C transport: "tcp" };\n    /**\n     * dialTLS establishes a secure connection over TLS (transport layer security).\n     */\n    async function dialTLS(options) {\n        options = Object.assign(dialTLSDefaults\x2C options);\n        const res = await dispatch_json_ts_22.sendAsync(dispatch.OP_DIAL_TLS\x2C options);\n        return new net_ts_1.ConnImpl(res.rid\x2C res.remoteAddr\x2C res.localAddr);\n    }\n    exports.dialTLS = dialTLS;\n});\ndefine("$deno$/metrics.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_23) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Receive metrics from the privileged side of Deno.\n     *\n     *      > console.table(Deno.metrics())\n     *      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     *      \u2502     (index)      \u2502 Values \u2502\n     *      \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n     *      \u2502  opsDispatched   \u2502   9    \u2502\n     *      \u2502   opsCompleted   \u2502   9    \u2502\n     *      \u2502 bytesSentControl \u2502  504   \u2502\n     *      \u2502  bytesSentData   \u2502   0    \u2502\n     *      \u2502  bytesReceived   \u2502  856   \u2502\n     *      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     */\n    function metrics() {\n        return dispatch_json_ts_23.sendSync(dispatch.OP_METRICS);\n    }\n    exports.metrics = metrics;\n});\ndefine("$deno$/resources.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_24) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Returns a map of open _file like_ resource ids along with their string\n     * representation.\n     */\n    function resources() {\n        const res = dispatch_json_ts_24.sendSync(dispatch.OP_RESOURCES);\n        const resources = {};\n        for (const resourceTuple of res) {\n            resources[resourceTuple[0]] = resourceTuple[1];\n        }\n        return resources;\n    }\n    exports.resources = resources;\n});\ndefine("$deno$/process.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/files.ts"\x2C "$deno$/buffer.ts"\x2C "$deno$/util.ts"\x2C "$deno$/build.ts"]\x2C function (require\x2C exports\x2C dispatch_json_ts_25\x2C dispatch\x2C files_ts_5\x2C buffer_ts_3\x2C util_ts_11\x2C build_ts_3) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    async function runStatus(rid) {\n        const res = (await dispatch_json_ts_25.sendAsync(dispatch.OP_RUN_STATUS\x2C {\n            rid\n        }));\n        if (res.gotSignal) {\n            const signal = res.exitSignal;\n            return { signal\x2C success: false };\n        }\n        else {\n            const code = res.exitCode;\n            return { code\x2C success: code === 0 };\n        }\n    }\n    /** Send a signal to process under given PID. Unix only at this moment.\n     * If pid is negative\x2C the signal will be sent to the process group identified\n     * by -pid.\n     * Requires the `--allow-run` flag.\n     */\n    function kill(pid\x2C signo) {\n        dispatch_json_ts_25.sendSync(dispatch.OP_KILL\x2C { pid\x2C signo });\n    }\n    exports.kill = kill;\n    class Process {\n        // @internal\n        constructor(res) {\n            this.rid = res.rid;\n            this.pid = res.pid;\n            if (res.stdinRid && res.stdinRid > 0) {\n                this.stdin = new files_ts_5.File(res.stdinRid);\n            }\n            if (res.stdoutRid && res.stdoutRid > 0) {\n                this.stdout = new files_ts_5.File(res.stdoutRid);\n            }\n            if (res.stderrRid && res.stderrRid > 0) {\n                this.stderr = new files_ts_5.File(res.stderrRid);\n            }\n        }\n        async status() {\n            return await runStatus(this.rid);\n        }\n        /** Buffer the stdout and return it as Uint8Array after EOF.\n         * You must set stdout to "piped" when creating the process.\n         * This calls close() on stdout after its done.\n         */\n        async output() {\n            if (!this.stdout) {\n                throw new Error("Process.output: stdout is undefined");\n            }\n            try {\n                return await buffer_ts_3.readAll(this.stdout);\n            }\n            finally {\n                this.stdout.close();\n            }\n        }\n        /** Buffer the stderr and return it as Uint8Array after EOF.\n         * You must set stderr to "piped" when creating the process.\n         * This calls close() on stderr after its done.\n         */\n        async stderrOutput() {\n            if (!this.stderr) {\n                throw new Error("Process.stderrOutput: stderr is undefined");\n            }\n            try {\n                return await buffer_ts_3.readAll(this.stderr);\n            }\n            finally {\n                this.stderr.close();\n            }\n        }\n        close() {\n            files_ts_5.close(this.rid);\n        }\n        kill(signo) {\n            kill(this.pid\x2C signo);\n        }\n    }\n    exports.Process = Process;\n    // TODO: this method is only used to validate proper option\x2C probably can be renamed\n    function stdioMap(s) {\n        switch (s) {\n            case "inherit":\n            case "piped":\n            case "null":\n                return s;\n            default:\n                return util_ts_11.unreachable();\n        }\n    }\n    function isRid(arg) {\n        return !isNaN(arg);\n    }\n    /**\n     * Spawns new subprocess.\n     *\n     * Subprocess uses same working directory as parent process unless `opt.cwd`\n     * is specified.\n     *\n     * Environmental variables for subprocess can be specified using `opt.env`\n     * mapping.\n     *\n     * By default subprocess inherits stdio of parent process. To change that\n     * `opt.stdout`\x2C `opt.stderr` and `opt.stdin` can be specified independently -\n     * they can be set to either `ProcessStdio` or `rid` of open file.\n     */\n    function run(opt) {\n        util_ts_11.assert(opt.args.length > 0);\n        let env = [];\n        if (opt.env) {\n            env = Array.from(Object.entries(opt.env));\n        }\n        let stdin = stdioMap("inherit");\n        let stdout = stdioMap("inherit");\n        let stderr = stdioMap("inherit");\n        let stdinRid = 0;\n        let stdoutRid = 0;\n        let stderrRid = 0;\n        if (opt.stdin) {\n            if (isRid(opt.stdin)) {\n                stdinRid = opt.stdin;\n            }\n            else {\n                stdin = stdioMap(opt.stdin);\n            }\n        }\n        if (opt.stdout) {\n            if (isRid(opt.stdout)) {\n                stdoutRid = opt.stdout;\n            }\n            else {\n                stdout = stdioMap(opt.stdout);\n            }\n        }\n        if (opt.stderr) {\n            if (isRid(opt.stderr)) {\n                stderrRid = opt.stderr;\n            }\n            else {\n                stderr = stdioMap(opt.stderr);\n            }\n        }\n        const req = {\n            args: opt.args.map(String)\x2C\n            cwd: opt.cwd\x2C\n            env\x2C\n            stdin\x2C\n            stdout\x2C\n            stderr\x2C\n            stdinRid\x2C\n            stdoutRid\x2C\n            stderrRid\n        };\n        const res = dispatch_json_ts_25.sendSync(dispatch.OP_RUN\x2C req);\n        return new Process(res);\n    }\n    exports.run = run;\n    // From `kill -l`\n    var LinuxSignal;\n    (function (LinuxSignal) {\n        LinuxSignal[LinuxSignal["SIGHUP"] = 1] = "SIGHUP";\n        LinuxSignal[LinuxSignal["SIGINT"] = 2] = "SIGINT";\n        LinuxSignal[LinuxSignal["SIGQUIT"] = 3] = "SIGQUIT";\n        LinuxSignal[LinuxSignal["SIGILL"] = 4] = "SIGILL";\n        LinuxSignal[LinuxSignal["SIGTRAP"] = 5] = "SIGTRAP";\n        LinuxSignal[LinuxSignal["SIGABRT"] = 6] = "SIGABRT";\n        LinuxSignal[LinuxSignal["SIGBUS"] = 7] = "SIGBUS";\n        LinuxSignal[LinuxSignal["SIGFPE"] = 8] = "SIGFPE";\n        LinuxSignal[LinuxSignal["SIGKILL"] = 9] = "SIGKILL";\n        LinuxSignal[LinuxSignal["SIGUSR1"] = 10] = "SIGUSR1";\n        LinuxSignal[LinuxSignal["SIGSEGV"] = 11] = "SIGSEGV";\n        LinuxSignal[LinuxSignal["SIGUSR2"] = 12] = "SIGUSR2";\n        LinuxSignal[LinuxSignal["SIGPIPE"] = 13] = "SIGPIPE";\n        LinuxSignal[LinuxSignal["SIGALRM"] = 14] = "SIGALRM";\n        LinuxSignal[LinuxSignal["SIGTERM"] = 15] = "SIGTERM";\n        LinuxSignal[LinuxSignal["SIGSTKFLT"] = 16] = "SIGSTKFLT";\n        LinuxSignal[LinuxSignal["SIGCHLD"] = 17] = "SIGCHLD";\n        LinuxSignal[LinuxSignal["SIGCONT"] = 18] = "SIGCONT";\n        LinuxSignal[LinuxSignal["SIGSTOP"] = 19] = "SIGSTOP";\n        LinuxSignal[LinuxSignal["SIGTSTP"] = 20] = "SIGTSTP";\n        LinuxSignal[LinuxSignal["SIGTTIN"] = 21] = "SIGTTIN";\n        LinuxSignal[LinuxSignal["SIGTTOU"] = 22] = "SIGTTOU";\n        LinuxSignal[LinuxSignal["SIGURG"] = 23] = "SIGURG";\n        LinuxSignal[LinuxSignal["SIGXCPU"] = 24] = "SIGXCPU";\n        LinuxSignal[LinuxSignal["SIGXFSZ"] = 25] = "SIGXFSZ";\n        LinuxSignal[LinuxSignal["SIGVTALRM"] = 26] = "SIGVTALRM";\n        LinuxSignal[LinuxSignal["SIGPROF"] = 27] = "SIGPROF";\n        LinuxSignal[LinuxSignal["SIGWINCH"] = 28] = "SIGWINCH";\n        LinuxSignal[LinuxSignal["SIGIO"] = 29] = "SIGIO";\n        LinuxSignal[LinuxSignal["SIGPWR"] = 30] = "SIGPWR";\n        LinuxSignal[LinuxSignal["SIGSYS"] = 31] = "SIGSYS";\n    })(LinuxSignal || (LinuxSignal = {}));\n    // From `kill -l`\n    var MacOSSignal;\n    (function (MacOSSignal) {\n        MacOSSignal[MacOSSignal["SIGHUP"] = 1] = "SIGHUP";\n        MacOSSignal[MacOSSignal["SIGINT"] = 2] = "SIGINT";\n        MacOSSignal[MacOSSignal["SIGQUIT"] = 3] = "SIGQUIT";\n        MacOSSignal[MacOSSignal["SIGILL"] = 4] = "SIGILL";\n        MacOSSignal[MacOSSignal["SIGTRAP"] = 5] = "SIGTRAP";\n        MacOSSignal[MacOSSignal["SIGABRT"] = 6] = "SIGABRT";\n        MacOSSignal[MacOSSignal["SIGEMT"] = 7] = "SIGEMT";\n        MacOSSignal[MacOSSignal["SIGFPE"] = 8] = "SIGFPE";\n        MacOSSignal[MacOSSignal["SIGKILL"] = 9] = "SIGKILL";\n        MacOSSignal[MacOSSignal["SIGBUS"] = 10] = "SIGBUS";\n        MacOSSignal[MacOSSignal["SIGSEGV"] = 11] = "SIGSEGV";\n        MacOSSignal[MacOSSignal["SIGSYS"] = 12] = "SIGSYS";\n        MacOSSignal[MacOSSignal["SIGPIPE"] = 13] = "SIGPIPE";\n        MacOSSignal[MacOSSignal["SIGALRM"] = 14] = "SIGALRM";\n        MacOSSignal[MacOSSignal["SIGTERM"] = 15] = "SIGTERM";\n        MacOSSignal[MacOSSignal["SIGURG"] = 16] = "SIGURG";\n        MacOSSignal[MacOSSignal["SIGSTOP"] = 17] = "SIGSTOP";\n        MacOSSignal[MacOSSignal["SIGTSTP"] = 18] = "SIGTSTP";\n        MacOSSignal[MacOSSignal["SIGCONT"] = 19] = "SIGCONT";\n        MacOSSignal[MacOSSignal["SIGCHLD"] = 20] = "SIGCHLD";\n        MacOSSignal[MacOSSignal["SIGTTIN"] = 21] = "SIGTTIN";\n        MacOSSignal[MacOSSignal["SIGTTOU"] = 22] = "SIGTTOU";\n        MacOSSignal[MacOSSignal["SIGIO"] = 23] = "SIGIO";\n        MacOSSignal[MacOSSignal["SIGXCPU"] = 24] = "SIGXCPU";\n        MacOSSignal[MacOSSignal["SIGXFSZ"] = 25] = "SIGXFSZ";\n        MacOSSignal[MacOSSignal["SIGVTALRM"] = 26] = "SIGVTALRM";\n        MacOSSignal[MacOSSignal["SIGPROF"] = 27] = "SIGPROF";\n        MacOSSignal[MacOSSignal["SIGWINCH"] = 28] = "SIGWINCH";\n        MacOSSignal[MacOSSignal["SIGINFO"] = 29] = "SIGINFO";\n        MacOSSignal[MacOSSignal["SIGUSR1"] = 30] = "SIGUSR1";\n        MacOSSignal[MacOSSignal["SIGUSR2"] = 31] = "SIGUSR2";\n    })(MacOSSignal || (MacOSSignal = {}));\n    /** Signals numbers. This is platform dependent.\n     */\n    exports.Signal = {};\n    function setSignals() {\n        if (build_ts_3.build.os === "mac") {\n            Object.assign(exports.Signal\x2C MacOSSignal);\n        }\n        else {\n            Object.assign(exports.Signal\x2C LinuxSignal);\n        }\n    }\n    exports.setSignals = setSignals;\n});\ndefine("$deno$/version.ts"\x2C ["require"\x2C "exports"]\x2C function (require\x2C exports) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    exports.version = {\n        deno: ""\x2C\n        v8: ""\x2C\n        typescript: ""\n    };\n    /**\n     * Sets the deno\x2C v8\x2C and typescript versions and freezes the version object.\n     * @internal\n     */\n    function setVersions(denoVersion\x2C v8Version\x2C tsVersion) {\n        exports.version.deno = denoVersion;\n        exports.version.v8 = v8Version;\n        exports.version.typescript = tsVersion;\n        Object.freeze(exports.version);\n    }\n    exports.setVersions = setVersions;\n});\ndefine("$deno$/mixins/dom_iterable.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/window.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C window_ts_4\x2C util_ts_12) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    /** Mixes in a DOM iterable methods into a base class\x2C assumes that there is\n     * a private data iterable that is part of the base class\x2C located at\n     * `[dataSymbol]`.\n     * TODO Don't expose DomIterableMixin from "deno" namespace.\n     */\n    function DomIterableMixin(Base\x2C dataSymbol) {\n        // we have to cast `this` as `any` because there is no way to describe the\n        // Base class in a way where the Symbol `dataSymbol` is defined.  So the\n        // runtime code works\x2C but we do lose a little bit of type safety.\n        // Additionally\x2C we have to not use .keys() nor .values() since the internal\n        // slot differs in type - some have a Map\x2C which yields [K\x2C V] in\n        // Symbol.iterator\x2C and some have an Array\x2C which yields V\x2C in this case\n        // [K\x2C V] too as they are arrays of tuples.\n        const DomIterable = class extends Base {\n            *entries() {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const entry of this[dataSymbol]) {\n                    yield entry;\n                }\n            }\n            *keys() {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const [key] of this[dataSymbol]) {\n                    yield key;\n                }\n            }\n            *values() {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const [\x2C value] of this[dataSymbol]) {\n                    yield value;\n                }\n            }\n            forEach(callbackfn\x2C \n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            thisArg) {\n                util_ts_12.requiredArguments(`${this.constructor.name}.forEach`\x2C arguments.length\x2C 1);\n                callbackfn = callbackfn.bind(thisArg == null ? window_ts_4.window : Object(thisArg));\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const [key\x2C value] of this[dataSymbol]) {\n                    callbackfn(value\x2C key\x2C this);\n                }\n            }\n            *[Symbol.iterator]() {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const entry of this[dataSymbol]) {\n                    yield entry;\n                }\n            }\n        };\n        // we want the Base class name to be the name of the class.\n        Object.defineProperty(DomIterable\x2C "name"\x2C {\n            value: Base.name\x2C\n            configurable: true\n        });\n        return DomIterable;\n    }\n    exports.DomIterableMixin = DomIterableMixin;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\ndefine("$deno$/deno.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/os.ts"\x2C "$deno$/dir.ts"\x2C "$deno$/files.ts"\x2C "$deno$/io.ts"\x2C "$deno$/buffer.ts"\x2C "$deno$/mkdir.ts"\x2C "$deno$/make_temp_dir.ts"\x2C "$deno$/chmod.ts"\x2C "$deno$/chown.ts"\x2C "$deno$/utime.ts"\x2C "$deno$/remove.ts"\x2C "$deno$/rename.ts"\x2C "$deno$/read_file.ts"\x2C "$deno$/read_dir.ts"\x2C "$deno$/copy_file.ts"\x2C "$deno$/read_link.ts"\x2C "$deno$/stat.ts"\x2C "$deno$/link.ts"\x2C "$deno$/symlink.ts"\x2C "$deno$/write_file.ts"\x2C "$deno$/error_stack.ts"\x2C "$deno$/errors.ts"\x2C "$deno$/permissions.ts"\x2C "$deno$/truncate.ts"\x2C "$deno$/net.ts"\x2C "$deno$/tls.ts"\x2C "$deno$/metrics.ts"\x2C "$deno$/resources.ts"\x2C "$deno$/process.ts"\x2C "$deno$/console.ts"\x2C "$deno$/build.ts"\x2C "$deno$/version.ts"\x2C "$deno$/core.ts"\x2C "$deno$/error_stack.ts"\x2C "$deno$/console.ts"\x2C "$deno$/mixins/dom_iterable.ts"]\x2C function (require\x2C exports\x2C os_ts_1\x2C dir_ts_1\x2C files_ts_6\x2C io_ts_3\x2C buffer_ts_4\x2C mkdir_ts_1\x2C make_temp_dir_ts_1\x2C chmod_ts_2\x2C chown_ts_1\x2C utime_ts_1\x2C remove_ts_1\x2C rename_ts_1\x2C read_file_ts_1\x2C read_dir_ts_1\x2C copy_file_ts_1\x2C read_link_ts_1\x2C stat_ts_2\x2C link_ts_1\x2C symlink_ts_1\x2C write_file_ts_1\x2C error_stack_ts_1\x2C errors_ts_4\x2C permissions_ts_1\x2C truncate_ts_1\x2C net_ts_2\x2C tls_ts_1\x2C metrics_ts_1\x2C resources_ts_1\x2C process_ts_1\x2C console_ts_1\x2C build_ts_4\x2C version_ts_1\x2C core_ts_4\x2C error_stack_ts_2\x2C console_ts_2\x2C dom_iterable_ts_1) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    exports.env = os_ts_1.env;\n    exports.exit = os_ts_1.exit;\n    exports.isTTY = os_ts_1.isTTY;\n    exports.execPath = os_ts_1.execPath;\n    exports.homeDir = os_ts_1.homeDir;\n    exports.hostname = os_ts_1.hostname;\n    exports.chdir = dir_ts_1.chdir;\n    exports.cwd = dir_ts_1.cwd;\n    exports.File = files_ts_6.File;\n    exports.open = files_ts_6.open;\n    exports.openSync = files_ts_6.openSync;\n    exports.stdin = files_ts_6.stdin;\n    exports.stdout = files_ts_6.stdout;\n    exports.stderr = files_ts_6.stderr;\n    exports.read = files_ts_6.read;\n    exports.readSync = files_ts_6.readSync;\n    exports.write = files_ts_6.write;\n    exports.writeSync = files_ts_6.writeSync;\n    exports.seek = files_ts_6.seek;\n    exports.seekSync = files_ts_6.seekSync;\n    exports.close = files_ts_6.close;\n    exports.EOF = io_ts_3.EOF;\n    exports.copy = io_ts_3.copy;\n    exports.toAsyncIterator = io_ts_3.toAsyncIterator;\n    exports.SeekMode = io_ts_3.SeekMode;\n    exports.Buffer = buffer_ts_4.Buffer;\n    exports.readAll = buffer_ts_4.readAll;\n    exports.readAllSync = buffer_ts_4.readAllSync;\n    exports.writeAll = buffer_ts_4.writeAll;\n    exports.writeAllSync = buffer_ts_4.writeAllSync;\n    exports.mkdirSync = mkdir_ts_1.mkdirSync;\n    exports.mkdir = mkdir_ts_1.mkdir;\n    exports.makeTempDirSync = make_temp_dir_ts_1.makeTempDirSync;\n    exports.makeTempDir = make_temp_dir_ts_1.makeTempDir;\n    exports.chmodSync = chmod_ts_2.chmodSync;\n    exports.chmod = chmod_ts_2.chmod;\n    exports.chownSync = chown_ts_1.chownSync;\n    exports.chown = chown_ts_1.chown;\n    exports.utimeSync = utime_ts_1.utimeSync;\n    exports.utime = utime_ts_1.utime;\n    exports.removeSync = remove_ts_1.removeSync;\n    exports.remove = remove_ts_1.remove;\n    exports.renameSync = rename_ts_1.renameSync;\n    exports.rename = rename_ts_1.rename;\n    exports.readFileSync = read_file_ts_1.readFileSync;\n    exports.readFile = read_file_ts_1.readFile;\n    exports.readDirSync = read_dir_ts_1.readDirSync;\n    exports.readDir = read_dir_ts_1.readDir;\n    exports.copyFileSync = copy_file_ts_1.copyFileSync;\n    exports.copyFile = copy_file_ts_1.copyFile;\n    exports.readlinkSync = read_link_ts_1.readlinkSync;\n    exports.readlink = read_link_ts_1.readlink;\n    exports.statSync = stat_ts_2.statSync;\n    exports.lstatSync = stat_ts_2.lstatSync;\n    exports.stat = stat_ts_2.stat;\n    exports.lstat = stat_ts_2.lstat;\n    exports.linkSync = link_ts_1.linkSync;\n    exports.link = link_ts_1.link;\n    exports.symlinkSync = symlink_ts_1.symlinkSync;\n    exports.symlink = symlink_ts_1.symlink;\n    exports.writeFileSync = write_file_ts_1.writeFileSync;\n    exports.writeFile = write_file_ts_1.writeFile;\n    exports.applySourceMap = error_stack_ts_1.applySourceMap;\n    exports.ErrorKind = errors_ts_4.ErrorKind;\n    exports.DenoError = errors_ts_4.DenoError;\n    exports.permissions = permissions_ts_1.permissions;\n    exports.revokePermission = permissions_ts_1.revokePermission;\n    exports.truncateSync = truncate_ts_1.truncateSync;\n    exports.truncate = truncate_ts_1.truncate;\n    exports.connect = net_ts_2.connect;\n    exports.dial = net_ts_2.dial;\n    exports.listen = net_ts_2.listen;\n    exports.dialTLS = tls_ts_1.dialTLS;\n    exports.metrics = metrics_ts_1.metrics;\n    exports.resources = resources_ts_1.resources;\n    exports.kill = process_ts_1.kill;\n    exports.run = process_ts_1.run;\n    exports.Process = process_ts_1.Process;\n    exports.Signal = process_ts_1.Signal;\n    exports.inspect = console_ts_1.inspect;\n    exports.customInspect = console_ts_1.customInspect;\n    exports.build = build_ts_4.build;\n    exports.version = version_ts_1.version;\n    exports.args = [];\n    exports.core = core_ts_4.core;\n    exports.setPrepareStackTrace = error_stack_ts_2.setPrepareStackTrace;\n    exports.Console = console_ts_2.Console;\n    exports.stringifyArgs = console_ts_2.stringifyArgs;\n    exports.DomIterableMixin = dom_iterable_ts_1.DomIterableMixin;\n    // TODO(ry) This should not be exposed to Deno.\n    function _setGlobals(pid_\x2C noColor_) {\n        exports.pid = pid_;\n        exports.noColor = noColor_;\n    }\n    exports._setGlobals = _setGlobals;\n});\ndefine("$deno$/dom_file.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/blob.ts"]\x2C function (require\x2C exports\x2C blob) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    class DomFileImpl extends blob.DenoBlob {\n        constructor(fileBits\x2C fileName\x2C options) {\n            options = options || {};\n            super(fileBits\x2C options);\n            // 4.1.2.1 Replace any "/" character (U+002F SOLIDUS)\n            // with a ":" (U + 003A COLON)\n            this.name = String(fileName).replace(/\\u002F/g\x2C "\\u003A");\n            // 4.1.3.3 If lastModified is not provided\x2C set lastModified to the current\n            // date and time represented in number of milliseconds since the Unix Epoch.\n            this.lastModified = options.lastModified || Date.now();\n        }\n    }\n    exports.DomFileImpl = DomFileImpl;\n});\ndefine("$deno$/dom_util.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dom_types.ts"]\x2C function (require\x2C exports\x2C domTypes) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function isNode(nodeImpl) {\n        return Boolean(nodeImpl && "nodeType" in nodeImpl);\n    }\n    exports.isNode = isNode;\n    function isShadowRoot(nodeImpl) {\n        return Boolean(nodeImpl &&\n            nodeImpl[domTypes.eventTargetNodeType] ===\n                domTypes.NodeType.DOCUMENT_FRAGMENT_NODE &&\n            nodeImpl[domTypes.eventTargetHost] != null);\n    }\n    exports.isShadowRoot = isShadowRoot;\n    function isSlotable(nodeImpl) {\n        return Boolean(nodeImpl &&\n            (nodeImpl[domTypes.eventTargetNodeType] ===\n                domTypes.NodeType.ELEMENT_NODE ||\n                nodeImpl[domTypes.eventTargetNodeType] === domTypes.NodeType.TEXT_NODE));\n    }\n    exports.isSlotable = isSlotable;\n    // https://dom.spec.whatwg.org/#node-trees\n    // const domSymbolTree = Symbol("DOM Symbol Tree");\n    // https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\n    function isShadowInclusiveAncestor(ancestor\x2C node) {\n        while (isNode(node)) {\n            if (node === ancestor) {\n                return true;\n            }\n            if (isShadowRoot(node)) {\n                node = node && node[domTypes.eventTargetHost];\n            }\n            else {\n                node = null; // domSymbolTree.parent(node);\n            }\n        }\n        return false;\n    }\n    exports.isShadowInclusiveAncestor = isShadowInclusiveAncestor;\n    function getRoot(node) {\n        const root = node;\n        // for (const ancestor of domSymbolTree.ancestorsIterator(node)) {\n        //   root = ancestor;\n        // }\n        return root;\n    }\n    exports.getRoot = getRoot;\n    // https://dom.spec.whatwg.org/#retarget\n    function retarget(a\x2C b) {\n        while (true) {\n            if (!isNode(a)) {\n                return a;\n            }\n            const aRoot = getRoot(a);\n            if (aRoot) {\n                if (!isShadowRoot(aRoot) ||\n                    (isNode(b) && isShadowInclusiveAncestor(aRoot\x2C b))) {\n                    return a;\n                }\n                a = aRoot[domTypes.eventTargetHost];\n            }\n        }\n    }\n    exports.retarget = retarget;\n});\ndefine("$deno$/event_target.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dom_types.ts"\x2C "$deno$/errors.ts"\x2C "$deno$/util.ts"\x2C "$deno$/dom_util.ts"\x2C "$deno$/window.ts"]\x2C function (require\x2C exports\x2C domTypes\x2C errors_ts_5\x2C util_ts_13\x2C dom_util_ts_1\x2C window_ts_5) {\n    "use strict";\n    var _a\x2C _b\x2C _c\x2C _d\x2C _e\x2C _f;\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // https://dom.spec.whatwg.org/#get-the-parent\n    // Note: Nodes\x2C shadow roots\x2C and documents override this algorithm so we set it to null.\n    function getEventTargetParent(_eventTarget\x2C _event) {\n        return null;\n    }\n    exports.eventTargetAssignedSlot = Symbol();\n    exports.eventTargetHasActivationBehavior = Symbol();\n    class EventTarget {\n        constructor() {\n            this[_a] = null;\n            this[_b] = {};\n            this[_c] = "";\n            this[_d] = domTypes.NodeType.DOCUMENT_FRAGMENT_NODE;\n            this[_e] = false;\n            this[_f] = false;\n        }\n        addEventListener(type\x2C callback\x2C options) {\n            const this_ = this || window_ts_5.window;\n            util_ts_13.requiredArguments("EventTarget.addEventListener"\x2C arguments.length\x2C 2);\n            const normalizedOptions = eventTargetHelpers.normalizeAddEventHandlerOptions(options);\n            if (callback === null) {\n                return;\n            }\n            const listeners = this_[domTypes.eventTargetListeners];\n            if (!util_ts_13.hasOwnProperty(listeners\x2C type)) {\n                listeners[type] = [];\n            }\n            for (let i = 0; i < listeners[type].length; ++i) {\n                const listener = listeners[type][i];\n                if (((typeof listener.options === "boolean" &&\n                    listener.options === normalizedOptions.capture) ||\n                    (typeof listener.options === "object" &&\n                        listener.options.capture === normalizedOptions.capture)) &&\n                    listener.callback === callback) {\n                    return;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const eventTarget = this;\n            listeners[type].push({\n                callback\x2C\n                options: normalizedOptions\x2C\n                handleEvent(event) {\n                    this.callback.call(eventTarget\x2C event);\n                }\n            });\n        }\n        removeEventListener(type\x2C callback\x2C options) {\n            const this_ = this || window_ts_5.window;\n            util_ts_13.requiredArguments("EventTarget.removeEventListener"\x2C arguments.length\x2C 2);\n            const listeners = this_[domTypes.eventTargetListeners];\n            if (util_ts_13.hasOwnProperty(listeners\x2C type) && callback !== null) {\n                listeners[type] = listeners[type].filter((listener) => listener.callback !== callback);\n            }\n            const normalizedOptions = eventTargetHelpers.normalizeEventHandlerOptions(options);\n            if (callback === null) {\n                // Optimization\x2C not in the spec.\n                return;\n            }\n            if (!listeners[type]) {\n                return;\n            }\n            for (let i = 0; i < listeners[type].length; ++i) {\n                const listener = listeners[type][i];\n                if (((typeof listener.options === "boolean" &&\n                    listener.options === normalizedOptions.capture) ||\n                    (typeof listener.options === "object" &&\n                        listener.options.capture === normalizedOptions.capture)) &&\n                    listener.callback === callback) {\n                    listeners[type].splice(i\x2C 1);\n                    break;\n                }\n            }\n        }\n        dispatchEvent(event) {\n            const this_ = this || window_ts_5.window;\n            util_ts_13.requiredArguments("EventTarget.dispatchEvent"\x2C arguments.length\x2C 1);\n            const listeners = this_[domTypes.eventTargetListeners];\n            if (!util_ts_13.hasOwnProperty(listeners\x2C event.type)) {\n                return true;\n            }\n            if (event.dispatched || !event.initialized) {\n                throw new errors_ts_5.DenoError(errors_ts_5.ErrorKind.InvalidData\x2C "Tried to dispatch an uninitialized event");\n            }\n            if (event.eventPhase !== domTypes.EventPhase.NONE) {\n                throw new errors_ts_5.DenoError(errors_ts_5.ErrorKind.InvalidData\x2C "Tried to dispatch a dispatching event");\n            }\n            return eventTargetHelpers.dispatch(this_\x2C event);\n        }\n        get [(_a = domTypes.eventTargetHost\x2C _b = domTypes.eventTargetListeners\x2C _c = domTypes.eventTargetMode\x2C _d = domTypes.eventTargetNodeType\x2C _e = exports.eventTargetAssignedSlot\x2C _f = exports.eventTargetHasActivationBehavior\x2C Symbol.toStringTag)]() {\n            return "EventTarget";\n        }\n    }\n    exports.EventTarget = EventTarget;\n    const eventTargetHelpers = {\n        // https://dom.spec.whatwg.org/#concept-event-dispatch\n        dispatch(targetImpl\x2C eventImpl\x2C targetOverride) {\n            let clearTargets = false;\n            let activationTarget = null;\n            eventImpl.dispatched = true;\n            targetOverride = targetOverride || targetImpl;\n            let relatedTarget = dom_util_ts_1.retarget(eventImpl.relatedTarget\x2C targetImpl);\n            if (targetImpl !== relatedTarget ||\n                targetImpl === eventImpl.relatedTarget) {\n                const touchTargets = [];\n                eventTargetHelpers.appendToEventPath(eventImpl\x2C targetImpl\x2C targetOverride\x2C relatedTarget\x2C touchTargets\x2C false);\n                const isActivationEvent = eventImpl.type === "click";\n                if (isActivationEvent && targetImpl[exports.eventTargetHasActivationBehavior]) {\n                    activationTarget = targetImpl;\n                }\n                let slotInClosedTree = false;\n                let slotable = dom_util_ts_1.isSlotable(targetImpl) && targetImpl[exports.eventTargetAssignedSlot]\n                    ? targetImpl\n                    : null;\n                let parent = getEventTargetParent(targetImpl\x2C eventImpl);\n                // Populate event path\n                // https://dom.spec.whatwg.org/#event-path\n                while (parent !== null) {\n                    if (slotable !== null) {\n                        slotable = null;\n                        const parentRoot = dom_util_ts_1.getRoot(parent);\n                        if (dom_util_ts_1.isShadowRoot(parentRoot) &&\n                            parentRoot &&\n                            parentRoot[domTypes.eventTargetMode] === "closed") {\n                            slotInClosedTree = true;\n                        }\n                    }\n                    relatedTarget = dom_util_ts_1.retarget(eventImpl.relatedTarget\x2C parent);\n                    if (dom_util_ts_1.isNode(parent) &&\n                        dom_util_ts_1.isShadowInclusiveAncestor(dom_util_ts_1.getRoot(targetImpl)\x2C parent)) {\n                        eventTargetHelpers.appendToEventPath(eventImpl\x2C parent\x2C null\x2C relatedTarget\x2C touchTargets\x2C slotInClosedTree);\n                    }\n                    else if (parent === relatedTarget) {\n                        parent = null;\n                    }\n                    else {\n                        targetImpl = parent;\n                        if (isActivationEvent &&\n                            activationTarget === null &&\n                            targetImpl[exports.eventTargetHasActivationBehavior]) {\n                            activationTarget = targetImpl;\n                        }\n                        eventTargetHelpers.appendToEventPath(eventImpl\x2C parent\x2C targetImpl\x2C relatedTarget\x2C touchTargets\x2C slotInClosedTree);\n                    }\n                    if (parent !== null) {\n                        parent = getEventTargetParent(parent\x2C eventImpl);\n                    }\n                    slotInClosedTree = false;\n                }\n                let clearTargetsTupleIndex = -1;\n                for (let i = eventImpl.path.length - 1; i >= 0 && clearTargetsTupleIndex === -1; i--) {\n                    if (eventImpl.path[i].target !== null) {\n                        clearTargetsTupleIndex = i;\n                    }\n                }\n                const clearTargetsTuple = eventImpl.path[clearTargetsTupleIndex];\n                clearTargets =\n                    (dom_util_ts_1.isNode(clearTargetsTuple.target) &&\n                        dom_util_ts_1.isShadowRoot(dom_util_ts_1.getRoot(clearTargetsTuple.target))) ||\n                        (dom_util_ts_1.isNode(clearTargetsTuple.relatedTarget) &&\n                            dom_util_ts_1.isShadowRoot(dom_util_ts_1.getRoot(clearTargetsTuple.relatedTarget)));\n                eventImpl.eventPhase = domTypes.EventPhase.CAPTURING_PHASE;\n                for (let i = eventImpl.path.length - 1; i >= 0; --i) {\n                    const tuple = eventImpl.path[i];\n                    if (tuple.target === null) {\n                        eventTargetHelpers.invokeEventListeners(targetImpl\x2C tuple\x2C eventImpl);\n                    }\n                }\n                for (let i = 0; i < eventImpl.path.length; i++) {\n                    const tuple = eventImpl.path[i];\n                    if (tuple.target !== null) {\n                        eventImpl.eventPhase = domTypes.EventPhase.AT_TARGET;\n                    }\n                    else {\n                        eventImpl.eventPhase = domTypes.EventPhase.BUBBLING_PHASE;\n                    }\n                    if ((eventImpl.eventPhase === domTypes.EventPhase.BUBBLING_PHASE &&\n                        eventImpl.bubbles) ||\n                        eventImpl.eventPhase === domTypes.EventPhase.AT_TARGET) {\n                        eventTargetHelpers.invokeEventListeners(targetImpl\x2C tuple\x2C eventImpl);\n                    }\n                }\n            }\n            eventImpl.eventPhase = domTypes.EventPhase.NONE;\n            eventImpl.currentTarget = null;\n            eventImpl.path = [];\n            eventImpl.dispatched = false;\n            eventImpl.cancelBubble = false;\n            eventImpl.cancelBubbleImmediately = false;\n            if (clearTargets) {\n                eventImpl.target = null;\n                eventImpl.relatedTarget = null;\n            }\n            // TODO: invoke activation targets if HTML nodes will be implemented\n            // if (activationTarget !== null) {\n            //   if (!eventImpl.defaultPrevented) {\n            //     activationTarget._activationBehavior();\n            //   }\n            // }\n            return !eventImpl.defaultPrevented;\n        }\x2C\n        // https://dom.spec.whatwg.org/#concept-event-listener-invoke\n        invokeEventListeners(targetImpl\x2C tuple\x2C eventImpl) {\n            const tupleIndex = eventImpl.path.indexOf(tuple);\n            for (let i = tupleIndex; i >= 0; i--) {\n                const t = eventImpl.path[i];\n                if (t.target) {\n                    eventImpl.target = t.target;\n                    break;\n                }\n            }\n            eventImpl.relatedTarget = tuple.relatedTarget;\n            if (eventImpl.cancelBubble) {\n                return;\n            }\n            eventImpl.currentTarget = tuple.item;\n            eventTargetHelpers.innerInvokeEventListeners(targetImpl\x2C eventImpl\x2C tuple.item[domTypes.eventTargetListeners]);\n        }\x2C\n        // https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\n        innerInvokeEventListeners(targetImpl\x2C eventImpl\x2C targetListeners) {\n            let found = false;\n            const { type } = eventImpl;\n            if (!targetListeners || !targetListeners[type]) {\n                return found;\n            }\n            // Copy event listeners before iterating since the list can be modified during the iteration.\n            const handlers = targetListeners[type].slice();\n            for (let i = 0; i < handlers.length; i++) {\n                const listener = handlers[i];\n                let capture\x2C once\x2C passive;\n                if (typeof listener.options === "boolean") {\n                    capture = listener.options;\n                    once = false;\n                    passive = false;\n                }\n                else {\n                    capture = listener.options.capture;\n                    once = listener.options.once;\n                    passive = listener.options.passive;\n                }\n                // Check if the event listener has been removed since the listeners has been cloned.\n                if (!targetListeners[type].includes(listener)) {\n                    continue;\n                }\n                found = true;\n                if ((eventImpl.eventPhase === domTypes.EventPhase.CAPTURING_PHASE &&\n                    !capture) ||\n                    (eventImpl.eventPhase === domTypes.EventPhase.BUBBLING_PHASE && capture)) {\n                    continue;\n                }\n                if (once) {\n                    targetListeners[type].splice(targetListeners[type].indexOf(listener)\x2C 1);\n                }\n                if (passive) {\n                    eventImpl.inPassiveListener = true;\n                }\n                try {\n                    if (listener.callback) {\n                        listener.handleEvent(eventImpl);\n                    }\n                }\n                catch (error) {\n                    throw new errors_ts_5.DenoError(errors_ts_5.ErrorKind.Interrupted\x2C error.message);\n                }\n                eventImpl.inPassiveListener = false;\n                if (eventImpl.cancelBubbleImmediately) {\n                    return found;\n                }\n            }\n            return found;\n        }\x2C\n        normalizeAddEventHandlerOptions(options) {\n            if (typeof options === "boolean" || typeof options === "undefined") {\n                const returnValue = {\n                    capture: Boolean(options)\x2C\n                    once: false\x2C\n                    passive: false\n                };\n                return returnValue;\n            }\n            else {\n                return options;\n            }\n        }\x2C\n        normalizeEventHandlerOptions(options) {\n            if (typeof options === "boolean" || typeof options === "undefined") {\n                const returnValue = {\n                    capture: Boolean(options)\n                };\n                return returnValue;\n            }\n            else {\n                return options;\n            }\n        }\x2C\n        // https://dom.spec.whatwg.org/#concept-event-path-append\n        appendToEventPath(eventImpl\x2C target\x2C targetOverride\x2C relatedTarget\x2C touchTargets\x2C slotInClosedTree) {\n            const itemInShadowTree = dom_util_ts_1.isNode(target) && dom_util_ts_1.isShadowRoot(dom_util_ts_1.getRoot(target));\n            const rootOfClosedTree = dom_util_ts_1.isShadowRoot(target) && target[domTypes.eventTargetMode] === "closed";\n            eventImpl.path.push({\n                item: target\x2C\n                itemInShadowTree\x2C\n                target: targetOverride\x2C\n                relatedTarget\x2C\n                touchTargetList: touchTargets\x2C\n                rootOfClosedTree\x2C\n                slotInClosedTree\n            });\n        }\n    };\n    /** Built-in objects providing `get` methods for our\n     * interceptable JavaScript operations.\n     */\n    Reflect.defineProperty(EventTarget.prototype\x2C "addEventListener"\x2C {\n        enumerable: true\n    });\n    Reflect.defineProperty(EventTarget.prototype\x2C "removeEventListener"\x2C {\n        enumerable: true\n    });\n    Reflect.defineProperty(EventTarget.prototype\x2C "dispatchEvent"\x2C {\n        enumerable: true\n    });\n});\ndefine("$deno$/form_data.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/blob.ts"\x2C "$deno$/dom_file.ts"\x2C "$deno$/mixins/dom_iterable.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C blob\x2C domFile\x2C dom_iterable_ts_2\x2C util_ts_14) {\n    "use strict";\n    var _a;\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const dataSymbol = Symbol("data");\n    class FormDataBase {\n        constructor() {\n            this[_a] = [];\n        }\n        append(name\x2C value\x2C filename) {\n            util_ts_14.requiredArguments("FormData.append"\x2C arguments.length\x2C 2);\n            name = String(name);\n            if (value instanceof blob.DenoBlob) {\n                const dfile = new domFile.DomFileImpl([value]\x2C filename || name);\n                this[dataSymbol].push([name\x2C dfile]);\n            }\n            else {\n                this[dataSymbol].push([name\x2C String(value)]);\n            }\n        }\n        /** Deletes a key/value pair from a `FormData` object.\n         *\n         *       formData.delete('name');\n         */\n        delete(name) {\n            util_ts_14.requiredArguments("FormData.delete"\x2C arguments.length\x2C 1);\n            name = String(name);\n            let i = 0;\n            while (i < this[dataSymbol].length) {\n                if (this[dataSymbol][i][0] === name) {\n                    this[dataSymbol].splice(i\x2C 1);\n                }\n                else {\n                    i++;\n                }\n            }\n        }\n        /** Returns an array of all the values associated with a given key\n         * from within a `FormData`.\n         *\n         *       formData.getAll('name');\n         */\n        getAll(name) {\n            util_ts_14.requiredArguments("FormData.getAll"\x2C arguments.length\x2C 1);\n            name = String(name);\n            const values = [];\n            for (const entry of this[dataSymbol]) {\n                if (entry[0] === name) {\n                    values.push(entry[1]);\n                }\n            }\n            return values;\n        }\n        /** Returns the first value associated with a given key from within a\n         * `FormData` object.\n         *\n         *       formData.get('name');\n         */\n        get(name) {\n            util_ts_14.requiredArguments("FormData.get"\x2C arguments.length\x2C 1);\n            name = String(name);\n            for (const entry of this[dataSymbol]) {\n                if (entry[0] === name) {\n                    return entry[1];\n                }\n            }\n            return null;\n        }\n        /** Returns a boolean stating whether a `FormData` object contains a\n         * certain key/value pair.\n         *\n         *       formData.has('name');\n         */\n        has(name) {\n            util_ts_14.requiredArguments("FormData.has"\x2C arguments.length\x2C 1);\n            name = String(name);\n            return this[dataSymbol].some((entry) => entry[0] === name);\n        }\n        set(name\x2C value\x2C filename) {\n            util_ts_14.requiredArguments("FormData.set"\x2C arguments.length\x2C 2);\n            name = String(name);\n            // If there are any entries in the context object\u2019s entry list whose name\n            // is name\x2C replace the first such entry with entry and remove the others\n            let found = false;\n            let i = 0;\n            while (i < this[dataSymbol].length) {\n                if (this[dataSymbol][i][0] === name) {\n                    if (!found) {\n                        if (value instanceof blob.DenoBlob) {\n                            const dfile = new domFile.DomFileImpl([value]\x2C filename || name);\n                            this[dataSymbol][i][1] = dfile;\n                        }\n                        else {\n                            this[dataSymbol][i][1] = String(value);\n                        }\n                        found = true;\n                    }\n                    else {\n                        this[dataSymbol].splice(i\x2C 1);\n                        continue;\n                    }\n                }\n                i++;\n            }\n            // Otherwise\x2C append entry to the context object\u2019s entry list.\n            if (!found) {\n                if (value instanceof blob.DenoBlob) {\n                    const dfile = new domFile.DomFileImpl([value]\x2C filename || name);\n                    this[dataSymbol].push([name\x2C dfile]);\n                }\n                else {\n                    this[dataSymbol].push([name\x2C String(value)]);\n                }\n            }\n        }\n        get [(_a = dataSymbol\x2C Symbol.toStringTag)]() {\n            return "FormData";\n        }\n    }\n    class FormData extends dom_iterable_ts_2.DomIterableMixin(FormDataBase\x2C dataSymbol) {\n    }\n    exports.FormData = FormData;\n});\ndefine("$deno$/headers.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/mixins/dom_iterable.ts"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C dom_iterable_ts_3\x2C util_ts_15) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // From node-fetch\n    // Copyright (c) 2016 David Frank. MIT License.\n    const invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\n    const invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function isHeaders(value) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return value instanceof Headers;\n    }\n    const headerMap = Symbol("header map");\n    // ref: https://fetch.spec.whatwg.org/#dom-headers\n    class HeadersBase {\n        constructor(init) {\n            if (init === null) {\n                throw new TypeError("Failed to construct 'Headers'; The provided value was not valid");\n            }\n            else if (isHeaders(init)) {\n                this[headerMap] = new Map(init);\n            }\n            else {\n                this[headerMap] = new Map();\n                if (Array.isArray(init)) {\n                    for (const tuple of init) {\n                        // If header does not contain exactly two items\x2C\n                        // then throw a TypeError.\n                        // ref: https://fetch.spec.whatwg.org/#concept-headers-fill\n                        util_ts_15.requiredArguments("Headers.constructor tuple array argument"\x2C tuple.length\x2C 2);\n                        const [name\x2C value] = this._normalizeParams(tuple[0]\x2C tuple[1]);\n                        this._validateName(name);\n                        this._validateValue(value);\n                        const existingValue = this[headerMap].get(name);\n                        this[headerMap].set(name\x2C existingValue ? `${existingValue}\x2C ${value}` : value);\n                    }\n                }\n                else if (init) {\n                    const names = Object.keys(init);\n                    for (const rawName of names) {\n                        const rawValue = init[rawName];\n                        const [name\x2C value] = this._normalizeParams(rawName\x2C rawValue);\n                        this._validateName(name);\n                        this._validateValue(value);\n                        this[headerMap].set(name\x2C value);\n                    }\n                }\n            }\n        }\n        // TODO: headerGuard? Investigate if it is needed\n        // node-fetch did not implement this but it is in the spec\n        _normalizeParams(name\x2C value) {\n            name = String(name).toLowerCase();\n            value = String(value).trim();\n            return [name\x2C value];\n        }\n        // The following name/value validations are copied from\n        // https://github.com/bitinn/node-fetch/blob/master/src/headers.js\n        // Copyright (c) 2016 David Frank. MIT License.\n        _validateName(name) {\n            if (invalidTokenRegex.test(name) || name === "") {\n                throw new TypeError(`${name} is not a legal HTTP header name`);\n            }\n        }\n        _validateValue(value) {\n            if (invalidHeaderCharRegex.test(value)) {\n                throw new TypeError(`${value} is not a legal HTTP header value`);\n            }\n        }\n        // ref: https://fetch.spec.whatwg.org/#concept-headers-append\n        append(name\x2C value) {\n            util_ts_15.requiredArguments("Headers.append"\x2C arguments.length\x2C 2);\n            const [newname\x2C newvalue] = this._normalizeParams(name\x2C value);\n            this._validateName(newname);\n            this._validateValue(newvalue);\n            const v = this[headerMap].get(newname);\n            const str = v ? `${v}\x2C ${newvalue}` : newvalue;\n            this[headerMap].set(newname\x2C str);\n        }\n        delete(name) {\n            util_ts_15.requiredArguments("Headers.delete"\x2C arguments.length\x2C 1);\n            const [newname] = this._normalizeParams(name);\n            this._validateName(newname);\n            this[headerMap].delete(newname);\n        }\n        get(name) {\n            util_ts_15.requiredArguments("Headers.get"\x2C arguments.length\x2C 1);\n            const [newname] = this._normalizeParams(name);\n            this._validateName(newname);\n            const value = this[headerMap].get(newname);\n            return value || null;\n        }\n        has(name) {\n            util_ts_15.requiredArguments("Headers.has"\x2C arguments.length\x2C 1);\n            const [newname] = this._normalizeParams(name);\n            this._validateName(newname);\n            return this[headerMap].has(newname);\n        }\n        set(name\x2C value) {\n            util_ts_15.requiredArguments("Headers.set"\x2C arguments.length\x2C 2);\n            const [newname\x2C newvalue] = this._normalizeParams(name\x2C value);\n            this._validateName(newname);\n            this._validateValue(newvalue);\n            this[headerMap].set(newname\x2C newvalue);\n        }\n        get [Symbol.toStringTag]() {\n            return "Headers";\n        }\n    }\n    // @internal\n    class Headers extends dom_iterable_ts_3.DomIterableMixin(HeadersBase\x2C headerMap) {\n    }\n    exports.Headers = Headers;\n});\ndefine("$deno$/url.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/url_search_params.ts"\x2C "$deno$/get_random_values.ts"\x2C "$deno$/window.ts"]\x2C function (require\x2C exports\x2C urlSearchParams\x2C get_random_values_ts_1\x2C window_ts_6) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const patterns = {\n        protocol: "(?:([^:/?#]+):)"\x2C\n        authority: "(?://([^/?#]*))"\x2C\n        path: "([^?#]*)"\x2C\n        query: "(\\\\?[^#]*)"\x2C\n        hash: "(#.*)"\x2C\n        authentication: "(?:([^:]*)(?::([^@]*))?@)"\x2C\n        hostname: "([^:]+)"\x2C\n        port: "(?::(\\\\d+))"\n    };\n    const urlRegExp = new RegExp(`^${patterns.protocol}?${patterns.authority}?${patterns.path}${patterns.query}?${patterns.hash}?`);\n    const authorityRegExp = new RegExp(`^${patterns.authentication}?${patterns.hostname}${patterns.port}?$`);\n    const searchParamsMethods = [\n        "append"\x2C\n        "delete"\x2C\n        "set"\n    ];\n    function parse(url) {\n        const urlMatch = urlRegExp.exec(url);\n        if (urlMatch) {\n            const [\x2C \x2C authority] = urlMatch;\n            const authorityMatch = authority\n                ? authorityRegExp.exec(authority)\n                : [null\x2C null\x2C null\x2C null\x2C null];\n            if (authorityMatch) {\n                return {\n                    protocol: urlMatch[1] || ""\x2C\n                    username: authorityMatch[1] || ""\x2C\n                    password: authorityMatch[2] || ""\x2C\n                    hostname: authorityMatch[3] || ""\x2C\n                    port: authorityMatch[4] || ""\x2C\n                    path: urlMatch[3] || ""\x2C\n                    query: urlMatch[4] || ""\x2C\n                    hash: urlMatch[5] || ""\n                };\n            }\n        }\n        return undefined;\n    }\n    // Based on https://github.com/kelektiv/node-uuid\n    // TODO(kevinkassimo): Use deno_std version once possible.\n    function generateUUID() {\n        return "00000000-0000-4000-8000-000000000000".replace(/[0]/g\x2C () => \n        // random integer from 0 to 15 as a hex digit.\n        (get_random_values_ts_1.getRandomValues(new Uint8Array(1))[0] % 16).toString(16));\n    }\n    // Keep it outside of URL to avoid any attempts of access.\n    exports.blobURLMap = new Map();\n    function isAbsolutePath(path) {\n        return path.startsWith("/");\n    }\n    // Resolves `.`s and `..`s where possible.\n    // Preserves repeating and trailing `/`s by design.\n    function normalizePath(path) {\n        const isAbsolute = isAbsolutePath(path);\n        path = path.replace(/^\\//\x2C "");\n        const pathSegments = path.split("/");\n        const newPathSegments = [];\n        for (let i = 0; i < pathSegments.length; i++) {\n            const previous = newPathSegments[newPathSegments.length - 1];\n            if (pathSegments[i] == ".." &&\n                previous != ".." &&\n                (previous != undefined || isAbsolute)) {\n                newPathSegments.pop();\n            }\n            else if (pathSegments[i] != ".") {\n                newPathSegments.push(pathSegments[i]);\n            }\n        }\n        let newPath = newPathSegments.join("/");\n        if (!isAbsolute) {\n            if (newPathSegments.length == 0) {\n                newPath = ".";\n            }\n        }\n        else {\n            newPath = `/${newPath}`;\n        }\n        return newPath;\n    }\n    // Standard URL basing logic\x2C applied to paths.\n    function resolvePathFromBase(path\x2C basePath) {\n        const normalizedPath = normalizePath(path);\n        if (isAbsolutePath(normalizedPath)) {\n            return normalizedPath;\n        }\n        const normalizedBasePath = normalizePath(basePath);\n        if (!isAbsolutePath(normalizedBasePath)) {\n            throw new TypeError("Base path must be absolute.");\n        }\n        // Special case.\n        if (path == "") {\n            return normalizedBasePath;\n        }\n        // Remove everything after the last `/` in `normalizedBasePath`.\n        const prefix = normalizedBasePath.replace(/[^\\/]*$/\x2C "");\n        // If `normalizedPath` ends with `.` or `..`\x2C add a trailing space.\n        const suffix = normalizedPath.replace(/(?<=(^|\\/)(\\.|\\.\\.))$/\x2C "/");\n        return normalizePath(prefix + suffix);\n    }\n    class URL {\n        constructor(url\x2C base) {\n            let baseParts;\n            if (base) {\n                baseParts = typeof base === "string" ? parse(base) : base._parts;\n                if (!baseParts || baseParts.protocol == "") {\n                    throw new TypeError("Invalid base URL.");\n                }\n            }\n            const urlParts = parse(url);\n            if (!urlParts) {\n                throw new TypeError("Invalid URL.");\n            }\n            if (urlParts.protocol) {\n                this._parts = urlParts;\n            }\n            else if (baseParts) {\n                this._parts = {\n                    protocol: baseParts.protocol\x2C\n                    username: baseParts.username\x2C\n                    password: baseParts.password\x2C\n                    hostname: baseParts.hostname\x2C\n                    port: baseParts.port\x2C\n                    path: resolvePathFromBase(urlParts.path\x2C baseParts.path || "/")\x2C\n                    query: urlParts.query\x2C\n                    hash: urlParts.hash\n                };\n            }\n            else {\n                throw new TypeError("URL requires a base URL.");\n            }\n            this._updateSearchParams();\n        }\n        _updateSearchParams() {\n            const searchParams = new urlSearchParams.URLSearchParams(this.search);\n            for (const methodName of searchParamsMethods) {\n                /* eslint-disable @typescript-eslint/no-explicit-any */\n                const method = searchParams[methodName];\n                searchParams[methodName] = (...args) => {\n                    method.apply(searchParams\x2C args);\n                    this.search = searchParams.toString();\n                };\n                /* eslint-enable */\n            }\n            this._searchParams = searchParams;\n            // convert to `any` that has avoided the private limit\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._searchParams.url = this;\n        }\n        get hash() {\n            return this._parts.hash;\n        }\n        set hash(value) {\n            value = unescape(String(value));\n            if (!value) {\n                this._parts.hash = "";\n            }\n            else {\n                if (value.charAt(0) !== "#") {\n                    value = `#${value}`;\n                }\n                // hashes can contain % and # unescaped\n                this._parts.hash = escape(value)\n                    .replace(/%25/g\x2C "%")\n                    .replace(/%23/g\x2C "#");\n            }\n        }\n        get host() {\n            return `${this.hostname}${this.port ? `:${this.port}` : ""}`;\n        }\n        set host(value) {\n            value = String(value);\n            const url = new URL(`http://${value}`);\n            this._parts.hostname = url.hostname;\n            this._parts.port = url.port;\n        }\n        get hostname() {\n            return this._parts.hostname;\n        }\n        set hostname(value) {\n            value = String(value);\n            this._parts.hostname = encodeURIComponent(value);\n        }\n        get href() {\n            const authentication = this.username || this.password\n                ? `${this.username}${this.password ? ":" + this.password : ""}@`\n                : "";\n            return `${this.protocol}//${authentication}${this.host}${this.pathname}${this.search}${this.hash}`;\n        }\n        set href(value) {\n            value = String(value);\n            if (value !== this.href) {\n                const url = new URL(value);\n                this._parts = { ...url._parts };\n                this._updateSearchParams();\n            }\n        }\n        get origin() {\n            return `${this.protocol}//${this.host}`;\n        }\n        get password() {\n            return this._parts.password;\n        }\n        set password(value) {\n            value = String(value);\n            this._parts.password = encodeURIComponent(value);\n        }\n        get pathname() {\n            return this._parts.path ? this._parts.path : "/";\n        }\n        set pathname(value) {\n            value = unescape(String(value));\n            if (!value || value.charAt(0) !== "/") {\n                value = `/${value}`;\n            }\n            // paths can contain % unescaped\n            this._parts.path = escape(value).replace(/%25/g\x2C "%");\n        }\n        get port() {\n            return this._parts.port;\n        }\n        set port(value) {\n            const port = parseInt(String(value)\x2C 10);\n            this._parts.port = isNaN(port)\n                ? ""\n                : Math.max(0\x2C port % 2 ** 16).toString();\n        }\n        get protocol() {\n            return `${this._parts.protocol}:`;\n        }\n        set protocol(value) {\n            value = String(value);\n            if (value) {\n                if (value.charAt(value.length - 1) === ":") {\n                    value = value.slice(0\x2C -1);\n                }\n                this._parts.protocol = encodeURIComponent(value);\n            }\n        }\n        get search() {\n            if (this._parts.query === null || this._parts.query === "") {\n                return "";\n            }\n            return this._parts.query;\n        }\n        set search(value) {\n            value = String(value);\n            let query;\n            if (value === "") {\n                query = null;\n            }\n            else if (value.charAt(0) !== "?") {\n                query = `?${value}`;\n            }\n            else {\n                query = value;\n            }\n            this._parts.query = query;\n            this._updateSearchParams();\n        }\n        get username() {\n            return this._parts.username;\n        }\n        set username(value) {\n            value = String(value);\n            this._parts.username = encodeURIComponent(value);\n        }\n        get searchParams() {\n            return this._searchParams;\n        }\n        toString() {\n            return this.href;\n        }\n        toJSON() {\n            return this.href;\n        }\n        // TODO(kevinkassimo): implement MediaSource version in the future.\n        static createObjectURL(b) {\n            const origin = window_ts_6.window.location.origin || "http://deno-opaque-origin";\n            const key = `blob:${origin}/${generateUUID()}`;\n            exports.blobURLMap.set(key\x2C b);\n            return key;\n        }\n        static revokeObjectURL(url) {\n            let urlObject;\n            try {\n                urlObject = new URL(url);\n            }\n            catch {\n                throw new TypeError("Provided URL string is not valid");\n            }\n            if (urlObject.protocol !== "blob:") {\n                return;\n            }\n            // Origin match check seems irrelevant for now\x2C unless we implement\n            // persisten storage for per window.location.origin at some point.\n            exports.blobURLMap.delete(url);\n        }\n    }\n    exports.URL = URL;\n});\ndefine("$deno$/url_search_params.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"]\x2C function (require\x2C exports\x2C util_ts_16) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    class URLSearchParams {\n        constructor(init = "") {\n            this.params = [];\n            this.url = null;\n            if (typeof init === "string") {\n                this._handleStringInitialization(init);\n                return;\n            }\n            if (Array.isArray(init) || util_ts_16.isIterable(init)) {\n                this._handleArrayInitialization(init);\n                return;\n            }\n            if (Object(init) !== init) {\n                return;\n            }\n            if (init instanceof URLSearchParams) {\n                this.params = init.params;\n                return;\n            }\n            // Overload: record<USVString\x2C USVString>\n            for (const key of Object.keys(init)) {\n                this.append(key\x2C init[key]);\n            }\n        }\n        updateSteps() {\n            if (this.url === null) {\n                return;\n            }\n            let query = this.toString();\n            if (query === "") {\n                query = null;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.url._parts.query = query;\n        }\n        /** Appends a specified key/value pair as a new search parameter.\n         *\n         *       searchParams.append('name'\x2C 'first');\n         *       searchParams.append('name'\x2C 'second');\n         */\n        append(name\x2C value) {\n            util_ts_16.requiredArguments("URLSearchParams.append"\x2C arguments.length\x2C 2);\n            this.params.push([String(name)\x2C String(value)]);\n            this.updateSteps();\n        }\n        /** Deletes the given search parameter and its associated value\x2C\n         * from the list of all search parameters.\n         *\n         *       searchParams.delete('name');\n         */\n        delete(name) {\n            util_ts_16.requiredArguments("URLSearchParams.delete"\x2C arguments.length\x2C 1);\n            name = String(name);\n            let i = 0;\n            while (i < this.params.length) {\n                if (this.params[i][0] === name) {\n                    this.params.splice(i\x2C 1);\n                }\n                else {\n                    i++;\n                }\n            }\n            this.updateSteps();\n        }\n        /** Returns all the values associated with a given search parameter\n         * as an array.\n         *\n         *       searchParams.getAll('name');\n         */\n        getAll(name) {\n            util_ts_16.requiredArguments("URLSearchParams.getAll"\x2C arguments.length\x2C 1);\n            name = String(name);\n            const values = [];\n            for (const entry of this.params) {\n                if (entry[0] === name) {\n                    values.push(entry[1]);\n                }\n            }\n            return values;\n        }\n        /** Returns the first value associated to the given search parameter.\n         *\n         *       searchParams.get('name');\n         */\n        get(name) {\n            util_ts_16.requiredArguments("URLSearchParams.get"\x2C arguments.length\x2C 1);\n            name = String(name);\n            for (const entry of this.params) {\n                if (entry[0] === name) {\n                    return entry[1];\n                }\n            }\n            return null;\n        }\n        /** Returns a Boolean that indicates whether a parameter with the\n         * specified name exists.\n         *\n         *       searchParams.has('name');\n         */\n        has(name) {\n            util_ts_16.requiredArguments("URLSearchParams.has"\x2C arguments.length\x2C 1);\n            name = String(name);\n            return this.params.some((entry) => entry[0] === name);\n        }\n        /** Sets the value associated with a given search parameter to the\n         * given value. If there were several matching values\x2C this method\n         * deletes the others. If the search parameter doesn't exist\x2C this\n         * method creates it.\n         *\n         *       searchParams.set('name'\x2C 'value');\n         */\n        set(name\x2C value) {\n            util_ts_16.requiredArguments("URLSearchParams.set"\x2C arguments.length\x2C 2);\n            // If there are any name-value pairs whose name is name\x2C in list\x2C\n            // set the value of the first such name-value pair to value\n            // and remove the others.\n            name = String(name);\n            value = String(value);\n            let found = false;\n            let i = 0;\n            while (i < this.params.length) {\n                if (this.params[i][0] === name) {\n                    if (!found) {\n                        this.params[i][1] = value;\n                        found = true;\n                        i++;\n                    }\n                    else {\n                        this.params.splice(i\x2C 1);\n                    }\n                }\n                else {\n                    i++;\n                }\n            }\n            // Otherwise\x2C append a new name-value pair whose name is name\n            // and value is value\x2C to list.\n            if (!found) {\n                this.append(name\x2C value);\n            }\n            this.updateSteps();\n        }\n        /** Sort all key/value pairs contained in this object in place and\n         * return undefined. The sort order is according to Unicode code\n         * points of the keys.\n         *\n         *       searchParams.sort();\n         */\n        sort() {\n            this.params = this.params.sort((a\x2C b) => (a[0] === b[0] ? 0 : a[0] > b[0] ? 1 : -1));\n            this.updateSteps();\n        }\n        /** Calls a function for each element contained in this object in\n         * place and return undefined. Optionally accepts an object to use\n         * as this when executing callback as second argument.\n         *\n         *       searchParams.forEach((value\x2C key\x2C parent) => {\n         *         console.log(value\x2C key\x2C parent);\n         *       });\n         *\n         */\n        forEach(callbackfn\x2C \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        thisArg) {\n            util_ts_16.requiredArguments("URLSearchParams.forEach"\x2C arguments.length\x2C 1);\n            if (typeof thisArg !== "undefined") {\n                callbackfn = callbackfn.bind(thisArg);\n            }\n            for (const [key\x2C value] of this.entries()) {\n                callbackfn(value\x2C key\x2C this);\n            }\n        }\n        /** Returns an iterator allowing to go through all keys contained\n         * in this object.\n         *\n         *       for (const key of searchParams.keys()) {\n         *         console.log(key);\n         *       }\n         */\n        *keys() {\n            for (const entry of this.params) {\n                yield entry[0];\n            }\n        }\n        /** Returns an iterator allowing to go through all values contained\n         * in this object.\n         *\n         *       for (const value of searchParams.values()) {\n         *         console.log(value);\n         *       }\n         */\n        *values() {\n            for (const entry of this.params) {\n                yield entry[1];\n            }\n        }\n        /** Returns an iterator allowing to go through all key/value\n         * pairs contained in this object.\n         *\n         *       for (const [key\x2C value] of searchParams.entries()) {\n         *         console.log(key\x2C value);\n         *       }\n         */\n        *entries() {\n            yield* this.params;\n        }\n        /** Returns an iterator allowing to go through all key/value\n         * pairs contained in this object.\n         *\n         *       for (const [key\x2C value] of searchParams[Symbol.iterator]()) {\n         *         console.log(key\x2C value);\n         *       }\n         */\n        *[Symbol.iterator]() {\n            yield* this.params;\n        }\n        /** Returns a query string suitable for use in a URL.\n         *\n         *        searchParams.toString();\n         */\n        toString() {\n            return this.params\n                .map((tuple) => `${encodeURIComponent(tuple[0])}=${encodeURIComponent(tuple[1])}`)\n                .join("&");\n        }\n        _handleStringInitialization(init) {\n            // Overload: USVString\n            // If init is a string and starts with U+003F (?)\x2C\n            // remove the first code point from init.\n            if (init.charCodeAt(0) === 0x003f) {\n                init = init.slice(1);\n            }\n            for (const pair of init.split("&")) {\n                // Empty params are ignored\n                if (pair.length === 0) {\n                    continue;\n                }\n                const position = pair.indexOf("=");\n                const name = pair.slice(0\x2C position === -1 ? pair.length : position);\n                const value = pair.slice(name.length + 1);\n                this.append(decodeURIComponent(name)\x2C decodeURIComponent(value));\n            }\n        }\n        _handleArrayInitialization(init) {\n            // Overload: sequence<sequence<USVString>>\n            for (const tuple of init) {\n                // If pair does not contain exactly two items\x2C then throw a TypeError.\n                if (tuple.length !== 2) {\n                    throw new TypeError("URLSearchParams.constructor tuple array argument must only contain pair elements");\n                }\n                this.append(tuple[0]\x2C tuple[1]);\n            }\n        }\n    }\n    exports.URLSearchParams = URLSearchParams;\n});\ndefine("$deno$/fetch.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/blob.ts"\x2C "$deno$/headers.ts"\x2C "$deno$/io.ts"\x2C "$deno$/files.ts"\x2C "$deno$/buffer.ts"\x2C "$deno$/form_data.ts"\x2C "$deno$/url_search_params.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C util_ts_17\x2C text_encoding_ts_6\x2C blob_ts_1\x2C headers_ts_1\x2C io\x2C files_ts_7\x2C buffer_ts_5\x2C form_data_ts_1\x2C url_search_params_ts_1\x2C dispatch\x2C dispatch_json_ts_26) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function getHeaderValueParams(value) {\n        const params = new Map();\n        // Forced to do so for some Map constructor param mismatch\n        value\n            .split(";")\n            .slice(1)\n            .map((s) => s.trim().split("="))\n            .filter((arr) => arr.length > 1)\n            .map(([k\x2C v]) => [k\x2C v.replace(/^"([^"]*)"$/\x2C "$1")])\n            .forEach(([k\x2C v]) => params.set(k\x2C v));\n        return params;\n    }\n    function hasHeaderValueOf(s\x2C value) {\n        return new RegExp(`^${value}[\\t\\s]*;?`).test(s);\n    }\n    class Body {\n        constructor(rid\x2C contentType) {\n            this.rid = rid;\n            this.contentType = contentType;\n            this._bodyUsed = false;\n            this._bodyPromise = null;\n            this._data = null;\n            this.locked = false; // TODO\n            this.body = this;\n        }\n        async _bodyBuffer() {\n            util_ts_17.assert(this._bodyPromise == null);\n            const buf = new buffer_ts_5.Buffer();\n            try {\n                const nread = await buf.readFrom(this);\n                const ui8 = buf.bytes();\n                util_ts_17.assert(ui8.byteLength === nread);\n                this._data = ui8.buffer.slice(ui8.byteOffset\x2C ui8.byteOffset + nread);\n                util_ts_17.assert(this._data.byteLength === nread);\n            }\n            finally {\n                this.close();\n            }\n            return this._data;\n        }\n        async arrayBuffer() {\n            // If we've already bufferred the response\x2C just return it.\n            if (this._data != null) {\n                return this._data;\n            }\n            // If there is no _bodyPromise yet\x2C start it.\n            if (this._bodyPromise == null) {\n                this._bodyPromise = this._bodyBuffer();\n            }\n            return this._bodyPromise;\n        }\n        async blob() {\n            const arrayBuffer = await this.arrayBuffer();\n            return new blob_ts_1.DenoBlob([arrayBuffer]\x2C {\n                type: this.contentType\n            });\n        }\n        // ref: https://fetch.spec.whatwg.org/#body-mixin\n        async formData() {\n            const formData = new form_data_ts_1.FormData();\n            const enc = new text_encoding_ts_6.TextEncoder();\n            if (hasHeaderValueOf(this.contentType\x2C "multipart/form-data")) {\n                const params = getHeaderValueParams(this.contentType);\n                if (!params.has("boundary")) {\n                    // TypeError is required by spec\n                    throw new TypeError("multipart/form-data must provide a boundary");\n                }\n                // ref: https://tools.ietf.org/html/rfc2046#section-5.1\n                const boundary = params.get("boundary");\n                const dashBoundary = `--${boundary}`;\n                const delimiter = `\\r\\n${dashBoundary}`;\n                const closeDelimiter = `${delimiter}--`;\n                const body = await this.text();\n                let bodyParts;\n                const bodyEpilogueSplit = body.split(closeDelimiter);\n                if (bodyEpilogueSplit.length < 2) {\n                    bodyParts = [];\n                }\n                else {\n                    // discard epilogue\n                    const bodyEpilogueTrimmed = bodyEpilogueSplit[0];\n                    // first boundary treated special due to optional prefixed \\r\\n\n                    const firstBoundaryIndex = bodyEpilogueTrimmed.indexOf(dashBoundary);\n                    if (firstBoundaryIndex < 0) {\n                        throw new TypeError("Invalid boundary");\n                    }\n                    const bodyPreambleTrimmed = bodyEpilogueTrimmed\n                        .slice(firstBoundaryIndex + dashBoundary.length)\n                        .replace(/^[\\s\\r\\n\\t]+/\x2C ""); // remove transport-padding CRLF\n                    // trimStart might not be available\n                    // Be careful! body-part allows trailing \\r\\n!\n                    // (as long as it is not part of `delimiter`)\n                    bodyParts = bodyPreambleTrimmed\n                        .split(delimiter)\n                        .map((s) => s.replace(/^[\\s\\r\\n\\t]+/\x2C ""));\n                    // TODO: LWSP definition is actually trickier\x2C\n                    // but should be fine in our case since without headers\n                    // we should just discard the part\n                }\n                for (const bodyPart of bodyParts) {\n                    const headers = new headers_ts_1.Headers();\n                    const headerOctetSeperatorIndex = bodyPart.indexOf("\\r\\n\\r\\n");\n                    if (headerOctetSeperatorIndex < 0) {\n                        continue; // Skip unknown part\n                    }\n                    const headerText = bodyPart.slice(0\x2C headerOctetSeperatorIndex);\n                    const octets = bodyPart.slice(headerOctetSeperatorIndex + 4);\n                    // TODO: use textproto.readMIMEHeader from deno_std\n                    const rawHeaders = headerText.split("\\r\\n");\n                    for (const rawHeader of rawHeaders) {\n                        const sepIndex = rawHeader.indexOf(":");\n                        if (sepIndex < 0) {\n                            continue; // Skip this header\n                        }\n                        const key = rawHeader.slice(0\x2C sepIndex);\n                        const value = rawHeader.slice(sepIndex + 1);\n                        headers.set(key\x2C value);\n                    }\n                    if (!headers.has("content-disposition")) {\n                        continue; // Skip unknown part\n                    }\n                    // Content-Transfer-Encoding Deprecated\n                    const contentDisposition = headers.get("content-disposition");\n                    const partContentType = headers.get("content-type") || "text/plain";\n                    // TODO: custom charset encoding (needs TextEncoder support)\n                    // const contentTypeCharset =\n                    //   getHeaderValueParams(partContentType).get("charset") || "";\n                    if (!hasHeaderValueOf(contentDisposition\x2C "form-data")) {\n                        continue; // Skip\x2C might not be form-data\n                    }\n                    const dispositionParams = getHeaderValueParams(contentDisposition);\n                    if (!dispositionParams.has("name")) {\n                        continue; // Skip\x2C unknown name\n                    }\n                    const dispositionName = dispositionParams.get("name");\n                    if (dispositionParams.has("filename")) {\n                        const filename = dispositionParams.get("filename");\n                        const blob = new blob_ts_1.DenoBlob([enc.encode(octets)]\x2C {\n                            type: partContentType\n                        });\n                        // TODO: based on spec\n                        // https://xhr.spec.whatwg.org/#dom-formdata-append\n                        // https://xhr.spec.whatwg.org/#create-an-entry\n                        // Currently it does not mention how I could pass content-type\n                        // to the internally created file object...\n                        formData.append(dispositionName\x2C blob\x2C filename);\n                    }\n                    else {\n                        formData.append(dispositionName\x2C octets);\n                    }\n                }\n                return formData;\n            }\n            else if (hasHeaderValueOf(this.contentType\x2C "application/x-www-form-urlencoded")) {\n                // From https://github.com/github/fetch/blob/master/fetch.js\n                // Copyright (c) 2014-2016 GitHub\x2C Inc. MIT License\n                const body = await this.text();\n                try {\n                    body\n                        .trim()\n                        .split("&")\n                        .forEach((bytes) => {\n                        if (bytes) {\n                            const split = bytes.split("=");\n                            const name = split.shift().replace(/\\+/g\x2C " ");\n                            const value = split.join("=").replace(/\\+/g\x2C " ");\n                            formData.append(decodeURIComponent(name)\x2C decodeURIComponent(value));\n                        }\n                    });\n                }\n                catch (e) {\n                    throw new TypeError("Invalid form urlencoded format");\n                }\n                return formData;\n            }\n            else {\n                throw new TypeError("Invalid form data");\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async json() {\n            const text = await this.text();\n            return JSON.parse(text);\n        }\n        async text() {\n            const ab = await this.arrayBuffer();\n            const decoder = new text_encoding_ts_6.TextDecoder("utf-8");\n            return decoder.decode(ab);\n        }\n        read(p) {\n            this._bodyUsed = true;\n            return files_ts_7.read(this.rid\x2C p);\n        }\n        close() {\n            files_ts_7.close(this.rid);\n        }\n        async cancel() {\n            return util_ts_17.notImplemented();\n        }\n        getReader() {\n            return util_ts_17.notImplemented();\n        }\n        tee() {\n            return util_ts_17.notImplemented();\n        }\n        [Symbol.asyncIterator]() {\n            return io.toAsyncIterator(this);\n        }\n        get bodyUsed() {\n            return this._bodyUsed;\n        }\n    }\n    class Response {\n        constructor(url\x2C status\x2C statusText\x2C headersList\x2C rid\x2C redirected_\x2C body_ = null) {\n            this.url = url;\n            this.status = status;\n            this.statusText = statusText;\n            this.type = "basic"; // TODO\n            this.trailer = util_ts_17.createResolvable();\n            this.headers = new headers_ts_1.Headers(headersList);\n            const contentType = this.headers.get("content-type") || "";\n            if (body_ == null) {\n                this.body = new Body(rid\x2C contentType);\n            }\n            else {\n                this.body = body_;\n            }\n            this.redirected = redirected_;\n        }\n        async arrayBuffer() {\n            return this.body.arrayBuffer();\n        }\n        async blob() {\n            return this.body.blob();\n        }\n        async formData() {\n            return this.body.formData();\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async json() {\n            return this.body.json();\n        }\n        async text() {\n            return this.body.text();\n        }\n        get ok() {\n            return 200 <= this.status && this.status < 300;\n        }\n        get bodyUsed() {\n            return this.body.bodyUsed;\n        }\n        clone() {\n            if (this.bodyUsed) {\n                throw new TypeError("Failed to execute 'clone' on 'Response': Response body is already used");\n            }\n            const iterators = this.headers.entries();\n            const headersList = [];\n            for (const header of iterators) {\n                headersList.push(header);\n            }\n            return new Response(this.url\x2C this.status\x2C this.statusText\x2C headersList\x2C -1\x2C this.redirected\x2C this.body);\n        }\n    }\n    exports.Response = Response;\n    async function sendFetchReq(url\x2C method\x2C headers\x2C body) {\n        let headerArray = [];\n        if (headers) {\n            headerArray = Array.from(headers.entries());\n        }\n        let zeroCopy = undefined;\n        if (body) {\n            zeroCopy = new Uint8Array(body.buffer\x2C body.byteOffset\x2C body.byteLength);\n        }\n        const args = {\n            method\x2C\n            url\x2C\n            headers: headerArray\n        };\n        return (await dispatch_json_ts_26.sendAsync(dispatch.OP_FETCH\x2C args\x2C zeroCopy));\n    }\n    /** Fetch a resource from the network. */\n    async function fetch(input\x2C init) {\n        let url;\n        let method = null;\n        let headers = null;\n        let body;\n        let redirected = false;\n        let remRedirectCount = 20; // TODO: use a better way to handle\n        if (typeof input === "string") {\n            url = input;\n            if (init != null) {\n                method = init.method || null;\n                if (init.headers) {\n                    headers =\n                        init.headers instanceof headers_ts_1.Headers\n                            ? init.headers\n                            : new headers_ts_1.Headers(init.headers);\n                }\n                else {\n                    headers = null;\n                }\n                // ref: https://fetch.spec.whatwg.org/#body-mixin\n                // Body should have been a mixin\n                // but we are treating it as a separate class\n                if (init.body) {\n                    if (!headers) {\n                        headers = new headers_ts_1.Headers();\n                    }\n                    let contentType = "";\n                    if (typeof init.body === "string") {\n                        body = new text_encoding_ts_6.TextEncoder().encode(init.body);\n                        contentType = "text/plain;charset=UTF-8";\n                    }\n                    else if (util_ts_17.isTypedArray(init.body)) {\n                        body = init.body;\n                    }\n                    else if (init.body instanceof url_search_params_ts_1.URLSearchParams) {\n                        body = new text_encoding_ts_6.TextEncoder().encode(init.body.toString());\n                        contentType = "application/x-www-form-urlencoded;charset=UTF-8";\n                    }\n                    else if (init.body instanceof blob_ts_1.DenoBlob) {\n                        body = init.body[blob_ts_1.bytesSymbol];\n                        contentType = init.body.type;\n                    }\n                    else {\n                        // TODO: FormData\x2C ReadableStream\n                        util_ts_17.notImplemented();\n                    }\n                    if (contentType && !headers.has("content-type")) {\n                        headers.set("content-type"\x2C contentType);\n                    }\n                }\n            }\n        }\n        else {\n            url = input.url;\n            method = input.method;\n            headers = input.headers;\n            //@ts-ignore\n            if (input._bodySource) {\n                body = new DataView(await input.arrayBuffer());\n            }\n        }\n        while (remRedirectCount) {\n            const fetchResponse = await sendFetchReq(url\x2C method\x2C headers\x2C body);\n            const response = new Response(url\x2C fetchResponse.status\x2C fetchResponse.statusText\x2C fetchResponse.headers\x2C fetchResponse.bodyRid\x2C redirected);\n            if ([301\x2C 302\x2C 303\x2C 307\x2C 308].includes(response.status)) {\n                // We're in a redirect status\n                switch ((init && init.redirect) || "follow") {\n                    case "error":\n                        throw util_ts_17.notImplemented();\n                    case "manual":\n                        throw util_ts_17.notImplemented();\n                    case "follow":\n                    default:\n                        let redirectUrl = response.headers.get("Location");\n                        if (redirectUrl == null) {\n                            return response; // Unspecified\n                        }\n                        if (!redirectUrl.startsWith("http://") &&\n                            !redirectUrl.startsWith("https://")) {\n                            redirectUrl =\n                                url.split("//")[0] +\n                                    "//" +\n                                    url.split("//")[1].split("/")[0] +\n                                    redirectUrl; // TODO: handle relative redirection more gracefully\n                        }\n                        url = redirectUrl;\n                        redirected = true;\n                        remRedirectCount--;\n                }\n            }\n            else {\n                return response;\n            }\n        }\n        // Return a network error due to too many redirections\n        throw util_ts_17.notImplemented();\n    }\n    exports.fetch = fetch;\n});\ndefine("$deno$/timers.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/window.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C util_ts_18\x2C window_ts_7\x2C dispatch\x2C dispatch_json_ts_27) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const { console } = window_ts_7.window;\n    // We'll subtract EPOCH every time we retrieve the time with Date.now(). This\n    // ensures that absolute time values stay below UINT32_MAX - 2\x2C which is the\n    // maximum object key that EcmaScript considers "numerical". After running for\n    // about a month\x2C this is no longer true\x2C and Deno explodes.\n    // TODO(piscisaureus): fix that ^.\n    const EPOCH = Date.now();\n    const APOCALYPSE = 2 ** 32 - 2;\n    // Timeout values > TIMEOUT_MAX are set to 1.\n    const TIMEOUT_MAX = 2 ** 31 - 1;\n    let globalTimeoutDue = null;\n    let nextTimerId = 1;\n    const idMap = new Map();\n    const dueMap = Object.create(null);\n    function getTime() {\n        // TODO: use a monotonic clock.\n        const now = Date.now() - EPOCH;\n        util_ts_18.assert(now >= 0 && now < APOCALYPSE);\n        return now;\n    }\n    function clearGlobalTimeout() {\n        globalTimeoutDue = null;\n        dispatch_json_ts_27.sendSync(dispatch.OP_GLOBAL_TIMER_STOP);\n    }\n    async function setGlobalTimeout(due\x2C now) {\n        // Since JS and Rust don't use the same clock\x2C pass the time to rust as a\n        // relative time value. On the Rust side we'll turn that into an absolute\n        // value again.\n        const timeout = due - now;\n        util_ts_18.assert(timeout >= 0);\n        // Send message to the backend.\n        globalTimeoutDue = due;\n        await dispatch_json_ts_27.sendAsync(dispatch.OP_GLOBAL_TIMER\x2C { timeout });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        fireTimers();\n    }\n    function setOrClearGlobalTimeout(due\x2C now) {\n        if (due == null) {\n            clearGlobalTimeout();\n        }\n        else {\n            setGlobalTimeout(due\x2C now);\n        }\n    }\n    function schedule(timer\x2C now) {\n        util_ts_18.assert(!timer.scheduled);\n        util_ts_18.assert(now <= timer.due);\n        // Find or create the list of timers that will fire at point-in-time `due`.\n        let list = dueMap[timer.due];\n        if (list === undefined) {\n            list = dueMap[timer.due] = [];\n        }\n        // Append the newly scheduled timer to the list and mark it as scheduled.\n        list.push(timer);\n        timer.scheduled = true;\n        // If the new timer is scheduled to fire before any timer that existed before\x2C\n        // update the global timeout to reflect this.\n        if (globalTimeoutDue === null || globalTimeoutDue > timer.due) {\n            setOrClearGlobalTimeout(timer.due\x2C now);\n        }\n    }\n    function unschedule(timer) {\n        if (!timer.scheduled) {\n            return;\n        }\n        // Find the list of timers that will fire at point-in-time `due`.\n        const list = dueMap[timer.due];\n        if (list.length === 1) {\n            // Time timer is the only one in the list. Remove the entire list.\n            util_ts_18.assert(list[0] === timer);\n            delete dueMap[timer.due];\n            // If the unscheduled timer was 'next up'\x2C find when the next timer that\n            // still exists is due\x2C and update the global alarm accordingly.\n            if (timer.due === globalTimeoutDue) {\n                let nextTimerDue = null;\n                for (const key in dueMap) {\n                    nextTimerDue = Number(key);\n                    break;\n                }\n                setOrClearGlobalTimeout(nextTimerDue\x2C getTime());\n            }\n        }\n        else {\n            // Multiple timers that are due at the same point in time.\n            // Remove this timer from the list.\n            const index = list.indexOf(timer);\n            util_ts_18.assert(index > -1);\n            list.splice(index\x2C 1);\n        }\n    }\n    function fire(timer) {\n        // If the timer isn't found in the ID map\x2C that means it has been cancelled\n        // between the timer firing and the promise callback (this function).\n        if (!idMap.has(timer.id)) {\n            return;\n        }\n        // Reschedule the timer if it is a repeating one\x2C otherwise drop it.\n        if (!timer.repeat) {\n            // One-shot timer: remove the timer from this id-to-timer map.\n            idMap.delete(timer.id);\n        }\n        else {\n            // Interval timer: compute when timer was supposed to fire next.\n            // However make sure to never schedule the next interval in the past.\n            const now = getTime();\n            timer.due = Math.max(now\x2C timer.due + timer.delay);\n            schedule(timer\x2C now);\n        }\n        // Call the user callback. Intermediate assignment is to avoid leaking `this`\n        // to it\x2C while also keeping the stack trace neat when it shows up in there.\n        const callback = timer.callback;\n        callback();\n    }\n    function fireTimers() {\n        const now = getTime();\n        // Bail out if we're not expecting the global timer to fire.\n        if (globalTimeoutDue === null) {\n            return;\n        }\n        // After firing the timers that are due now\x2C this will hold the due time of\n        // the first timer that hasn't fired yet.\n        let nextTimerDue = null;\n        // Walk over the keys of the 'due' map. Since dueMap is actually a regular\n        // object and its keys are numerical and smaller than UINT32_MAX - 2\x2C\n        // keys are iterated in ascending order.\n        for (const key in dueMap) {\n            // Convert the object key (a string) to a number.\n            const due = Number(key);\n            // Break out of the loop if the next timer isn't due to fire yet.\n            if (Number(due) > now) {\n                nextTimerDue = due;\n                break;\n            }\n            // Get the list of timers that have this due time\x2C then drop it.\n            const list = dueMap[key];\n            delete dueMap[key];\n            // Fire all the timers in the list.\n            for (const timer of list) {\n                // With the list dropped\x2C the timer is no longer scheduled.\n                timer.scheduled = false;\n                // Place the callback on the microtask queue.\n                Promise.resolve(timer).then(fire);\n            }\n        }\n        // Update the global alarm to go off when the first-up timer that hasn't fired\n        // yet is due.\n        setOrClearGlobalTimeout(nextTimerDue\x2C now);\n    }\n    function checkThis(thisArg) {\n        if (thisArg !== null && thisArg !== undefined && thisArg !== window_ts_7.window) {\n            throw new TypeError("Illegal invocation");\n        }\n    }\n    function checkBigInt(n) {\n        if (typeof n === "bigint") {\n            throw new TypeError("Cannot convert a BigInt value to a number");\n        }\n    }\n    function setTimer(cb\x2C delay\x2C args\x2C repeat) {\n        // Bind `args` to the callback and bind `this` to window(global).\n        const callback = cb.bind(window_ts_7.window\x2C ...args);\n        // In the browser\x2C the delay value must be coercible to an integer between 0\n        // and INT32_MAX. Any other value will cause the timer to fire immediately.\n        // We emulate this behavior.\n        const now = getTime();\n        if (delay > TIMEOUT_MAX) {\n            console.warn(`${delay} does not fit into` +\n                " a 32-bit signed integer." +\n                "\\nTimeout duration was set to 1.");\n            delay = 1;\n        }\n        delay = Math.max(0\x2C delay | 0);\n        // Create a new\x2C unscheduled timer object.\n        const timer = {\n            id: nextTimerId++\x2C\n            callback\x2C\n            args\x2C\n            delay\x2C\n            due: now + delay\x2C\n            repeat\x2C\n            scheduled: false\n        };\n        // Register the timer's existence in the id-to-timer map.\n        idMap.set(timer.id\x2C timer);\n        // Schedule the timer in the due table.\n        schedule(timer\x2C now);\n        return timer.id;\n    }\n    /** Sets a timer which executes a function once after the timer expires. */\n    function setTimeout(cb\x2C delay = 0\x2C ...args) {\n        checkBigInt(delay);\n        // @ts-ignore\n        checkThis(this);\n        return setTimer(cb\x2C delay\x2C args\x2C false);\n    }\n    exports.setTimeout = setTimeout;\n    /** Repeatedly calls a function \x2C with a fixed time delay between each call. */\n    function setInterval(cb\x2C delay = 0\x2C ...args) {\n        checkBigInt(delay);\n        // @ts-ignore\n        checkThis(this);\n        return setTimer(cb\x2C delay\x2C args\x2C true);\n    }\n    exports.setInterval = setInterval;\n    /** Clears a previously set timer by id. AKA clearTimeout and clearInterval. */\n    function clearTimer(id) {\n        id = Number(id);\n        const timer = idMap.get(id);\n        if (timer === undefined) {\n            // Timer doesn't exist any more or never existed. This is not an error.\n            return;\n        }\n        // Unschedule the timer if it is currently scheduled\x2C and forget about it.\n        unschedule(timer);\n        idMap.delete(timer.id);\n    }\n    function clearTimeout(id = 0) {\n        checkBigInt(id);\n        if (id === 0) {\n            return;\n        }\n        clearTimer(id);\n    }\n    exports.clearTimeout = clearTimeout;\n    function clearInterval(id = 0) {\n        checkBigInt(id);\n        if (id === 0) {\n            return;\n        }\n        clearTimer(id);\n    }\n    exports.clearInterval = clearInterval;\n});\ndefine("$deno$/workers.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"\x2C "$deno$/util.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/window.ts"\x2C "$deno$/url.ts"\x2C "$deno$/blob.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_28\x2C util_ts_19\x2C text_encoding_ts_7\x2C window_ts_8\x2C url_ts_1\x2C blob_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const encoder = new text_encoding_ts_7.TextEncoder();\n    const decoder = new text_encoding_ts_7.TextDecoder();\n    function encodeMessage(data) {\n        const dataJson = JSON.stringify(data);\n        return encoder.encode(dataJson);\n    }\n    exports.encodeMessage = encodeMessage;\n    function decodeMessage(dataIntArray) {\n        const dataJson = decoder.decode(dataIntArray);\n        return JSON.parse(dataJson);\n    }\n    exports.decodeMessage = decodeMessage;\n    function createWorker(specifier\x2C includeDenoNamespace\x2C hasSourceCode\x2C sourceCode) {\n        return dispatch_json_ts_28.sendSync(dispatch.OP_CREATE_WORKER\x2C {\n            specifier\x2C\n            includeDenoNamespace\x2C\n            hasSourceCode\x2C\n            sourceCode: new text_encoding_ts_7.TextDecoder().decode(sourceCode)\n        });\n    }\n    async function hostGetWorkerClosed(rid) {\n        await dispatch_json_ts_28.sendAsync(dispatch.OP_HOST_GET_WORKER_CLOSED\x2C { rid });\n    }\n    function hostPostMessage(rid\x2C data) {\n        const dataIntArray = encodeMessage(data);\n        dispatch_json_ts_28.sendSync(dispatch.OP_HOST_POST_MESSAGE\x2C { rid }\x2C dataIntArray);\n    }\n    async function hostGetMessage(rid) {\n        const res = await dispatch_json_ts_28.sendAsync(dispatch.OP_HOST_GET_MESSAGE\x2C { rid });\n        if (res.data != null) {\n            return decodeMessage(new Uint8Array(res.data));\n        }\n        else {\n            return null;\n        }\n    }\n    // Stuff for workers\n    exports.onmessage = () => { };\n    function postMessage(data) {\n        const dataIntArray = encodeMessage(data);\n        dispatch_json_ts_28.sendSync(dispatch.OP_WORKER_POST_MESSAGE\x2C {}\x2C dataIntArray);\n    }\n    exports.postMessage = postMessage;\n    async function getMessage() {\n        util_ts_19.log("getMessage");\n        const res = await dispatch_json_ts_28.sendAsync(dispatch.OP_WORKER_GET_MESSAGE);\n        if (res.data != null) {\n            return decodeMessage(new Uint8Array(res.data));\n        }\n        else {\n            return null;\n        }\n    }\n    exports.getMessage = getMessage;\n    exports.isClosing = false;\n    function workerClose() {\n        exports.isClosing = true;\n    }\n    exports.workerClose = workerClose;\n    async function workerMain() {\n        util_ts_19.log("workerMain");\n        while (!exports.isClosing) {\n            const data = await getMessage();\n            if (data == null) {\n                util_ts_19.log("workerMain got null message. quitting.");\n                break;\n            }\n            if (window_ts_8.window["onmessage"]) {\n                const event = { data };\n                const result = window_ts_8.window.onmessage(event);\n                if (result && "then" in result) {\n                    await result;\n                }\n            }\n            if (!window_ts_8.window["onmessage"]) {\n                break;\n            }\n        }\n    }\n    exports.workerMain = workerMain;\n    class WorkerImpl {\n        constructor(specifier\x2C options) {\n            this.isClosing = false;\n            let hasSourceCode = false;\n            let sourceCode = new Uint8Array();\n            let includeDenoNamespace = true;\n            if (options && options.noDenoNamespace) {\n                includeDenoNamespace = false;\n            }\n            // Handle blob URL.\n            if (specifier.startsWith("blob:")) {\n                hasSourceCode = true;\n                const b = url_ts_1.blobURLMap.get(specifier);\n                if (!b) {\n                    throw new Error("No Blob associated with the given URL is found");\n                }\n                const blobBytes = blob_ts_2.blobBytesWeakMap.get(b);\n                if (!blobBytes) {\n                    throw new Error("Invalid Blob");\n                }\n                sourceCode = blobBytes;\n            }\n            this.rid = createWorker(specifier\x2C includeDenoNamespace\x2C hasSourceCode\x2C sourceCode);\n            this.run();\n            this.isClosedPromise = hostGetWorkerClosed(this.rid);\n            this.isClosedPromise.then(() => {\n                this.isClosing = true;\n            });\n        }\n        get closed() {\n            return this.isClosedPromise;\n        }\n        postMessage(data) {\n            hostPostMessage(this.rid\x2C data);\n        }\n        async run() {\n            while (!this.isClosing) {\n                const data = await hostGetMessage(this.rid);\n                if (data == null) {\n                    util_ts_19.log("worker got null message. quitting.");\n                    break;\n                }\n                // TODO(afinch7) stop this from eating messages before onmessage has been assigned\n                if (this.onmessage) {\n                    const event = { data };\n                    this.onmessage(event);\n                }\n            }\n        }\n    }\n    exports.WorkerImpl = WorkerImpl;\n});\ndefine("$deno$/performance.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_29) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    class Performance {\n        /** Returns a current time from Deno's start in milliseconds.\n         *\n         * Use the flag --allow-hrtime return a precise value.\n         *\n         *       const t = performance.now();\n         *       console.log(`${t} ms since start!`);\n         */\n        now() {\n            const res = dispatch_json_ts_29.sendSync(dispatch.OP_NOW);\n            return res.seconds * 1e3 + res.subsecNanos / 1e6;\n        }\n    }\n    exports.Performance = Performance;\n});\ndefine("$deno$/body.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/form_data.ts"\x2C "$deno$/blob.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/headers.ts"]\x2C function (require\x2C exports\x2C formData\x2C blob\x2C encoding\x2C headers) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const { Headers } = headers;\n    // only namespace imports work for now\x2C plucking out what we need\n    const { FormData } = formData;\n    const { TextEncoder\x2C TextDecoder } = encoding;\n    const Blob = blob.DenoBlob;\n    const DenoBlob = blob.DenoBlob;\n    function validateBodyType(owner\x2C bodySource) {\n        if (bodySource instanceof Int8Array ||\n            bodySource instanceof Int16Array ||\n            bodySource instanceof Int32Array ||\n            bodySource instanceof Uint8Array ||\n            bodySource instanceof Uint16Array ||\n            bodySource instanceof Uint32Array ||\n            bodySource instanceof Uint8ClampedArray ||\n            bodySource instanceof Float32Array ||\n            bodySource instanceof Float64Array) {\n            return true;\n        }\n        else if (bodySource instanceof ArrayBuffer) {\n            return true;\n        }\n        else if (typeof bodySource === "string") {\n            return true;\n        }\n        else if (bodySource instanceof FormData) {\n            return true;\n        }\n        else if (!bodySource) {\n            return true; // null body is fine\n        }\n        throw new Error(`Bad ${owner.constructor.name} body type: ${bodySource.constructor.name}`);\n    }\n    function getHeaderValueParams(value) {\n        const params = new Map();\n        // Forced to do so for some Map constructor param mismatch\n        value\n            .split(";")\n            .slice(1)\n            .map((s) => s.trim().split("="))\n            .filter((arr) => arr.length > 1)\n            .map(([k\x2C v]) => [k\x2C v.replace(/^"([^"]*)"$/\x2C "$1")])\n            .forEach(([k\x2C v]) => params.set(k\x2C v));\n        return params;\n    }\n    function hasHeaderValueOf(s\x2C value) {\n        return new RegExp(`^${value}[\\t\\s]*;?`).test(s);\n    }\n    exports.BodyUsedError = "Failed to execute 'clone' on 'Body': body is already used";\n    class Body {\n        constructor(_bodySource\x2C contentType) {\n            this._bodySource = _bodySource;\n            this.contentType = contentType;\n            validateBodyType(this\x2C _bodySource);\n            this._bodySource = _bodySource;\n            this.contentType = contentType;\n            this._stream = null;\n        }\n        get body() {\n            if (this._stream) {\n                return this._stream;\n            }\n            if (typeof this._bodySource === "string") {\n                throw Error("not implemented");\n            }\n            return this._stream;\n        }\n        get bodyUsed() {\n            if (this.body && this.body.locked) {\n                return true;\n            }\n            return false;\n        }\n        async blob() {\n            return new Blob([await this.arrayBuffer()]);\n        }\n        // ref: https://fetch.spec.whatwg.org/#body-mixin\n        async formData() {\n            const formData = new FormData();\n            const enc = new TextEncoder();\n            if (hasHeaderValueOf(this.contentType\x2C "multipart/form-data")) {\n                const params = getHeaderValueParams(this.contentType);\n                if (!params.has("boundary")) {\n                    // TypeError is required by spec\n                    throw new TypeError("multipart/form-data must provide a boundary");\n                }\n                // ref: https://tools.ietf.org/html/rfc2046#section-5.1\n                const boundary = params.get("boundary");\n                const dashBoundary = `--${boundary}`;\n                const delimiter = `\\r\\n${dashBoundary}`;\n                const closeDelimiter = `${delimiter}--`;\n                const body = await this.text();\n                let bodyParts;\n                const bodyEpilogueSplit = body.split(closeDelimiter);\n                if (bodyEpilogueSplit.length < 2) {\n                    bodyParts = [];\n                }\n                else {\n                    // discard epilogue\n                    const bodyEpilogueTrimmed = bodyEpilogueSplit[0];\n                    // first boundary treated special due to optional prefixed \\r\\n\n                    const firstBoundaryIndex = bodyEpilogueTrimmed.indexOf(dashBoundary);\n                    if (firstBoundaryIndex < 0) {\n                        throw new TypeError("Invalid boundary");\n                    }\n                    const bodyPreambleTrimmed = bodyEpilogueTrimmed\n                        .slice(firstBoundaryIndex + dashBoundary.length)\n                        .replace(/^[\\s\\r\\n\\t]+/\x2C ""); // remove transport-padding CRLF\n                    // trimStart might not be available\n                    // Be careful! body-part allows trailing \\r\\n!\n                    // (as long as it is not part of `delimiter`)\n                    bodyParts = bodyPreambleTrimmed\n                        .split(delimiter)\n                        .map((s) => s.replace(/^[\\s\\r\\n\\t]+/\x2C ""));\n                    // TODO: LWSP definition is actually trickier\x2C\n                    // but should be fine in our case since without headers\n                    // we should just discard the part\n                }\n                for (const bodyPart of bodyParts) {\n                    const headers = new Headers();\n                    const headerOctetSeperatorIndex = bodyPart.indexOf("\\r\\n\\r\\n");\n                    if (headerOctetSeperatorIndex < 0) {\n                        continue; // Skip unknown part\n                    }\n                    const headerText = bodyPart.slice(0\x2C headerOctetSeperatorIndex);\n                    const octets = bodyPart.slice(headerOctetSeperatorIndex + 4);\n                    // TODO: use textproto.readMIMEHeader from deno_std\n                    const rawHeaders = headerText.split("\\r\\n");\n                    for (const rawHeader of rawHeaders) {\n                        const sepIndex = rawHeader.indexOf(":");\n                        if (sepIndex < 0) {\n                            continue; // Skip this header\n                        }\n                        const key = rawHeader.slice(0\x2C sepIndex);\n                        const value = rawHeader.slice(sepIndex + 1);\n                        headers.set(key\x2C value);\n                    }\n                    if (!headers.has("content-disposition")) {\n                        continue; // Skip unknown part\n                    }\n                    // Content-Transfer-Encoding Deprecated\n                    const contentDisposition = headers.get("content-disposition");\n                    const partContentType = headers.get("content-type") || "text/plain";\n                    // TODO: custom charset encoding (needs TextEncoder support)\n                    // const contentTypeCharset =\n                    //   getHeaderValueParams(partContentType).get("charset") || "";\n                    if (!hasHeaderValueOf(contentDisposition\x2C "form-data")) {\n                        continue; // Skip\x2C might not be form-data\n                    }\n                    const dispositionParams = getHeaderValueParams(contentDisposition);\n                    if (!dispositionParams.has("name")) {\n                        continue; // Skip\x2C unknown name\n                    }\n                    const dispositionName = dispositionParams.get("name");\n                    if (dispositionParams.has("filename")) {\n                        const filename = dispositionParams.get("filename");\n                        const blob = new DenoBlob([enc.encode(octets)]\x2C {\n                            type: partContentType\n                        });\n                        // TODO: based on spec\n                        // https://xhr.spec.whatwg.org/#dom-formdata-append\n                        // https://xhr.spec.whatwg.org/#create-an-entry\n                        // Currently it does not mention how I could pass content-type\n                        // to the internally created file object...\n                        formData.append(dispositionName\x2C blob\x2C filename);\n                    }\n                    else {\n                        formData.append(dispositionName\x2C octets);\n                    }\n                }\n                return formData;\n            }\n            else if (hasHeaderValueOf(this.contentType\x2C "application/x-www-form-urlencoded")) {\n                // From https://github.com/github/fetch/blob/master/fetch.js\n                // Copyright (c) 2014-2016 GitHub\x2C Inc. MIT License\n                const body = await this.text();\n                try {\n                    body\n                        .trim()\n                        .split("&")\n                        .forEach((bytes) => {\n                        if (bytes) {\n                            const split = bytes.split("=");\n                            const name = split.shift().replace(/\\+/g\x2C " ");\n                            const value = split.join("=").replace(/\\+/g\x2C " ");\n                            formData.append(decodeURIComponent(name)\x2C decodeURIComponent(value));\n                        }\n                    });\n                }\n                catch (e) {\n                    throw new TypeError("Invalid form urlencoded format");\n                }\n                return formData;\n            }\n            else {\n                throw new TypeError("Invalid form data");\n            }\n        }\n        async text() {\n            if (typeof this._bodySource === "string") {\n                return this._bodySource;\n            }\n            const ab = await this.arrayBuffer();\n            const decoder = new TextDecoder("utf-8");\n            return decoder.decode(ab);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async json() {\n            const raw = await this.text();\n            return JSON.parse(raw);\n        }\n        async arrayBuffer() {\n            if (this._bodySource instanceof Int8Array ||\n                this._bodySource instanceof Int16Array ||\n                this._bodySource instanceof Int32Array ||\n                this._bodySource instanceof Uint8Array ||\n                this._bodySource instanceof Uint16Array ||\n                this._bodySource instanceof Uint32Array ||\n                this._bodySource instanceof Uint8ClampedArray ||\n                this._bodySource instanceof Float32Array ||\n                this._bodySource instanceof Float64Array) {\n                return this._bodySource.buffer;\n            }\n            else if (this._bodySource instanceof ArrayBuffer) {\n                return this._bodySource;\n            }\n            else if (typeof this._bodySource === "string") {\n                const enc = new TextEncoder();\n                return enc.encode(this._bodySource).buffer;\n            }\n            else if (this._bodySource instanceof FormData) {\n                const enc = new TextEncoder();\n                return enc.encode(this._bodySource.toString()).buffer;\n            }\n            else if (!this._bodySource) {\n                return new ArrayBuffer(0);\n            }\n            throw new Error(`Body type not yet implemented: ${this._bodySource.constructor.name}`);\n        }\n    }\n    exports.Body = Body;\n});\ndefine("$deno$/request.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/headers.ts"\x2C "$deno$/body.ts"]\x2C function (require\x2C exports\x2C headers\x2C body) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const { Headers } = headers;\n    function byteUpperCase(s) {\n        return String(s).replace(/[a-z]/g\x2C function byteUpperCaseReplace(c) {\n            return c.toUpperCase();\n        });\n    }\n    function normalizeMethod(m) {\n        const u = byteUpperCase(m);\n        if (u === "DELETE" ||\n            u === "GET" ||\n            u === "HEAD" ||\n            u === "OPTIONS" ||\n            u === "POST" ||\n            u === "PUT") {\n            return u;\n        }\n        return m;\n    }\n    /**\n     * An HTTP request\n     * @param {Blob|String} [body]\n     * @param {Object} [init]\n     */\n    class Request extends body.Body {\n        constructor(input\x2C init) {\n            if (arguments.length < 1) {\n                throw TypeError("Not enough arguments");\n            }\n            if (!init) {\n                init = {};\n            }\n            let b;\n            // prefer body from init\n            if (init.body) {\n                b = init.body;\n            }\n            else if (input instanceof Request && input._bodySource) {\n                if (input.bodyUsed) {\n                    throw TypeError(body.BodyUsedError);\n                }\n                b = input._bodySource;\n            }\n            else if (typeof input === "object" && "body" in input && input.body) {\n                if (input.bodyUsed) {\n                    throw TypeError(body.BodyUsedError);\n                }\n                b = input.body;\n            }\n            else {\n                b = "";\n            }\n            let headers;\n            // prefer headers from init\n            if (init.headers) {\n                headers = new Headers(init.headers);\n            }\n            else if (input instanceof Request) {\n                headers = input.headers;\n            }\n            else {\n                headers = new Headers();\n            }\n            const contentType = headers.get("content-type") || "";\n            super(b\x2C contentType);\n            this.headers = headers;\n            // readonly attribute ByteString method;\n            /**\n             * The HTTP request method\n             * @readonly\n             * @default GET\n             * @type {string}\n             */\n            this.method = "GET";\n            // readonly attribute USVString url;\n            /**\n             * The request URL\n             * @readonly\n             * @type {string}\n             */\n            this.url = "";\n            // readonly attribute RequestCredentials credentials;\n            this.credentials = "omit";\n            if (input instanceof Request) {\n                if (input.bodyUsed) {\n                    throw TypeError(body.BodyUsedError);\n                }\n                this.method = input.method;\n                this.url = input.url;\n                this.headers = new Headers(input.headers);\n                this.credentials = input.credentials;\n                this._stream = input._stream;\n            }\n            else if (typeof input === "string") {\n                this.url = input;\n            }\n            if (init && "method" in init) {\n                this.method = normalizeMethod(init.method);\n            }\n            if (init &&\n                "credentials" in init &&\n                init.credentials &&\n                ["omit"\x2C "same-origin"\x2C "include"].indexOf(init.credentials) !== -1) {\n                this.credentials = init.credentials;\n            }\n        }\n        clone() {\n            if (this.bodyUsed) {\n                throw TypeError(body.BodyUsedError);\n            }\n            const iterators = this.headers.entries();\n            const headersList = [];\n            for (const header of iterators) {\n                headersList.push(header);\n            }\n            const body2 = this._bodySource;\n            const cloned = new Request(this.url\x2C {\n                body: body2\x2C\n                method: this.method\x2C\n                headers: new Headers(headersList)\x2C\n                credentials: this.credentials\n            });\n            return cloned;\n        }\n    }\n    exports.Request = Request;\n});\n// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n// This is a "special" module\x2C in that it define the global runtime scope of\n// Deno\x2C and therefore it defines a lot of the runtime environment that code\n// is evaluated in.  We use this file to automatically build the runtime type\n// library.\ndefine("$deno$/globals.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/window.ts"\x2C "$deno$/blob.ts"\x2C "$deno$/console.ts"\x2C "$deno$/get_random_values.ts"\x2C "$deno$/custom_event.ts"\x2C "$deno$/deno.ts"\x2C "$deno$/dom_types.ts"\x2C "$deno$/dom_file.ts"\x2C "$deno$/event.ts"\x2C "$deno$/event_target.ts"\x2C "$deno$/form_data.ts"\x2C "$deno$/fetch.ts"\x2C "$deno$/headers.ts"\x2C "$deno$/text_encoding.ts"\x2C "$deno$/timers.ts"\x2C "$deno$/url.ts"\x2C "$deno$/url_search_params.ts"\x2C "$deno$/workers.ts"\x2C "$deno$/performance.ts"\x2C "$deno$/request.ts"\x2C "$deno$/core.ts"]\x2C function (require\x2C exports\x2C window_ts_9\x2C blob\x2C consoleTypes\x2C csprng\x2C customEvent\x2C Deno\x2C domTypes\x2C domFile\x2C event\x2C eventTarget\x2C formData\x2C fetchTypes\x2C headers\x2C textEncoding\x2C timers\x2C url\x2C urlSearchParams\x2C workers\x2C performanceUtil\x2C request\x2C core_ts_5) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // A self reference to the global object.\n    window_ts_9.window.window = window_ts_9.window;\n    // This is the Deno namespace\x2C it is handled differently from other window\n    // properties when building the runtime type library\x2C as the whole module\n    // is flattened into a single namespace.\n    window_ts_9.window.Deno = Deno;\n    // Globally available functions and object instances.\n    window_ts_9.window.atob = textEncoding.atob;\n    window_ts_9.window.btoa = textEncoding.btoa;\n    window_ts_9.window.fetch = fetchTypes.fetch;\n    window_ts_9.window.clearTimeout = timers.clearTimeout;\n    window_ts_9.window.clearInterval = timers.clearInterval;\n    window_ts_9.window.console = new consoleTypes.Console(core_ts_5.core.print);\n    window_ts_9.window.setTimeout = timers.setTimeout;\n    window_ts_9.window.setInterval = timers.setInterval;\n    window_ts_9.window.location = undefined;\n    window_ts_9.window.onload = undefined;\n    window_ts_9.window.onunload = undefined;\n    // The following Crypto interface implementation is not up to par with the\n    // standard https://www.w3.org/TR/WebCryptoAPI/#crypto-interface as it does not\n    // yet incorporate the SubtleCrypto interface as its "subtle" property.\n    window_ts_9.window.crypto = csprng;\n    // window.queueMicrotask added by hand to self-maintained lib.deno_runtime.d.ts\n    // When creating the runtime type library\x2C we use modifications to `window` to\n    // determine what is in the global namespace.  When we put a class in the\n    // namespace\x2C we also need its global instance type as well\x2C otherwise users\n    // won't be able to refer to instances.\n    // We have to export the type aliases\x2C so that TypeScript _knows_ they are\n    // being used\x2C which it cannot statically determine within this module.\n    window_ts_9.window.Blob = blob.DenoBlob;\n    window_ts_9.window.File = domFile.DomFileImpl;\n    window_ts_9.window.CustomEvent = customEvent.CustomEvent;\n    window_ts_9.window.Event = event.Event;\n    window_ts_9.window.EventTarget = eventTarget.EventTarget;\n    window_ts_9.window.URL = url.URL;\n    window_ts_9.window.URLSearchParams = urlSearchParams.URLSearchParams;\n    // Using the `as` keyword to use standard compliant interfaces as the Deno\n    // implementations contain some implementation details we wouldn't want to\n    // expose in the runtime type library.\n    window_ts_9.window.Headers = headers.Headers;\n    window_ts_9.window.FormData = formData.FormData;\n    window_ts_9.window.TextEncoder = textEncoding.TextEncoder;\n    window_ts_9.window.TextDecoder = textEncoding.TextDecoder;\n    window_ts_9.window.Request = request.Request;\n    window_ts_9.window.Response = fetchTypes.Response;\n    window_ts_9.window.performance = new performanceUtil.Performance();\n    // This variable functioning correctly depends on `declareAsLet`\n    // in //tools/ts_library_builder/main.ts\n    window_ts_9.window.onmessage = workers.onmessage;\n    window_ts_9.window.workerMain = workers.workerMain;\n    window_ts_9.window.workerClose = workers.workerClose;\n    window_ts_9.window.postMessage = workers.postMessage;\n    window_ts_9.window.Worker = workers.WorkerImpl;\n    window_ts_9.window[domTypes.eventTargetHost] = null;\n    window_ts_9.window[domTypes.eventTargetListeners] = {};\n    window_ts_9.window[domTypes.eventTargetMode] = "";\n    window_ts_9.window[domTypes.eventTargetNodeType] = 0;\n    window_ts_9.window[eventTarget.eventTargetAssignedSlot] = false;\n    window_ts_9.window[eventTarget.eventTargetHasActivationBehavior] = false;\n    window_ts_9.window.addEventListener = eventTarget.EventTarget.prototype.addEventListener;\n    window_ts_9.window.dispatchEvent = eventTarget.EventTarget.prototype.dispatchEvent;\n    window_ts_9.window.removeEventListener =\n        eventTarget.EventTarget.prototype.removeEventListener;\n    // Registers the handler for window.onload function.\n    window_ts_9.window.addEventListener("load"\x2C (e) => {\n        const onload = window_ts_9.window.onload;\n        if (typeof onload === "function") {\n            onload(e);\n        }\n    });\n    // Registers the handler for window.onunload function.\n    window_ts_9.window.addEventListener("unload"\x2C (e) => {\n        const onunload = window_ts_9.window.onunload;\n        if (typeof onunload === "function") {\n            onunload(e);\n        }\n    });\n});\ndefine("$deno$/format_error.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C dispatch\x2C dispatch_json_ts_30) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    // TODO(bartlomieju): move to `repl.ts`?\n    function formatError(errString) {\n        const res = dispatch_json_ts_30.sendSync(dispatch.OP_FORMAT_ERROR\x2C { error: errString });\n        return res.error;\n    }\n    exports.formatError = formatError;\n});\ndefine("$deno$/repl.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/files.ts"\x2C "$deno$/os.ts"\x2C "$deno$/window.ts"\x2C "$deno$/core.ts"\x2C "$deno$/format_error.ts"\x2C "$deno$/console.ts"\x2C "$deno$/dispatch.ts"\x2C "$deno$/dispatch_json.ts"]\x2C function (require\x2C exports\x2C files_ts_8\x2C os_ts_2\x2C window_ts_10\x2C core_ts_6\x2C format_error_ts_1\x2C console_ts_3\x2C dispatch\x2C dispatch_json_ts_31) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    const { console } = window_ts_10.window;\n    /**\n     * REPL logging.\n     * In favor of console.log to avoid unwanted indentation\n     */\n    function replLog(...args) {\n        core_ts_6.core.print(console_ts_3.stringifyArgs(args) + "\\n");\n    }\n    /**\n     * REPL logging for errors.\n     * In favor of console.error to avoid unwanted indentation\n     */\n    function replError(...args) {\n        core_ts_6.core.print(console_ts_3.stringifyArgs(args) + "\\n"\x2C true);\n    }\n    const helpMsg = [\n        "_       Get last evaluation result"\x2C\n        "_error  Get last thrown error"\x2C\n        "exit    Exit the REPL"\x2C\n        "help    Print this help message"\n    ].join("\\n");\n    const replCommands = {\n        exit: {\n            get() {\n                os_ts_2.exit(0);\n            }\n        }\x2C\n        help: {\n            get() {\n                return helpMsg;\n            }\n        }\n    };\n    function startRepl(historyFile) {\n        return dispatch_json_ts_31.sendSync(dispatch.OP_REPL_START\x2C { historyFile });\n    }\n    // @internal\n    async function readline(rid\x2C prompt) {\n        return dispatch_json_ts_31.sendAsync(dispatch.OP_REPL_READLINE\x2C { rid\x2C prompt });\n    }\n    exports.readline = readline;\n    // Error messages that allow users to continue input\n    // instead of throwing an error to REPL\n    // ref: https://github.com/v8/v8/blob/master/src/message-template.h\n    // TODO(kevinkassimo): this list might not be comprehensive\n    const recoverableErrorMessages = [\n        "Unexpected end of input"\x2C\n        "Missing initializer in const declaration"\x2C\n        "Missing catch or finally after try"\x2C\n        "missing ) after argument list"\x2C\n        "Unterminated template literal" // `template\n        // TODO(kevinkassimo): need a parser to handling errors such as:\n        // "Missing } in template expression" // `${ or `${ a 123 }`\n    ];\n    function isRecoverableError(e) {\n        return recoverableErrorMessages.includes(e.message);\n    }\n    let lastEvalResult = undefined;\n    let lastThrownError = undefined;\n    // Evaluate code.\n    // Returns true if code is consumed (no error/irrecoverable error).\n    // Returns false if error is recoverable\n    function evaluate(code) {\n        const [result\x2C errInfo] = core_ts_6.core.evalContext(code);\n        if (!errInfo) {\n            lastEvalResult = result;\n            replLog(result);\n        }\n        else if (errInfo.isCompileError && isRecoverableError(errInfo.thrown)) {\n            // Recoverable compiler error\n            return false; // don't consume code.\n        }\n        else {\n            lastThrownError = errInfo.thrown;\n            if (errInfo.isNativeError) {\n                const formattedError = format_error_ts_1.formatError(core_ts_6.core.errorToJSON(errInfo.thrown));\n                replError(formattedError);\n            }\n            else {\n                replError("Thrown:"\x2C errInfo.thrown);\n            }\n        }\n        return true;\n    }\n    // @internal\n    async function replLoop() {\n        Object.defineProperties(window_ts_10.window\x2C replCommands);\n        const historyFile = "deno_history.txt";\n        const rid = startRepl(historyFile);\n        const quitRepl = (exitCode) => {\n            // Special handling in case user calls deno.close(3).\n            try {\n                files_ts_8.close(rid); // close signals Drop on REPL and saves history.\n            }\n            catch { }\n            os_ts_2.exit(exitCode);\n        };\n        // Configure window._ to give the last evaluation result.\n        Object.defineProperty(window_ts_10.window\x2C "_"\x2C {\n            configurable: true\x2C\n            get: () => lastEvalResult\x2C\n            set: (value) => {\n                Object.defineProperty(window_ts_10.window\x2C "_"\x2C {\n                    value: value\x2C\n                    writable: true\x2C\n                    enumerable: true\x2C\n                    configurable: true\n                });\n                console.log("Last evaluation result is no longer saved to _.");\n            }\n        });\n        // Configure window._error to give the last thrown error.\n        Object.defineProperty(window_ts_10.window\x2C "_error"\x2C {\n            configurable: true\x2C\n            get: () => lastThrownError\x2C\n            set: (value) => {\n                Object.defineProperty(window_ts_10.window\x2C "_error"\x2C {\n                    value: value\x2C\n                    writable: true\x2C\n                    enumerable: true\x2C\n                    configurable: true\n                });\n                console.log("Last thrown error is no longer saved to _error.");\n            }\n        });\n        while (true) {\n            let code = "";\n            // Top level read\n            try {\n                code = await readline(rid\x2C "> ");\n                if (code.trim() === "") {\n                    continue;\n                }\n            }\n            catch (err) {\n                if (err.message === "EOF") {\n                    quitRepl(0);\n                }\n                else {\n                    // If interrupted\x2C don't print error.\n                    if (err.message !== "Interrupted") {\n                        // e.g. this happens when we have deno.close(3).\n                        // We want to display the problem.\n                        const formattedError = format_error_ts_1.formatError(core_ts_6.core.errorToJSON(err));\n                        replError(formattedError);\n                    }\n                    // Quit REPL anyways.\n                    quitRepl(1);\n                }\n            }\n            // Start continued read\n            while (!evaluate(code)) {\n                code += "\\n";\n                try {\n                    code += await readline(rid\x2C "  ");\n                }\n                catch (err) {\n                    // If interrupted on continued read\x2C\n                    // abort this read instead of quitting.\n                    if (err.message === "Interrupted") {\n                        break;\n                    }\n                    else if (err.message === "EOF") {\n                        quitRepl(0);\n                    }\n                    else {\n                        // e.g. this happens when we have deno.close(3).\n                        // We want to display the problem.\n                        const formattedError = format_error_ts_1.formatError(core_ts_6.core.errorToJSON(err));\n                        replError(formattedError);\n                        quitRepl(1);\n                    }\n                }\n            }\n        }\n    }\n    exports.replLoop = replLoop;\n});\ndefine("$deno$/location.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/url.ts"\x2C "$deno$/util.ts"\x2C "$deno$/window.ts"]\x2C function (require\x2C exports\x2C url_ts_2\x2C util_ts_20\x2C window_ts_11) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    class LocationImpl {\n        constructor(url) {\n            this.ancestorOrigins = [];\n            const u = new url_ts_2.URL(url);\n            this.url = u;\n            this.hash = u.hash;\n            this.host = u.host;\n            this.href = u.href;\n            this.hostname = u.hostname;\n            this.origin = u.protocol + "//" + u.host;\n            this.pathname = u.pathname;\n            this.protocol = u.protocol;\n            this.port = u.port;\n            this.search = u.search;\n        }\n        toString() {\n            return this.url.toString();\n        }\n        assign(_url) {\n            throw util_ts_20.notImplemented();\n        }\n        reload() {\n            throw util_ts_20.notImplemented();\n        }\n        replace(_url) {\n            throw util_ts_20.notImplemented();\n        }\n    }\n    exports.LocationImpl = LocationImpl;\n    function setLocation(url) {\n        window_ts_11.window.location = new LocationImpl(url);\n        Object.freeze(window_ts_11.window.location);\n    }\n    exports.setLocation = setLocation;\n});\ndefine("$deno$/main.ts"\x2C ["require"\x2C "exports"\x2C "$deno$/util.ts"\x2C "$deno$/os.ts"\x2C "$deno$/deno.ts"\x2C "$deno$/error_stack.ts"\x2C "$deno$/repl.ts"\x2C "$deno$/version.ts"\x2C "$deno$/window.ts"\x2C "$deno$/location.ts"\x2C "$deno$/build.ts"\x2C "$deno$/process.ts"\x2C "$deno$/globals.ts"]\x2C function (require\x2C exports\x2C util_ts_21\x2C os\x2C deno_ts_2\x2C error_stack_ts_3\x2C repl_ts_1\x2C version_ts_2\x2C window_ts_12\x2C location_ts_1\x2C build_ts_5\x2C process_ts_2) {\n    "use strict";\n    Object.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n    function denoMain(preserveDenoNamespace = true\x2C name) {\n        const s = os.start(preserveDenoNamespace\x2C name);\n        build_ts_5.setBuildInfo(s.os\x2C s.arch);\n        process_ts_2.setSignals();\n        version_ts_2.setVersions(s.denoVersion\x2C s.v8Version\x2C s.tsVersion);\n        error_stack_ts_3.setPrepareStackTrace(Error);\n        if (s.mainModule) {\n            util_ts_21.assert(s.mainModule.length > 0);\n            location_ts_1.setLocation(s.mainModule);\n        }\n        util_ts_21.log("cwd"\x2C s.cwd);\n        for (let i = 1; i < s.argv.length; i++) {\n            deno_ts_2.args.push(s.argv[i]);\n        }\n        util_ts_21.log("args"\x2C deno_ts_2.args);\n        Object.freeze(deno_ts_2.args);\n        if (!s.mainModule) {\n            repl_ts_1.replLoop();\n        }\n    }\n    window_ts_12.window["denoMain"] = denoMain;\n});\n//# sourceMappingURL=CLI_SNAPSHOT.js.map
code-source-info,0x37b0526f8a5e,5,285114,285875,C0O285114C15O285171C19O285174C25O285174C33O285218C37O285229C43O285244C49O285250C55O285229C61O285265C65O285278C71O285278C75O285300C79O285313C85O285327C91O285342C97O285355C103O285313C108O285375C112O285392C118O285413C123O285392C128O285435C134O285461C138O285472C144O285481C150O285492C157O285499C162O285472C167O285517C171O285531C177O285545C183O285531C188O285576C192O285587C202O285600C208O285587C214O285627C218O285636C224O285641C228O285632C233O285614C234O285668C238O285678C244O285683C250O285690C258O285694C263O285683C268O285650C277O285718C281O285729C295O285751C301O285729C307O285766C312O285773C322O285790C328O285773C333O285812C339O285838C343O285848C349O285848C354O285874,,
timer-event-end,V8.CompileCode,42441
timer-event-start,V8.CompileCode,42453
code-creation,LazyCompile,12,42586,0x37b0526f8f06,772,start /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2551:19,0x281636bd5978,~
code-source-info,0x37b0526f8f
timer-event-end,V8.CompileCode,42685
timer-event-start,V8.CompileCode,42695
code-creation,LazyCompile,12,42724,0x37b0526f93de,33,setAsyncHandler shared_queue.js:161:27,0x37b0526f7d70,~
code-source-info,0x37b0526f93de,9,4506,4590,C0O4506C1O4517C5O4517C8O4534C14O4541C19O4534C23O4568C25O4581C32O4589,,
timer-event-end,V8.CompileCode,42748
timer-event-start,V8.CompileCode,42754
code-creation,LazyCompile,12,42778,0x37b0526f94f6,27,maybeInit shared_queue.js:43:21,0x37b0526f78f8,~
code-source-info,0x37b0526f94f6,9,1728,1806,C0O1728C1O1737C7O1763C11O1763C14O1777C19O1789C26O1805,,
timer-event-end,V8.CompileCode,42800
timer-event-start,V8.CompileCode,42806
code-creation,LazyCompile,12,42863,0x37b0526f9646,142,init shared_queue.js:50:16,0x37b0526f7950,~
code-source-info,0x37b0526f9646,9,1823,2159,C0O1823C1O1847C7O1852C13O1857C19O1869C23O1883C30O1894C35O1869C39O1904C45O1911C50O1904C54O1937C60O1944C65O1937C69O1967C76O1981C85O1979C91O2009C98O2020C107O2018C113O2116C119O2121C125O2126C135O2126C141O2158,,
timer-event-end,V8.CompileCode,42905
timer-event-start,V8.CompileCode,42945
code-creation,LazyCompile,12,42987,0x37b0526f983e,95,ops shared_queue.js:61:15,0x37b0526f79a8,~
code-source-info,0x37b0526f983e,9,2175,2429,C0O2175C1O2277C7O2282C13O2287C22O2299C33O2295C43O2287C50O2345C55O2352C61O2365C70O2365C78O2395C83O2407C89O2407C94O2425,,
timer-event-end,V8.CompileCode,43017
timer-event-start,V8.CompileCode,44027
code-creation,LazyCompile,12,44085,0x37b0526fa95e,122,sendSync /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1227:22,0x281636bd14f8,~
code-source-info,0x37b0526fa95e,5,48459,48758,C0O48459C18O48513C22O48513C28O48550C32O48560C38O48565C53O48565C60O48608C64O48613C73O48627C76O48613C81O48657C85O48657C91O48681C95O48686C101O48697C108O48686C113O48725C117O48732C121O48752,,
timer-event-end,V8.CompileCode,44126
timer-event-start,V8.CompileCode,44133
code-creation,LazyCompile,12,44162,0x37b0526fab06,48,encode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1207:20,0x281636bd13f0,~
code-source-info,0x37b0526fab06,5,47752,47869,C0O47752C1O47779C6O47784C12O47784C19O47809C23O47839C29O47816C36O47853C42O47853C47O47863,,
timer-event-end,V8.CompileCode,44191
timer-event-start,V8.CompileCode,44210
code-creation,LazyCompile,12,44271,0x37b0526facb6,156,encode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:828:15,0x281636bd0540,~
code-source-info,0x37b0526facb6,5,32723,33325,C0O32723C13O32766C19O32766C26O32817C36O32828C44O32817C51O32883C55O32899C56O32953C62O32973C68O32973C74O32953C81O32998C83O33013C85O33009C90O33045C92O33086C97O33096C103O33096C110O33142C122O33142C129O33227C135O33227C143O33285C150O33292C155O33315,,
timer-event-end,V8.CompileCode,44318
timer-event-start,V8.CompileCode,44325
code-creation,LazyCompile,12,44340,0x37b0526fae6e,3,UTF8Encoder /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:563:5,0x281636bcf900,~
code-source-info,0x37b0526fae6e,5,23073,23073,C0O23073C2O23073,,
timer-event-end,V8.CompileCode,44360
timer-event-start,V8.CompileCode,44372
code-creation,LazyCompile,12,44414,0x37b0526fafae,185,stringToCodePoints /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:464:32,0x281636bcf788,~
code-source-info,0x37b0526fafae,5,19456,19592,C0O19456C1O19484C5O19512C26O19507C57O19496C58O19507C61O19535C67O19542C76O19542C83O19535C182O19577C184O19586,,
timer-event-end,V8.CompileCode,44446
timer-event-start,V8.CompileCode,44470
code-creation,LazyCompile,12,44502,0x37b0526fb1c6,44,Stream /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:714:20,0x281636bcfc30,~
code-source-info,0x37b0526fb1c6,5,28787,28893,C0O28787C1O28810C5O28828C11O28834C17O28834C22O28823C26O28865C32O28873C38O28873C43O28892,,
timer-event-end,V8.CompileCode,44534
timer-event-start,V8.CompileCode,44566
code-creation,LazyCompile,12,44596,0x37b0526fb35e,36,read /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:721:13,0x281636bcfd00,~
code-source-info,0x37b0526fb35e,5,28981,29073,C0O28981C1O29011C7O29019C15O29028C19O29049C25O29057C31O29057C35O29063,,
timer-event-end,V8.CompileCode,44623
timer-event-start,V8.CompileCode,44632
code-creation,LazyCompile,12,44716,0x37b0526fb576,289,handler /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:564:16,0x281636bcf8a8,~
code-source-info,0x37b0526fb576,5,23108,24157,C0O23108C1O23134C3O23152C5O23148C10O23185C14O23201C15O23228C29O23232C36O23282C38O23299C39O23330C42O23353C45O23373C64O23377C71O23431C75O23458C83O23504C104O23508C111O23562C115O23589C123O23635C146O23639C153O23696C157O23723C165O23787C174O23844C184O23844C195O23793C199O23787C200O23901C211O23919C214O23913C221O23929C233O23965C234O23965C239O23952C240O24001C242O24026C245O24017C248O24011C253O24055C261O24073C264O24065C272O24055C277O24099C286O24134C288O24147,,
timer-event-end,V8.CompileCode,44784
timer-event-start,V8.CompileCode,44792
code-creation,LazyCompile,12,44816,0x37b0526fb7de,14,inRange /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:458:21,0x281636bcf6d8,~
code-source-info,0x37b0526fb7de,5,19291,19349,C0O19291C1O19315C3O19326C10O19336C13O19343,,
timer-event-end,V8.CompileCode,44839
timer-event-start,V8.CompileCode,44873
code-creation,LazyCompile,12,44908,0x37b0526fb8ee,58,dispatch shared_queue.js:182:20,0x37b0526f7e20,~
code-source-info,0x37b0526fb8ee,9,4952,5059,C0O4952C18O4991C22O4991C25O5008C31O5020C37O5025C52O5025C57O5055,,
timer-event-end,V8.CompileCode,44932
timer-event-start,V8.CompileCode,45169
code-creation,LazyCompile,12,45209,0x37b0526fba4e,48,decode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1203:20,0x281636bd1398,~
code-source-info,0x37b0526fba4e,5,47621,47732,C0O47621C1O47647C5O47670C11O47647C18O47684C24O47684C31O47705C36O47717C42O47717C47O47726,,
timer-event-end,V8.CompileCode,45239
timer-event-start,V8.CompileCode,45275
code-creation,LazyCompile,12,45384,0x37b0526fbd1e,350,decode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:778:15,0x281636bd0318,~
code-source-info,0x37b0526fbd1e
timer-event-end,V8.CompileCode,45464
timer-event-start,V8.CompileCode,45502
code-creation,LazyCompile,12,45529,0x37b0526fc0ae,15, /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:694:27,0x281636bcfae8,~
code-source-info,0x37b0526fc0ae,5,27511,27572,C0O27511C1O27534C9O27541C14O27566,,
timer-event-end,V8.CompileCode,45552
timer-event-start,V8.CompileCode,45558
code-creation,LazyCompile,12,45595,0x37b0526fc2ce,62,UTF8Decoder /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:472:20,0x281636bcf7e0,~
code-source-info,0x37b0526fc2ce,5,19636,19946,C0O19636C1O19660C2O19676C6O19693C7O19709C11O19726C12O19744C16O19761C20O19781C24O19801C28O19821C32O19863C42O19853C46O19917C56O19907C61O19945,,
timer-event-end,V8.CompileCode,45630
timer-event-start,V8.CompileCode,46168
code-creation,LazyCompile,12,46303,0x37b0526fc4d6,561,handler /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:481:16,0x281636bcf838,~
code-source-info,0x37b0526fc4d
timer-event-end,V8.CompileCode,46462
timer-event-start,V8.CompileCode,46470
code-creation,LazyCompile,12,46494,0x37b0526fc946,21,isASCIIByte /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:461:25,0x281636bcf730,~
code-source-info,0x37b0526fc946,5,19374,19424,C0O19374C1O19388C15O19395C20O19418,,
timer-event-end,V8.CompileCode,46517
timer-event-start,V8.CompileCode,47927
code-creation,LazyCompile,12,47979,0x37b0526fd2f6,182,codePointsToString /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:706:32,0x281636bcfbd8,~
code-source-info,0x37b0526fd2f6,5,28598,28748,C0O28598C1O28629C5O28658C26O28652C57O28641C58O28652C61O28689C66O28696C72O28696C105O28686C179O28733C181O28742,,
timer-event-end,V8.CompileCode,48012
timer-event-start,V8.CompileCode,48707
code-creation,LazyCompile,12,48750,0x37b0526fd6d6,78,unwrapResponse /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1211:28,0x281636bd1448,~
code-source-info,0x37b0526fd6d6,5,47897,48087,C0O47897C1O47921C8O47948C12O47970C18O47984C24O47988C30O47998C36O48002C44O47954C49O47948C50O48030C54O48035C60O48046C65O48049C68O48035C73O48078C77O48081,,
timer-event-end,V8.CompileCode,48787
timer-event-start,V8.CompileCode,48801
code-creation,LazyCompile,12,48829,0x37b0526fd83e,23,setLogDebug /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:47:25,0x281636bce0d8,~
code-source-info,0x37b0526fd83e,5,2242,2355,C0O2242C1O2268C3O2277C9O2294C13O2320C15O2330C22O2354,,
timer-event-end,V8.CompileCode,48855
timer-event-start,V8.CompileCode,48866
code-creation,LazyCompile,12,48892,0x37b0526fd966,23,_setGlobals /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4291:25,0x281636bda9e0,~
code-source-info,0x37b0526fd966,5,172347,172435,C0O172347C1O172374C7O172386C11O172402C17O172418C22O172434,,
timer-event-end,V8.CompileCode,48917
timer-event-start,V8.CompileCode,48992
code-creation,LazyCompile,12,49029,0x37b0526fdb86,37,immutableDefine /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:151:29,0x281636bceb18,~
code-source-info,0x37b0526fdb86,5,5598,5893,C0O5598C1O5766C6O5773C12O5791C20O5808C30O5773C36O5892,,
timer-event-end,V8.CompileCode,49055
timer-event-start,V8.CompileCode,49107
code-creation,LazyCompile,12,49142,0x37b0526fddae,61,setBuildInfo /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:889:26,0x281636bd0680,~
code-source-info,0x37b0526fddae,5,34753,34875,C0O34753C1O34774C5O34782C13O34791C17O34805C21O34813C29O34824C33O34840C38O34847C48O34862C54O34847C60O34874,,
timer-event-end,V8.CompileCode,49178
timer-event-start,V8.CompileCode,49202
code-creation,LazyCompile,12,49239,0x37b0526fdf5e,90,setSignals /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4106:24,0x281636bd9ee0,~
code-source-info,0x37b0526fdf5e,5,163049,163251,C0O163049C1O163062C5O163077C11O163083C19O163086C24O163111C29O163118C39O163133C49O163118C57O163192C62O163199C72O163214C82O163199C89O163250,,
timer-event-end,V8.CompileCode,49273
timer-event-start,V8.CompileCode,49381
code-creation,LazyCompile,12,49418,0x37b0526fe0e6,77,setVersions /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4128:25,0x281636bd9f58,~
code-source-info,0x37b0526fe0e6,5,163687,163902,C0O163687C1O163733C5O163741C13O163754C17O163777C21O163785C29O163796C33O163817C37O163825C45O163844C49O163865C54O163872C64O163887C70O163872C76O163901,,
timer-event-end,V8.CompileCode,49452
timer-event-start,V8.CompileCode,49480
code-creation,LazyCompile,12,49506,0x37b0526fe296,9,setPrepareStackTrace /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3627:34,0x281636bd88e0,~
code-source-info,0x37b0526fe296,5,143937,144027,C0O143937C1O143966C3O144001C8O144026,,
timer-event-end,V8.CompileCode,49529
timer-event-start,V8.CompileCode,49550
code-creation,LazyCompile,12,49582,0x37b0526fe3d6,62,setLocation /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:6961:25,0x281636be1760,~
code-source-info,0x37b0526fe3d6,5,284413,284541,C0O284413C1O284429C5O284442C13O284464C19O284460C24O284458C28O284491C33O284498C43O284518C49O284525C55O284498C61O284540,,
timer-event-end,V8.CompileCode,49614
timer-event-start,V8.CompileCode,49620
code-creation,LazyCompile,12,49670,0x37b0526fe5be,122,LocationImpl /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:6933:20,0x281636be1470,~
code-source-info,0x37b0526fe5be,5,283568,284033,C0O283568C1O283588C3O283609C7O283637C11O283650C19O283637C26O283672C28O283681C32O283712C36O283708C40O283744C44O283740C48O283776C52O283772C56O283812C60O283808C64O283850C72O283859C77O283870C81O283866C84O283846C88O283906C92O283902C96O283946C100O283942C104O283982C108O283978C112O284016C116O284012C121O284032,,
timer-event-end,V8.CompileCode,49721
timer-event-start,V8.CompileCode,49744
code-creation,LazyCompile,12,49829,0x37b0526fe9e6,246,URL /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5047:20,0x281636bdcaf8,~
code-source-info,0x37b0526fe9e6,5,205555,206742,C0O205555C1O205585C4O205608C8O205636C20O205675C26O205694C32O205718C34O205746C42O205755C47O205784C58O205790C63O205784C64O205887C70O205887C76O205911C78O205944C89O205950C94O205944C95O206020C101O206048C103O206060C109O206103C113O206136C119O206192C127O206242C135O206292C143O206342C151O206388C165O206449C171O206465C184O206420C193O206515C201O206557C211O206148C217O206630C228O206636C233O206630C234O206710C240O206710C245O206741,,
timer-event-end,V8.CompileCode,49891
timer-event-start,V8.CompileCode,49905
code-creation,LazyCompile,12,49982,0x37b0526fee06,393,parse /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4963:19,0x281636bdc6c0,~
code-source-info,0x37b0526fee06,5,202263,203065,C0O202263C1O202296C7O202306C13O202306C20O202325C22O202377C117O202364C247O202422C253O202450C257O202466C263O202466C276O202544C278O202582C286O202629C299O202684C312O202739C325O202794C338O202845C351O202890C364O202936C377O202981C390O203009C391O203042C392O203059,,
timer-event-end,V8.CompileCode,50027
timer-event-start,V8.CompileCode,50198
code-creation,LazyCompile,12,50274,0x37b0526ff2be,266,_updateSearchParams /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5079:28,0x281636bdcba8,~
code-source-info,0x37b0526ff2be,5,206770,207528,C12O206770C13O206808C19O206828C29O206849C37O206808C42O206808C44O206895C73O206881C104O206870C105O206881C108O206881C115O207021C123O207033C126O207021C128O207063C134O207076C138O207088C238O207299C244O207318C248O207488C252O207493C260O207511C265O207527,,
timer-event-end,V8.CompileCode,50323
timer-event-start,V8.CompileCode,50332
code-creation,LazyCompile,12,50362,0x37b0526ff53e,46,get search /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5185:19,0x281636bdd3e0,~
code-source-info,0x37b0526ff53e,5,210575,210742,C0O210575C1O210601C7O210608C13O210631C19O210638C27O210644C32O210670C34O210680C35O210719C41O210726C45O210732,,
timer-event-end,V8.CompileCode,50392
timer-event-start,V8.CompileCode,50401
code-creation,LazyCompile,12,50473,0x37b0526ff746,321,URLSearchParams /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5251:20,0x281636bdd7d8,~
code-source-info,0x37b0526ff746,5,212746,213504,C0O212746C13O212772C15O212784C19O212802C20O212811C24O212831C30O212884C36O212884C41O212935C42O212942C43O212969C48O212979C54O212979C67O213007C73O213007C80O213048C86O213048C91O213098C92O213105C93O213132C98O213136C106O213149C111O213177C112O213184C113O213211C115O213231C117O213220C122O213285C126O213278C130O213309C131O213316C132O213422C137O213422C143O213422C171O213408C202O213397C203O213408C206O213457C214O213473C219O213457C320O213503,,
timer-event-end,V8.CompileCode,50537
timer-event-start,V8.CompileCode,50565
code-creation,LazyCompile,12,50636,0x37b0526ffb06,331,_handleStringInitialization /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5475:36,0x281636bdde18,~
code-source-info,0x37b0526ffb06,5,220788,221535,C0O220788C1O220970C10O220970C19O220984C24O221026C34O221026C41O221086C51O221086C79O221073C110O221062C111O221073C114O221169C121O221176C126O221205C128O221271C138O221271C145O221319C156O221337C164O221351C174O221319C182O221406C188O221417C192O221424C197O221406C204O221451C215O221458C226O221484C232O221451C330O221534,,
timer-event-end,V8.CompileCode,50688
timer-event-start,V8.CompileCode,50762
code-creation,LazyCompile,12,50789,0x37b0526ffe6e,12,get hash /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5095:17,0x281636bdcc28,~
code-source-info,0x37b0526ffe6e,5,207545,207596,C0O207545C1O207574C7O207581C11O207586,,
timer-event-end,V8.CompileCode,50817
timer-event-start,V8.CompileCode,50831
code-creation,LazyCompile,12,50958,0x37b0526fffa6,35,get host /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5113:17,0x281636bdcd08,~
code-source-info,0x37b0526fffa6,5,208102,208190,C0O208102C1O208134C8O208150C18O208166C34O208180,,
timer-event-end,V8.CompileCode,50983
timer-event-start,V8.CompileCode,50990
code-creation,LazyCompile,12,51012,0x78e87f4021e,12,get hostname /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5122:21,0x281636bdcde8,~
code-source-info,0x78e87f4021e,5,208424,208479,C0O208424C1O208453C7O208460C11O208469,,
timer-event-end,V8.CompileCode,51035
timer-event-start,V8.CompileCode,51042
code-creation,LazyCompile,12,51061,0x78e87f40346,12,get port /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5164:17,0x281636bdd210,~
code-source-info,0x78e87f40346,5,209903,209954,C0O209903C1O209932C7O209939C11O209944,,
timer-event-end,V8.CompileCode,51083
timer-event-start,V8.CompileCode,51098
code-creation,LazyCompile,12,51141,0x78e87f404ee,119,get href /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5129:17,0x281636bdced8,~
code-source-info,0x78e87f404ee,5,208633,208928,C0O208633C1O208678C7O208695C13O208730C20O208746C30O208768C34O208761C58O208834C74O208847C80O208869C90O208881C100O208897C110O208911C118O208918,,
timer-event-end,V8.CompileCode,51175
timer-event-start,V8.CompileCode,51181
code-creation,LazyCompile,12,51201,0x78e87f406a6,12,get username /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5206:21,0x281636bdd4d0,~
code-source-info,0x78e87f406a6,5,211177,211232,C0O211177C1O211206C7O211213C11O211222,,
timer-event-end,V8.CompileCode,51227
timer-event-start,V8.CompileCode,51234
code-creation,LazyCompile,12,51254,0x78e87f407d6,12,get password /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5146:21,0x281636bdd030,~
code-source-info,0x78e87f407d6,5,209296,209351,C0O209296C1O209325C7O209332C11O209341,,
timer-event-end,V8.CompileCode,51277
timer-event-start,V8.CompileCode,51284
code-creation,LazyCompile,12,51304,0x78e87f4090e,20,get protocol /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5173:21,0x281636bdd2f0,~
code-source-info,0x78e87f4090e,5,210187,210248,C0O210187C1O210219C7O210226C19O210238,,
timer-event-end,V8.CompileCode,51327
timer-event-start,V8.CompileCode,51338
code-creation,LazyCompile,12,51361,0x78e87f40a4e,28,get pathname /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:5153:21,0x281636bdd120,~
code-source-info,0x78e87f40a4e,5,209509,209585,C0O209509C1O209538C7O209545C13O209557C19O209564C27O209575,,
timer-event-end,V8.CompileCode,51386
timer-event-start,V8.CompileCode,51446
code-creation,LazyCompile,12,51485,0x78e87f40bee,65,log /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:58:17,0x281636bce260,~
code-source-info,0x78e87f40bee,5,2532,2815,C3O2532C6O2552C12O2735C16O2747C22O2754C28O2762C40O2775C58O2762C64O2814,,
timer-event-end,V8.CompileCode,51513
timer-event-end,V8.Execute,51539
timer-event-end,V8.Execute,51543
timer-event-start,V8.CompileScriptMicroSeconds,52033
timer-event-start,V8.CompileCode,52048
timer-event-start,V8.CompileMicroSeconds,52085
code-creation,Script,12,52126,0x78e87f41096,151, file:///home/yankun/workspace/rust/deno/std/http/http_bench.ts:1:1,0x78e87f40f48,~
script-source,11,file:///home/yankun/workspace/rust/deno/std/http/http_bench.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nimport { serve } from "./server.ts";\nconst addr = Deno.args[1] || "127.0.0.1:4500";\nconst server = serve(addr);\nconst body = new TextEncoder().encode("Hello World");\nasync function main() {\n    console.log(`http://${addr}/`);\n    for await (const req of server) {\n        req.respond({ body });\n    }\n}\nmain();\n//# sourceMappingURL=http_bench.js.map
code-source-info,0x78e87f41096,11,0,424,C45O0C48O0C69O0C72O424C73O125C78O130C85O134C92O125C94O174C97O174C108O174C112O174C114O200C119O200C126O218C135O218C139O200C141O378C144O378C150O424,,
timer-event-end,V8.CompileMicroSeconds,52193
timer-event-end,V8.CompileCode,52196
timer-event-end,V8.CompileScriptMicroSeconds,52202
timer-event-start,V8.CompileScriptMicroSeconds,52651
timer-event-start,V8.CompileCode,52694
timer-event-start,V8.CompileMicroSeconds,53001
code-creation,Script,12,53111,0x78e87f4275e,278, file:///home/yankun/workspace/rust/deno/std/http/server.ts:1:1,0x78e87f41f78,~
script-source,12,file:///home/yankun/workspace/rust/deno/std/http/server.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nconst { listen\x2C copy\x2C toAsyncIterator } = Deno;\nimport { BufReader\x2C BufWriter\x2C UnexpectedEOFError } from "../io/bufio.ts";\nimport { TextProtoReader } from "../textproto/mod.ts";\nimport { STATUS_TEXT } from "./http_status.ts";\nimport { assert } from "../testing/asserts.ts";\nimport { collectUint8Arrays\x2C deferred\x2C MuxAsyncIterator } from "../util/async.ts";\nfunction bufWriter(w) {\n    if (w instanceof BufWriter) {\n        return w;\n    }\n    else {\n        return new BufWriter(w);\n    }\n}\nexport function setContentLength(r) {\n    if (!r.headers) {\n        r.headers = new Headers();\n    }\n    if (r.body) {\n        if (!r.headers.has("content-length")) {\n            if (r.body instanceof Uint8Array) {\n                const bodyLength = r.body.byteLength;\n                r.headers.append("Content-Length"\x2C bodyLength.toString());\n            }\n            else {\n                r.headers.append("Transfer-Encoding"\x2C "chunked");\n            }\n        }\n    }\n}\nasync function writeChunkedBody(w\x2C r) {\n    const writer = bufWriter(w);\n    const encoder = new TextEncoder();\n    for await (const chunk of toAsyncIterator(r)) {\n        if (chunk.byteLength <= 0)\n            continue;\n        const start = encoder.encode(`${chunk.byteLength.toString(16)}\\r\\n`);\n        const end = encoder.encode("\\r\\n");\n        await writer.write(start);\n        await writer.write(chunk);\n        await writer.write(end);\n    }\n    const endChunk = encoder.encode("0\\r\\n\\r\\n");\n    await writer.write(endChunk);\n}\nexport async function writeResponse(w\x2C r) {\n    const protoMajor = 1;\n    const protoMinor = 1;\n    const statusCode = r.status || 200;\n    const statusText = STATUS_TEXT.get(statusCode);\n    const writer = bufWriter(w);\n    if (!statusText) {\n        throw Error("bad status code");\n    }\n    if (!r.body) {\n        r.body = new Uint8Array();\n    }\n    let out = `HTTP/${protoMajor}.${protoMinor} ${statusCode} ${statusText}\\r\\n`;\n    setContentLength(r);\n    const headers = r.headers;\n    for (const [key\x2C value] of headers) {\n        out += `${key}: ${value}\\r\\n`;\n    }\n    out += "\\r\\n";\n    const header = new TextEncoder().encode(out);\n    const n = await writer.write(header);\n    assert(n === header.byteLength);\n    if (r.body instanceof Uint8Array) {\n        const n = await writer.write(r.body);\n        assert(n === r.body.byteLength);\n    }\n    else if (headers.has("content-length")) {\n        const bodyLength = parseInt(headers.get("content-length"));\n        const n = await copy(writer\x2C r.body);\n        assert(n === bodyLength);\n    }\n    else {\n        await writeChunkedBody(writer\x2C r.body);\n    }\n    await writer.flush();\n}\nexport class ServerRequest {\n    constructor() {\n        this.done = deferred();\n    }\n    async *bodyStream() {\n        if (this.headers.has("content-length")) {\n            const len = +this.headers.get("content-length");\n            if (Number.isNaN(len)) {\n                return new Uint8Array(0);\n            }\n            let buf = new Uint8Array(1024);\n            let rr = await this.r.read(buf);\n            let nread = rr === Deno.EOF ? 0 : rr;\n            let nreadTotal = nread;\n            while (rr !== Deno.EOF && nreadTotal < len) {\n                yield buf.subarray(0\x2C nread);\n                buf = new Uint8Array(1024);\n                rr = await this.r.read(buf);\n                nread = rr === Deno.EOF ? 0 : rr;\n                nreadTotal += nread;\n            }\n            yield buf.subarray(0\x2C nread);\n        }\n        else {\n            if (this.headers.has("transfer-encoding")) {\n                const transferEncodings = this.headers\n                    .get("transfer-encoding")\n                    .split("\x2C")\n                    .map((e) => e.trim().toLowerCase());\n                if (transferEncodings.includes("chunked")) {\n                    // Based on https://tools.ietf.org/html/rfc2616#section-19.4.6\n                    const tp = new TextProtoReader(this.r);\n                    let line = await tp.readLine();\n                    if (line === Deno.EOF)\n                        throw new UnexpectedEOFError();\n                    // TODO: handle chunk extension\n                    const [chunkSizeString] = line.split(";");\n                    let chunkSize = parseInt(chunkSizeString\x2C 16);\n                    if (Number.isNaN(chunkSize) || chunkSize < 0) {\n                        throw new Error("Invalid chunk size");\n                    }\n                    while (chunkSize > 0) {\n                        const data = new Uint8Array(chunkSize);\n                        if ((await this.r.readFull(data)) === Deno.EOF) {\n                            throw new UnexpectedEOFError();\n                        }\n                        yield data;\n                        await this.r.readLine(); // Consume \\r\\n\n                        line = await tp.readLine();\n                        if (line === Deno.EOF)\n                            throw new UnexpectedEOFError();\n                        chunkSize = parseInt(line\x2C 16);\n                    }\n                    const entityHeaders = await tp.readMIMEHeader();\n                    if (entityHeaders !== Deno.EOF) {\n                        for (const [k\x2C v] of entityHeaders) {\n                            this.headers.set(k\x2C v);\n                        }\n                    }\n                    /* Pseudo code from https://tools.ietf.org/html/rfc2616#section-19.4.6\n                    length := 0\n                    read chunk-size\x2C chunk-extension (if any) and CRLF\n                    while (chunk-size > 0) {\n                      read chunk-data and CRLF\n                      append chunk-data to entity-body\n                      length := length + chunk-size\n                      read chunk-size and CRLF\n                    }\n                    read entity-header\n                    while (entity-header not empty) {\n                      append entity-header to existing header fields\n                      read entity-header\n                    }\n                    Content-Length := length\n                    Remove "chunked" from Transfer-Encoding\n                    */\n                    return; // Must return here to avoid fall through\n                }\n                // TODO: handle other transfer-encoding types\n            }\n            // Otherwise...\n            yield new Uint8Array(0);\n        }\n    }\n    // Read the body of the request into a single Uint8Array\n    async body() {\n        return collectUint8Arrays(this.bodyStream());\n    }\n    async respond(r) {\n        // Write our response!\n        await writeResponse(this.w\x2C r);\n        // Signal that this request has been processed and the next pipelined\n        // request on the same connection can be accepted.\n        this.done.resolve();\n    }\n}\nfunction fixLength(req) {\n    const contentLength = req.headers.get("Content-Length");\n    if (contentLength) {\n        const arrClen = contentLength.split("\x2C");\n        if (arrClen.length > 1) {\n            const distinct = [...new Set(arrClen.map((e) => e.trim()))];\n            if (distinct.length > 1) {\n                throw Error("cannot contain multiple Content-Length headers");\n            }\n            else {\n                req.headers.set("Content-Length"\x2C distinct[0]);\n            }\n        }\n        const c = req.headers.get("Content-Length");\n        if (req.method === "HEAD" && c && c !== "0") {\n            throw Error("http: method cannot contain a Content-Length");\n        }\n        if (c && req.headers.has("transfer-encoding")) {\n            // A sender MUST NOT send a Content-Length header field in any message\n            // that contains a Transfer-Encoding header field.\n            // rfc: https://tools.ietf.org/html/rfc7230#section-3.3.2\n            throw new Error("http: Transfer-Encoding and Content-Length cannot be send together");\n        }\n    }\n}\n// ParseHTTPVersion parses a HTTP version string.\n// "HTTP/1.0" returns (1\x2C 0\x2C true).\n// Ported from https://github.com/golang/go/blob/f5c43b9/src/net/http/request.go#L766-L792\nexport function parseHTTPVersion(vers) {\n    switch (vers) {\n        case "HTTP/1.1":\n            return [1\x2C 1];\n        case "HTTP/1.0":\n            return [1\x2C 0];\n        default: {\n            const Big = 1000000; // arbitrary upper bound\n            const digitReg = /^\\d+$/; // test if string is only digit\n            if (!vers.startsWith("HTTP/")) {\n                break;\n            }\n            const dot = vers.indexOf(".");\n            if (dot < 0) {\n                break;\n            }\n            const majorStr = vers.substring(vers.indexOf("/") + 1\x2C dot);\n            const major = parseInt(majorStr);\n            if (!digitReg.test(majorStr) ||\n                isNaN(major) ||\n                major < 0 ||\n                major > Big) {\n                break;\n            }\n            const minorStr = vers.substring(dot + 1);\n            const minor = parseInt(minorStr);\n            if (!digitReg.test(minorStr) ||\n                isNaN(minor) ||\n                minor < 0 ||\n                minor > Big) {\n                break;\n            }\n            return [major\x2C minor];\n        }\n    }\n    throw new Error(`malformed HTTP version ${vers}`);\n}\nexport async function readRequest(conn\x2C bufr) {\n    const tp = new TextProtoReader(bufr);\n    const firstLine = await tp.readLine(); // e.g. GET /index.html HTTP/1.0\n    if (firstLine === Deno.EOF)\n        return Deno.EOF;\n    const headers = await tp.readMIMEHeader();\n    if (headers === Deno.EOF)\n        throw new UnexpectedEOFError();\n    const req = new ServerRequest();\n    req.conn = conn;\n    req.r = bufr;\n    [req.method\x2C req.url\x2C req.proto] = firstLine.split(" "\x2C 3);\n    [req.protoMinor\x2C req.protoMajor] = parseHTTPVersion(req.proto);\n    req.headers = headers;\n    fixLength(req);\n    return req;\n}\nexport class Server {\n    constructor(listener) {\n        this.listener = listener;\n        this.closing = false;\n    }\n    close() {\n        this.closing = true;\n        this.listener.close();\n    }\n    // Yields all HTTP requests on a single TCP connection.\n    async *iterateHttpRequests(conn) {\n        const bufr = new BufReader(conn);\n        const w = new BufWriter(conn);\n        let req;\n        let err;\n        while (!this.closing) {\n            try {\n                req = await readRequest(conn\x2C bufr);\n            }\n            catch (e) {\n                err = e;\n                break;\n            }\n            if (req === Deno.EOF) {\n                break;\n            }\n            req.w = w;\n            yield req;\n            // Wait for the request to be processed before we accept a new request on\n            // this connection.\n            await req.done;\n        }\n        if (req === Deno.EOF) {\n            // The connection was gracefully closed.\n        }\n        else if (err) {\n            // An error was thrown while parsing request headers.\n            try {\n                await writeResponse(req.w\x2C {\n                    status: 400\x2C\n                    body: new TextEncoder().encode(`${err.message}\\r\\n\\r\\n`)\n                });\n            }\n            catch (_) {\n                // The connection is destroyed.\n                // Ignores the error.\n            }\n        }\n        else if (this.closing) {\n            // There are more requests incoming but the server is closing.\n            // TODO(ry): send a back a HTTP 503 Service Unavailable status.\n        }\n        conn.close();\n    }\n    // Accepts a new TCP connection and yields all HTTP requests that arrive on\n    // it. When a connection is accepted\x2C it also creates a new iterator of the\n    // same kind and adds it to the request multiplexer so that another TCP\n    // connection can be accepted.\n    async *acceptConnAndIterateHttpRequests(mux) {\n        if (this.closing)\n            return;\n        // Wait for a new connection.\n        const conn = await this.listener.accept();\n        // Try to accept another connection and add it to the multiplexer.\n        mux.add(this.acceptConnAndIterateHttpRequests(mux));\n        // Yield the requests that arrive on the just-accepted connection.\n        yield* this.iterateHttpRequests(conn);\n    }\n    [Symbol.asyncIterator]() {\n        const mux = new MuxAsyncIterator();\n        mux.add(this.acceptConnAndIterateHttpRequests(mux));\n        return mux.iterate();\n    }\n}\nexport function serve(addr) {\n    // TODO(ry) Update serve to also take { hostname\x2C port }.\n    const [hostname\x2C port] = addr.split(":");\n    const listener = listen({ hostname\x2C port: Number(port) });\n    return new Server(listener);\n}\nexport async function listenAndServe(addr\x2C handler) {\n    const server = serve(addr);\n    for await (const request of server) {\n        handler(request);\n    }\n}\n//# sourceMappingURL=server.js.map
code-source-info,0x78e87f4275e,12,0,12897,C107O0C110O0C131O0C134O12897C138O117C143O83C149O91C155O97C207O2735C241O12303C246O12303C272O9937C277O12897,,
timer-event-end,V8.CompileMicroSeconds,53808
timer-event-end,V8.CompileCode,53812
timer-event-end,V8.CompileScriptMicroSeconds,53817
timer-event-start,V8.CompileScriptMicroSeconds,54641
timer-event-start,V8.CompileCode,54691
timer-event-start,V8.CompileMicroSeconds,55004
code-creation,Script,12,55107,0x78e87f43a56,413, file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:1:1,0x78e87f42ff0,~
script-source,13,file:///home/yankun/workspace/rust/deno/std/io/bufio.ts,// Based on https://github.com/golang/go/blob/891682/src/bufio/bufio.go\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\nimport { charCode\x2C copyBytes } from "./util.ts";\nimport { assert } from "../testing/asserts.ts";\nconst DEFAULT_BUF_SIZE = 4096;\nconst MIN_BUF_SIZE = 16;\nconst MAX_CONSECUTIVE_EMPTY_READS = 100;\nconst CR = charCode("\\r");\nconst LF = charCode("\\n");\nexport class BufferFullError extends Error {\n    constructor(partial) {\n        super("Buffer full");\n        this.partial = partial;\n        this.name = "BufferFullError";\n    }\n}\nexport class UnexpectedEOFError extends Error {\n    constructor() {\n        super("Unexpected EOF");\n        this.name = "UnexpectedEOFError";\n    }\n}\n/** BufReader implements buffering for a Reader object. */\nexport class BufReader {\n    constructor(rd\x2C size = DEFAULT_BUF_SIZE) {\n        this.r = 0; // buf read position.\n        this.w = 0; // buf write position.\n        this.eof = false;\n        if (size < MIN_BUF_SIZE) {\n            size = MIN_BUF_SIZE;\n        }\n        this._reset(new Uint8Array(size)\x2C rd);\n    }\n    // private lastByte: number;\n    // private lastCharSize: number;\n    /** return new BufReader unless r is BufReader */\n    static create(r\x2C size = DEFAULT_BUF_SIZE) {\n        return r instanceof BufReader ? r : new BufReader(r\x2C size);\n    }\n    /** Returns the size of the underlying buffer in bytes. */\n    size() {\n        return this.buf.byteLength;\n    }\n    buffered() {\n        return this.w - this.r;\n    }\n    // Reads a new chunk into the buffer.\n    async _fill() {\n        // Slide existing data to beginning.\n        if (this.r > 0) {\n            this.buf.copyWithin(0\x2C this.r\x2C this.w);\n            this.w -= this.r;\n            this.r = 0;\n        }\n        if (this.w >= this.buf.byteLength) {\n            throw Error("bufio: tried to fill full buffer");\n        }\n        // Read new data: try a limited number of times.\n        for (let i = MAX_CONSECUTIVE_EMPTY_READS; i > 0; i--) {\n            const rr = await this.rd.read(this.buf.subarray(this.w));\n            if (rr === Deno.EOF) {\n                this.eof = true;\n                return;\n            }\n            assert(rr >= 0\x2C "negative read");\n            this.w += rr;\n            if (rr > 0) {\n                return;\n            }\n        }\n        throw new Error(`No progress after ${MAX_CONSECUTIVE_EMPTY_READS} read() calls`);\n    }\n    /** Discards any buffered data\x2C resets all state\x2C and switches\n     * the buffered reader to read from r.\n     */\n    reset(r) {\n        this._reset(this.buf\x2C r);\n    }\n    _reset(buf\x2C rd) {\n        this.buf = buf;\n        this.rd = rd;\n        this.eof = false;\n        // this.lastByte = -1;\n        // this.lastCharSize = -1;\n    }\n    /** reads data into p.\n     * It returns the number of bytes read into p.\n     * The bytes are taken from at most one Read on the underlying Reader\x2C\n     * hence n may be less than len(p).\n     * To read exactly len(p) bytes\x2C use io.ReadFull(b\x2C p).\n     */\n    async read(p) {\n        let rr = p.byteLength;\n        if (p.byteLength === 0)\n            return rr;\n        if (this.r === this.w) {\n            if (p.byteLength >= this.buf.byteLength) {\n                // Large read\x2C empty buffer.\n                // Read directly into p to avoid copy.\n                const rr = await this.rd.read(p);\n                const nread = rr === Deno.EOF ? 0 : rr;\n                assert(nread >= 0\x2C "negative read");\n                // if (rr.nread > 0) {\n                //   this.lastByte = p[rr.nread - 1];\n                //   this.lastCharSize = -1;\n                // }\n                return rr;\n            }\n            // One read.\n            // Do not use this.fill\x2C which will loop.\n            this.r = 0;\n            this.w = 0;\n            rr = await this.rd.read(this.buf);\n            if (rr === 0 || rr === Deno.EOF)\n                return rr;\n            assert(rr >= 0\x2C "negative read");\n            this.w += rr;\n        }\n        // copy as much as we can\n        const copied = copyBytes(p\x2C this.buf.subarray(this.r\x2C this.w)\x2C 0);\n        this.r += copied;\n        // this.lastByte = this.buf[this.r - 1];\n        // this.lastCharSize = -1;\n        return copied;\n    }\n    /** reads exactly `p.length` bytes into `p`.\n     *\n     * If successful\x2C `p` is returned.\n     *\n     * If the end of the underlying stream has been reached\x2C and there are no more\n     * bytes available in the buffer\x2C `readFull()` returns `EOF` instead.\n     *\n     * An error is thrown if some bytes could be read\x2C but not enough to fill `p`\n     * entirely before the underlying stream reported an error or EOF. Any error\n     * thrown will have a `partial` property that indicates the slice of the\n     * buffer that has been successfully filled with data.\n     *\n     * Ported from https://golang.org/pkg/io/#ReadFull\n     */\n    async readFull(p) {\n        let bytesRead = 0;\n        while (bytesRead < p.length) {\n            try {\n                const rr = await this.read(p.subarray(bytesRead));\n                if (rr === Deno.EOF) {\n                    if (bytesRead === 0) {\n                        return Deno.EOF;\n                    }\n                    else {\n                        throw new UnexpectedEOFError();\n                    }\n                }\n                bytesRead += rr;\n            }\n            catch (err) {\n                err.partial = p.subarray(0\x2C bytesRead);\n                throw err;\n            }\n        }\n        return p;\n    }\n    /** Returns the next byte [0\x2C 255] or `EOF`. */\n    async readByte() {\n        while (this.r === this.w) {\n            if (this.eof)\n                return Deno.EOF;\n            await this._fill(); // buffer is empty.\n        }\n        const c = this.buf[this.r];\n        this.r++;\n        // this.lastByte = c;\n        return c;\n    }\n    /** readString() reads until the first occurrence of delim in the input\x2C\n     * returning a string containing the data up to and including the delimiter.\n     * If ReadString encounters an error before finding a delimiter\x2C\n     * it returns the data read before the error and the error itself\n     * (often io.EOF).\n     * ReadString returns err != nil if and only if the returned data does not end\n     * in\n     * delim.\n     * For simple uses\x2C a Scanner may be more convenient.\n     */\n    async readString(delim) {\n        if (delim.length !== 1)\n            throw new Error("Delimiter should be a single character");\n        const buffer = await this.readSlice(delim.charCodeAt(0));\n        return new TextDecoder().decode(buffer || undefined);\n    }\n    /** `readLine()` is a low-level line-reading primitive. Most callers should\n     * use `readString('\\n')` instead or use a Scanner.\n     *\n     * `readLine()` tries to return a single line\x2C not including the end-of-line\n     * bytes. If the line was too long for the buffer then `more` is set and the\n     * beginning of the line is returned. The rest of the line will be returned\n     * from future calls. `more` will be false when returning the last fragment\n     * of the line. The returned buffer is only valid until the next call to\n     * `readLine()`.\n     *\n     * The text returned from ReadLine does not include the line end ("\\r\\n" or\n     * "\\n").\n     *\n     * When the end of the underlying stream is reached\x2C the final bytes in the\n     * stream are returned. No indication or error is given if the input ends\n     * without a final line end. When there are no more trailing bytes to read\x2C\n     * `readLine()` returns the `EOF` symbol.\n     *\n     * Calling `unreadByte()` after `readLine()` will always unread the last byte\n     * read (possibly a character belonging to the line end) even if that byte is\n     * not part of the line returned by `readLine()`.\n     */\n    async readLine() {\n        let line;\n        try {\n            line = await this.readSlice(LF);\n        }\n        catch (err) {\n            let { partial } = err;\n            assert(partial instanceof Uint8Array\x2C "bufio: caught error from `readSlice()` without `partial` property");\n            // Don't throw if `readSlice()` failed with `BufferFullError`\x2C instead we\n            // just return whatever is available and set the `more` flag.\n            if (!(err instanceof BufferFullError)) {\n                throw err;\n            }\n            // Handle the case where "\\r\\n" straddles the buffer.\n            if (!this.eof &&\n                partial.byteLength > 0 &&\n                partial[partial.byteLength - 1] === CR) {\n                // Put the '\\r' back on buf and drop it from line.\n                // Let the next call to ReadLine check for "\\r\\n".\n                assert(this.r > 0\x2C "bufio: tried to rewind past start of buffer");\n                this.r--;\n                partial = partial.subarray(0\x2C partial.byteLength - 1);\n            }\n            return { line: partial\x2C more: !this.eof };\n        }\n        if (line === Deno.EOF) {\n            return Deno.EOF;\n        }\n        if (line.byteLength === 0) {\n            return { line\x2C more: false };\n        }\n        if (line[line.byteLength - 1] == LF) {\n            let drop = 1;\n            if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {\n                drop = 2;\n            }\n            line = line.subarray(0\x2C line.byteLength - drop);\n        }\n        return { line\x2C more: false };\n    }\n    /** `readSlice()` reads until the first occurrence of `delim` in the input\x2C\n     * returning a slice pointing at the bytes in the buffer. The bytes stop\n     * being valid at the next read.\n     *\n     * If `readSlice()` encounters an error before finding a delimiter\x2C or the\n     * buffer fills without finding a delimiter\x2C it throws an error with a\n     * `partial` property that contains the entire buffer.\n     *\n     * If `readSlice()` encounters the end of the underlying stream and there are\n     * any bytes left in the buffer\x2C the rest of the buffer is returned. In other\n     * words\x2C EOF is always treated as a delimiter. Once the buffer is empty\x2C\n     * it returns `EOF`.\n     *\n     * Because the data returned from `readSlice()` will be overwritten by the\n     * next I/O operation\x2C most clients should use `readString()` instead.\n     */\n    async readSlice(delim) {\n        let s = 0; // search start index\n        let slice;\n        while (true) {\n            // Search buffer.\n            let i = this.buf.subarray(this.r + s\x2C this.w).indexOf(delim);\n            if (i >= 0) {\n                i += s;\n                slice = this.buf.subarray(this.r\x2C this.r + i + 1);\n                this.r += i + 1;\n                break;\n            }\n            // EOF?\n            if (this.eof) {\n                if (this.r === this.w) {\n                    return Deno.EOF;\n                }\n                slice = this.buf.subarray(this.r\x2C this.w);\n                this.r = this.w;\n                break;\n            }\n            // Buffer full?\n            if (this.buffered() >= this.buf.byteLength) {\n                this.r = this.w;\n                throw new BufferFullError(this.buf);\n            }\n            s = this.w - this.r; // do not rescan area we scanned before\n            // Buffer is not full.\n            try {\n                await this._fill();\n            }\n            catch (err) {\n                err.partial = slice;\n                throw err;\n            }\n        }\n        // Handle last byte\x2C if any.\n        // const i = slice.byteLength - 1;\n        // if (i >= 0) {\n        //   this.lastByte = slice[i];\n        //   this.lastCharSize = -1\n        // }\n        return slice;\n    }\n    /** `peek()` returns the next `n` bytes without advancing the reader. The\n     * bytes stop being valid at the next read call.\n     *\n     * When the end of the underlying stream is reached\x2C but there are unread\n     * bytes left in the buffer\x2C those bytes are returned. If there are no bytes\n     * left in the buffer\x2C it returns `EOF`.\n     *\n     * If an error is encountered before `n` bytes are available\x2C `peek()` throws\n     * an error with the `partial` property set to a slice of the buffer that\n     * contains the bytes that were available before the error occurred.\n     */\n    async peek(n) {\n        if (n < 0) {\n            throw Error("negative count");\n        }\n        let avail = this.w - this.r;\n        while (avail < n && avail < this.buf.byteLength && !this.eof) {\n            try {\n                await this._fill();\n            }\n            catch (err) {\n                err.partial = this.buf.subarray(this.r\x2C this.w);\n                throw err;\n            }\n            avail = this.w - this.r;\n        }\n        if (avail === 0 && this.eof) {\n            return Deno.EOF;\n        }\n        else if (avail < n && this.eof) {\n            return this.buf.subarray(this.r\x2C this.r + avail);\n        }\n        else if (avail < n) {\n            throw new BufferFullError(this.buf.subarray(this.r\x2C this.w));\n        }\n        return this.buf.subarray(this.r\x2C this.r + n);\n    }\n}\n/** BufWriter implements buffering for an deno.Writer object.\n * If an error occurs writing to a Writer\x2C no more data will be\n * accepted and all subsequent writes\x2C and flush()\x2C will return the error.\n * After all data has been written\x2C the client should call the\n * flush() method to guarantee all data has been forwarded to\n * the underlying deno.Writer.\n */\nexport class BufWriter {\n    constructor(wr\x2C size = DEFAULT_BUF_SIZE) {\n        this.wr = wr;\n        this.n = 0;\n        this.err = null;\n        if (size <= 0) {\n            size = DEFAULT_BUF_SIZE;\n        }\n        this.buf = new Uint8Array(size);\n    }\n    /** return new BufWriter unless w is BufWriter */\n    static create(w\x2C size = DEFAULT_BUF_SIZE) {\n        return w instanceof BufWriter ? w : new BufWriter(w\x2C size);\n    }\n    /** Size returns the size of the underlying buffer in bytes. */\n    size() {\n        return this.buf.byteLength;\n    }\n    /** Discards any unflushed buffered data\x2C clears any error\x2C and\n     * resets b to write its output to w.\n     */\n    reset(w) {\n        this.err = null;\n        this.n = 0;\n        this.wr = w;\n    }\n    /** Flush writes any buffered data to the underlying io.Writer. */\n    async flush() {\n        if (this.err !== null)\n            throw this.err;\n        if (this.n === 0)\n            return;\n        let n = 0;\n        try {\n            n = await this.wr.write(this.buf.subarray(0\x2C this.n));\n        }\n        catch (e) {\n            this.err = e;\n            throw e;\n        }\n        if (n < this.n) {\n            if (n > 0) {\n                this.buf.copyWithin(0\x2C n\x2C this.n);\n                this.n -= n;\n            }\n            this.err = new Error("Short write");\n            throw this.err;\n        }\n        this.n = 0;\n    }\n    /** Returns how many bytes are unused in the buffer. */\n    available() {\n        return this.buf.byteLength - this.n;\n    }\n    /** buffered returns the number of bytes that have been written into the\n     * current buffer.\n     */\n    buffered() {\n        return this.n;\n    }\n    /** Writes the contents of p into the buffer.\n     * Returns the number of bytes written.\n     */\n    async write(p) {\n        if (this.err !== null)\n            throw this.err;\n        if (p.length === 0)\n            return 0;\n        let nn = 0;\n        let n = 0;\n        while (p.byteLength > this.available()) {\n            if (this.buffered() === 0) {\n                // Large write\x2C empty buffer.\n                // Write directly from p to avoid copy.\n                try {\n                    n = await this.wr.write(p);\n                }\n                catch (e) {\n                    this.err = e;\n                    throw e;\n                }\n            }\n            else {\n                n = copyBytes(this.buf\x2C p\x2C this.n);\n                this.n += n;\n                await this.flush();\n            }\n            nn += n;\n            p = p.subarray(n);\n        }\n        n = copyBytes(this.buf\x2C p\x2C this.n);\n        this.n += n;\n        nn += n;\n        return nn;\n    }\n}\n//# sourceMappingURL=bufio.js.map
code-source-info,0x78e87f43a56,13,0,16213,C61O0C64O0C85O0C88O16213C92O353C96O353C98O380C100O380C102O420C104O420C106O436C109O436C120O436C124O436C126O463C129O463C140O463C144O463C146O516C176O486C179O700C209O667C326O877C407O13505C412O16213,,
timer-event-end,V8.CompileMicroSeconds,55987
timer-event-end,V8.CompileCode,55990
timer-event-end,V8.CompileScriptMicroSeconds,56004
timer-event-start,V8.CompileScriptMicroSeconds,56457
timer-event-start,V8.CompileCode,56482
timer-event-start,V8.CompileMicroSeconds,56600
code-creation,Script,12,56657,0x78e87f444ae,188, file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:1:1,0x78e87f440a8,~
script-source,14,file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts,// Based on https://github.com/golang/go/blob/891682/src/net/textproto/\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\nimport { UnexpectedEOFError } from "../io/bufio.ts";\nimport { charCode } from "../io/util.ts";\nconst asciiDecoder = new TextDecoder();\nfunction str(buf) {\n    if (buf == null) {\n        return "";\n    }\n    else {\n        return asciiDecoder.decode(buf);\n    }\n}\nexport class ProtocolError extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = "ProtocolError";\n    }\n}\nexport function append(a\x2C b) {\n    if (a == null) {\n        return b;\n    }\n    else {\n        const output = new Uint8Array(a.length + b.length);\n        output.set(a\x2C 0);\n        output.set(b\x2C a.length);\n        return output;\n    }\n}\nexport class TextProtoReader {\n    constructor(r) {\n        this.r = r;\n    }\n    /** readLine() reads a single line from the TextProtoReader\x2C\n     * eliding the final \\n or \\r\\n from the returned string.\n     */\n    async readLine() {\n        const s = await this.readLineSlice();\n        if (s === Deno.EOF)\n            return Deno.EOF;\n        return str(s);\n    }\n    /** ReadMIMEHeader reads a MIME-style header from r.\n     * The header is a sequence of possibly continued Key: Value lines\n     * ending in a blank line.\n     * The returned map m maps CanonicalMIMEHeaderKey(key) to a\n     * sequence of values in the same order encountered in the input.\n     *\n     * For example\x2C consider this input:\n     *\n     *\x09My-Key: Value 1\n     *\x09Long-Key: Even\n     *\x09       Longer Value\n     *\x09My-Key: Value 2\n     *\n     * Given that input\x2C ReadMIMEHeader returns the map:\n     *\n     *\x09map[string][]string{\n     *\x09\x09"My-Key": {"Value 1"\x2C "Value 2"}\x2C\n     *\x09\x09"Long-Key": {"Even Longer Value"}\x2C\n     *\x09}\n     */\n    async readMIMEHeader() {\n        const m = new Headers();\n        let line;\n        // The first line cannot start with a leading space.\n        let buf = await this.r.peek(1);\n        if (buf === Deno.EOF) {\n            return Deno.EOF;\n        }\n        else if (buf[0] == charCode(" ") || buf[0] == charCode("\\t")) {\n            line = (await this.readLineSlice());\n        }\n        buf = await this.r.peek(1);\n        if (buf === Deno.EOF) {\n            throw new UnexpectedEOFError();\n        }\n        else if (buf[0] == charCode(" ") || buf[0] == charCode("\\t")) {\n            throw new ProtocolError(`malformed MIME header initial line: ${str(line)}`);\n        }\n        while (true) {\n            const kv = await this.readLineSlice(); // readContinuedLineSlice\n            if (kv === Deno.EOF)\n                throw new UnexpectedEOFError();\n            if (kv.byteLength === 0)\n                return m;\n            // Key ends at first colon; should not have trailing spaces\n            // but they appear in the wild\x2C violating specs\x2C so we remove\n            // them if present.\n            let i = kv.indexOf(charCode(":"));\n            if (i < 0) {\n                throw new ProtocolError(`malformed MIME header line: ${str(kv)}`);\n            }\n            let endKey = i;\n            while (endKey > 0 && kv[endKey - 1] == charCode(" ")) {\n                endKey--;\n            }\n            //let key = canonicalMIMEHeaderKey(kv.subarray(0\x2C endKey));\n            const key = str(kv.subarray(0\x2C endKey));\n            // As per RFC 7230 field-name is a token\x2C\n            // tokens consist of one or more chars.\n            // We could return a ProtocolError here\x2C\n            // but better to be liberal in what we\n            // accept\x2C so if we get an empty key\x2C skip it.\n            if (key == "") {\n                continue;\n            }\n            // Skip initial spaces in value.\n            i++; // skip colon\n            while (i < kv.byteLength &&\n                (kv[i] == charCode(" ") || kv[i] == charCode("\\t"))) {\n                i++;\n            }\n            const value = str(kv.subarray(i));\n            // In case of invalid header we swallow the error\n            // example: "Audio Mode" => invalid due to space in the key\n            try {\n                m.append(key\x2C value);\n            }\n            catch { }\n        }\n    }\n    async readLineSlice() {\n        // this.closeDot();\n        let line;\n        while (true) {\n            const r = await this.r.readLine();\n            if (r === Deno.EOF)\n                return Deno.EOF;\n            const { line: l\x2C more } = r;\n            // Avoid the copy if the first call produced a full line.\n            if (!line && !more) {\n                // TODO(ry):\n                // This skipSpace() is definitely misplaced\x2C but I don't know where it\n                // comes from nor how to fix it.\n                if (this.skipSpace(l) === 0) {\n                    return new Uint8Array(0);\n                }\n                return l;\n            }\n            // @ts-ignore\n            line = append(line\x2C l);\n            if (!more) {\n                break;\n            }\n        }\n        return line;\n    }\n    skipSpace(l) {\n        let n = 0;\n        for (let i = 0; i < l.length; i++) {\n            if (l[i] === charCode(" ") || l[i] === charCode("\\t")) {\n                continue;\n            }\n            n++;\n        }\n        return n;\n    }\n}\n//# sourceMappingURL=mod.js.map
code-source-info,0x78e87f444ae,14,0,5358,C54O0C57O0C78O0C81O5358C85O347C90O347C95O347C97O529C127O501C182O869C187O5358,,
timer-event-end,V8.CompileMicroSeconds,56977
timer-event-end,V8.CompileCode,56980
timer-event-end,V8.CompileScriptMicroSeconds,56986
timer-event-start,V8.CompileScriptMicroSeconds,57344
timer-event-start,V8.CompileCode,57372
timer-event-start,V8.CompileMicroSeconds,57525
code-creation,Script,12,57701,0x78e87f4619e,2520, file:///home/yankun/workspace/rust/deno/std/http/http_status.ts:1:1,0x78e87f45718,~
script-source,15,file:///home/yankun/workspace/rust/deno/std/http/http_status.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nexport var Status;\n(function (Status) {\n    Status[Status["Continue"] = 100] = "Continue";\n    Status[Status["SwitchingProtocols"] = 101] = "SwitchingProtocols";\n    Status[Status["Processing"] = 102] = "Processing";\n    Status[Status["OK"] = 200] = "OK";\n    Status[Status["Created"] = 201] = "Created";\n    Status[Status["Accepted"] = 202] = "Accepted";\n    Status[Status["NonAuthoritativeInfo"] = 203] = "NonAuthoritativeInfo";\n    Status[Status["NoContent"] = 204] = "NoContent";\n    Status[Status["ResetContent"] = 205] = "ResetContent";\n    Status[Status["PartialContent"] = 206] = "PartialContent";\n    Status[Status["MultiStatus"] = 207] = "MultiStatus";\n    Status[Status["AlreadyReported"] = 208] = "AlreadyReported";\n    Status[Status["IMUsed"] = 226] = "IMUsed";\n    Status[Status["MultipleChoices"] = 300] = "MultipleChoices";\n    Status[Status["MovedPermanently"] = 301] = "MovedPermanently";\n    Status[Status["Found"] = 302] = "Found";\n    Status[Status["SeeOther"] = 303] = "SeeOther";\n    Status[Status["NotModified"] = 304] = "NotModified";\n    Status[Status["UseProxy"] = 305] = "UseProxy";\n    // _                       = 306\x2C // RFC 7231\x2C 6.4.6 (Unused)\n    Status[Status["TemporaryRedirect"] = 307] = "TemporaryRedirect";\n    Status[Status["PermanentRedirect"] = 308] = "PermanentRedirect";\n    Status[Status["BadRequest"] = 400] = "BadRequest";\n    Status[Status["Unauthorized"] = 401] = "Unauthorized";\n    Status[Status["PaymentRequired"] = 402] = "PaymentRequired";\n    Status[Status["Forbidden"] = 403] = "Forbidden";\n    Status[Status["NotFound"] = 404] = "NotFound";\n    Status[Status["MethodNotAllowed"] = 405] = "MethodNotAllowed";\n    Status[Status["NotAcceptable"] = 406] = "NotAcceptable";\n    Status[Status["ProxyAuthRequired"] = 407] = "ProxyAuthRequired";\n    Status[Status["RequestTimeout"] = 408] = "RequestTimeout";\n    Status[Status["Conflict"] = 409] = "Conflict";\n    Status[Status["Gone"] = 410] = "Gone";\n    Status[Status["LengthRequired"] = 411] = "LengthRequired";\n    Status[Status["PreconditionFailed"] = 412] = "PreconditionFailed";\n    Status[Status["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";\n    Status[Status["RequestURITooLong"] = 414] = "RequestURITooLong";\n    Status[Status["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";\n    Status[Status["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";\n    Status[Status["ExpectationFailed"] = 417] = "ExpectationFailed";\n    Status[Status["Teapot"] = 418] = "Teapot";\n    Status[Status["MisdirectedRequest"] = 421] = "MisdirectedRequest";\n    Status[Status["UnprocessableEntity"] = 422] = "UnprocessableEntity";\n    Status[Status["Locked"] = 423] = "Locked";\n    Status[Status["FailedDependency"] = 424] = "FailedDependency";\n    Status[Status["UpgradeRequired"] = 426] = "UpgradeRequired";\n    Status[Status["PreconditionRequired"] = 428] = "PreconditionRequired";\n    Status[Status["TooManyRequests"] = 429] = "TooManyRequests";\n    Status[Status["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";\n    Status[Status["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";\n    Status[Status["InternalServerError"] = 500] = "InternalServerError";\n    Status[Status["NotImplemented"] = 501] = "NotImplemented";\n    Status[Status["BadGateway"] = 502] = "BadGateway";\n    Status[Status["ServiceUnavailable"] = 503] = "ServiceUnavailable";\n    Status[Status["GatewayTimeout"] = 504] = "GatewayTimeout";\n    Status[Status["HTTPVersionNotSupported"] = 505] = "HTTPVersionNotSupported";\n    Status[Status["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";\n    Status[Status["InsufficientStorage"] = 507] = "InsufficientStorage";\n    Status[Status["LoopDetected"] = 508] = "LoopDetected";\n    Status[Status["NotExtended"] = 510] = "NotExtended";\n    Status[Status["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired"; // RFC 6585\x2C 6\n})(Status || (Status = {}));\nexport const STATUS_TEXT = new Map([\n    [Status.Continue\x2C "Continue"]\x2C\n    [Status.SwitchingProtocols\x2C "Switching Protocols"]\x2C\n    [Status.Processing\x2C "Processing"]\x2C\n    [Status.OK\x2C "OK"]\x2C\n    [Status.Created\x2C "Created"]\x2C\n    [Status.Accepted\x2C "Accepted"]\x2C\n    [Status.NonAuthoritativeInfo\x2C "Non-Authoritative Information"]\x2C\n    [Status.NoContent\x2C "No Content"]\x2C\n    [Status.ResetContent\x2C "Reset Content"]\x2C\n    [Status.PartialContent\x2C "Partial Content"]\x2C\n    [Status.MultiStatus\x2C "Multi-Status"]\x2C\n    [Status.AlreadyReported\x2C "Already Reported"]\x2C\n    [Status.IMUsed\x2C "IM Used"]\x2C\n    [Status.MultipleChoices\x2C "Multiple Choices"]\x2C\n    [Status.MovedPermanently\x2C "Moved Permanently"]\x2C\n    [Status.Found\x2C "Found"]\x2C\n    [Status.SeeOther\x2C "See Other"]\x2C\n    [Status.NotModified\x2C "Not Modified"]\x2C\n    [Status.UseProxy\x2C "Use Proxy"]\x2C\n    [Status.TemporaryRedirect\x2C "Temporary Redirect"]\x2C\n    [Status.PermanentRedirect\x2C "Permanent Redirect"]\x2C\n    [Status.BadRequest\x2C "Bad Request"]\x2C\n    [Status.Unauthorized\x2C "Unauthorized"]\x2C\n    [Status.PaymentRequired\x2C "Payment Required"]\x2C\n    [Status.Forbidden\x2C "Forbidden"]\x2C\n    [Status.NotFound\x2C "Not Found"]\x2C\n    [Status.MethodNotAllowed\x2C "Method Not Allowed"]\x2C\n    [Status.NotAcceptable\x2C "Not Acceptable"]\x2C\n    [Status.ProxyAuthRequired\x2C "Proxy Authentication Required"]\x2C\n    [Status.RequestTimeout\x2C "Request Timeout"]\x2C\n    [Status.Conflict\x2C "Conflict"]\x2C\n    [Status.Gone\x2C "Gone"]\x2C\n    [Status.LengthRequired\x2C "Length Required"]\x2C\n    [Status.PreconditionFailed\x2C "Precondition Failed"]\x2C\n    [Status.RequestEntityTooLarge\x2C "Request Entity Too Large"]\x2C\n    [Status.RequestURITooLong\x2C "Request URI Too Long"]\x2C\n    [Status.UnsupportedMediaType\x2C "Unsupported Media Type"]\x2C\n    [Status.RequestedRangeNotSatisfiable\x2C "Requested Range Not Satisfiable"]\x2C\n    [Status.ExpectationFailed\x2C "Expectation Failed"]\x2C\n    [Status.Teapot\x2C "I'm a teapot"]\x2C\n    [Status.MisdirectedRequest\x2C "Misdirected Request"]\x2C\n    [Status.UnprocessableEntity\x2C "Unprocessable Entity"]\x2C\n    [Status.Locked\x2C "Locked"]\x2C\n    [Status.FailedDependency\x2C "Failed Dependency"]\x2C\n    [Status.UpgradeRequired\x2C "Upgrade Required"]\x2C\n    [Status.PreconditionRequired\x2C "Precondition Required"]\x2C\n    [Status.TooManyRequests\x2C "Too Many Requests"]\x2C\n    [Status.RequestHeaderFieldsTooLarge\x2C "Request Header Fields Too Large"]\x2C\n    [Status.UnavailableForLegalReasons\x2C "Unavailable For Legal Reasons"]\x2C\n    [Status.InternalServerError\x2C "Internal Server Error"]\x2C\n    [Status.NotImplemented\x2C "Not Implemented"]\x2C\n    [Status.BadGateway\x2C "Bad Gateway"]\x2C\n    [Status.ServiceUnavailable\x2C "Service Unavailable"]\x2C\n    [Status.GatewayTimeout\x2C "Gateway Timeout"]\x2C\n    [Status.HTTPVersionNotSupported\x2C "HTTP Version Not Supported"]\x2C\n    [Status.VariantAlsoNegotiates\x2C "Variant Also Negotiates"]\x2C\n    [Status.InsufficientStorage\x2C "Insufficient Storage"]\x2C\n    [Status.LoopDetected\x2C "Loop Detected"]\x2C\n    [Status.NotExtended\x2C "Not Extended"]\x2C\n    [Status.NetworkAuthenticationRequired\x2C "Network Authentication Required"]\n]);\n//# sourceMappingURL=http_status.js.map
code-source-info,0x78e87f4619e
code-creation,Script,12,58300,0x78e87f46f66,957, file:///home/yankun/workspace/rust/deno/std/http/http_status.ts:3:11,0x78e87f45758,~
code-source-info,0x78e87f46f
timer-event-end,V8.CompileMicroSeconds,58508
timer-event-end,V8.CompileCode,58511
timer-event-end,V8.CompileScriptMicroSeconds,58519
timer-event-start,V8.CompileScriptMicroSeconds,58748
timer-event-start,V8.CompileCode,58781
timer-event-start,V8.CompileMicroSeconds,59020
code-creation,Script,12,59103,0x78e87f488ae,223, file:///home/yankun/workspace/rust/deno/std/testing/asserts.ts:1:1,0x78e87f48108,~
script-source,16,file:///home/yankun/workspace/rust/deno/std/testing/asserts.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nimport { red\x2C green\x2C white\x2C gray\x2C bold } from "../fmt/colors.ts";\nimport diff\x2C { DiffType } from "./diff.ts";\nimport { format } from "./format.ts";\nconst CAN_NOT_DISPLAY = "[Cannot display]";\nexport class AssertionError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = "AssertionError";\n    }\n}\nfunction createStr(v) {\n    try {\n        return format(v);\n    }\n    catch (e) {\n        return red(CAN_NOT_DISPLAY);\n    }\n}\nfunction createColor(diffType) {\n    switch (diffType) {\n        case DiffType.added:\n            return (s) => green(bold(s));\n        case DiffType.removed:\n            return (s) => red(bold(s));\n        default:\n            return white;\n    }\n}\nfunction createSign(diffType) {\n    switch (diffType) {\n        case DiffType.added:\n            return "+   ";\n        case DiffType.removed:\n            return "-   ";\n        default:\n            return "    ";\n    }\n}\nfunction buildMessage(diffResult) {\n    const messages = [];\n    messages.push("");\n    messages.push("");\n    messages.push(`    ${gray(bold("[Diff]"))} ${red(bold("Left"))} / ${green(bold("Right"))}`);\n    messages.push("");\n    messages.push("");\n    diffResult.forEach((result) => {\n        const c = createColor(result.type);\n        messages.push(c(`${createSign(result.type)}${result.value}`));\n    });\n    messages.push("");\n    return messages;\n}\nexport function equal(c\x2C d) {\n    const seen = new Map();\n    return (function compare(a\x2C b) {\n        if (a && a instanceof Set && b && b instanceof Set) {\n            if (a.size !== b.size) {\n                return false;\n            }\n            for (const item of b) {\n                if (!a.has(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        // Have to render RegExp & Date for string comparison\n        // unless it's mistreated as object\n        if (a &&\n            b &&\n            ((a instanceof RegExp && b instanceof RegExp) ||\n                (a instanceof Date && b instanceof Date))) {\n            return String(a) === String(b);\n        }\n        if (Object.is(a\x2C b)) {\n            return true;\n        }\n        if (a && typeof a === "object" && b && typeof b === "object") {\n            if (seen.get(a) === b) {\n                return true;\n            }\n            if (Object.keys(a || {}).length !== Object.keys(b || {}).length) {\n                return false;\n            }\n            const merged = { ...a\x2C ...b };\n            for (const key in merged) {\n                if (!compare(a && a[key]\x2C b && b[key])) {\n                    return false;\n                }\n            }\n            seen.set(a\x2C b);\n            return true;\n        }\n        return false;\n    })(c\x2C d);\n}\n/** Make an assertion\x2C if not `true`\x2C then throw. */\nexport function assert(expr\x2C msg = "") {\n    if (!expr) {\n        throw new AssertionError(msg);\n    }\n}\n/**\n * Make an assertion that `actual` and `expected` are equal\x2C deeply. If not\n * deeply equal\x2C then throw.\n */\nexport function assertEquals(actual\x2C expected\x2C msg) {\n    if (equal(actual\x2C expected)) {\n        return;\n    }\n    let message = "";\n    const actualString = createStr(actual);\n    const expectedString = createStr(expected);\n    try {\n        const diffResult = diff(actualString.split("\\n")\x2C expectedString.split("\\n"));\n        message = buildMessage(diffResult).join("\\n");\n    }\n    catch (e) {\n        message = `\\n${red(CAN_NOT_DISPLAY)} + \\n\\n`;\n    }\n    if (msg) {\n        message = msg;\n    }\n    throw new AssertionError(message);\n}\n/**\n * Make an assertion that `actual` and `expected` are not equal\x2C deeply.\n * If not then throw.\n */\nexport function assertNotEquals(actual\x2C expected\x2C msg) {\n    if (!equal(actual\x2C expected)) {\n        return;\n    }\n    let actualString;\n    let expectedString;\n    try {\n        actualString = String(actual);\n    }\n    catch (e) {\n        actualString = "[Cannot display]";\n    }\n    try {\n        expectedString = String(expected);\n    }\n    catch (e) {\n        expectedString = "[Cannot display]";\n    }\n    if (!msg) {\n        msg = `actual: ${actualString} expected: ${expectedString}`;\n    }\n    throw new AssertionError(msg);\n}\n/**\n * Make an assertion that `actual` and `expected` are strictly equal.  If\n * not then throw.\n */\nexport function assertStrictEq(actual\x2C expected\x2C msg) {\n    if (actual !== expected) {\n        let actualString;\n        let expectedString;\n        try {\n            actualString = String(actual);\n        }\n        catch (e) {\n            actualString = "[Cannot display]";\n        }\n        try {\n            expectedString = String(expected);\n        }\n        catch (e) {\n            expectedString = "[Cannot display]";\n        }\n        if (!msg) {\n            msg = `actual: ${actualString} expected: ${expectedString}`;\n        }\n        throw new AssertionError(msg);\n    }\n}\n/**\n * Make an assertion that actual contains expected. If not\n * then thrown.\n */\nexport function assertStrContains(actual\x2C expected\x2C msg) {\n    if (!actual.includes(expected)) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to contains: "${expected}"`;\n        }\n        throw new AssertionError(msg);\n    }\n}\n/**\n * Make an assertion that `actual` contains the `expected` values\n * If not then thrown.\n */\nexport function assertArrayContains(actual\x2C expected\x2C msg) {\n    const missing = [];\n    for (let i = 0; i < expected.length; i++) {\n        let found = false;\n        for (let j = 0; j < actual.length; j++) {\n            if (equal(expected[i]\x2C actual[j])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            missing.push(expected[i]);\n        }\n    }\n    if (missing.length === 0) {\n        return;\n    }\n    if (!msg) {\n        msg = `actual: "${actual}" expected to contains: "${expected}"`;\n        msg += "\\n";\n        msg += `missing: ${missing}`;\n    }\n    throw new AssertionError(msg);\n}\n/**\n * Make an assertion that `actual` match RegExp `expected`. If not\n * then thrown\n */\nexport function assertMatch(actual\x2C expected\x2C msg) {\n    if (!expected.test(actual)) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to match: "${expected}"`;\n        }\n        throw new AssertionError(msg);\n    }\n}\n/**\n * Forcefully throws a failed assertion\n */\nexport function fail(msg) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    assert(false\x2C `Failed assertion${msg ? `: ${msg}` : "."}`);\n}\n/** Executes a function\x2C expecting it to throw.  If it does not\x2C then it\n * throws.  An error class and a string that should be included in the\n * error message can also be asserted.\n */\nexport function assertThrows(fn\x2C ErrorClass\x2C msgIncludes = ""\x2C msg) {\n    let doesThrow = false;\n    try {\n        fn();\n    }\n    catch (e) {\n        if (ErrorClass && !(Object.getPrototypeOf(e) === ErrorClass.prototype)) {\n            msg = `Expected error to be instance of "${ErrorClass.name}"${msg ? `: ${msg}` : "."}`;\n            throw new AssertionError(msg);\n        }\n        if (msgIncludes && !e.message.includes(msgIncludes)) {\n            msg = `Expected error message to include "${msgIncludes}"\x2C but got "${e.message}"${msg ? `: ${msg}` : "."}`;\n            throw new AssertionError(msg);\n        }\n        doesThrow = true;\n    }\n    if (!doesThrow) {\n        msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n}\nexport async function assertThrowsAsync(fn\x2C ErrorClass\x2C msgIncludes = ""\x2C msg) {\n    let doesThrow = false;\n    try {\n        await fn();\n    }\n    catch (e) {\n        if (ErrorClass && !(Object.getPrototypeOf(e) === ErrorClass.prototype)) {\n            msg = `Expected error to be instance of "${ErrorClass.name}"${msg ? `: ${msg}` : "."}`;\n            throw new AssertionError(msg);\n        }\n        if (msgIncludes && !e.message.includes(msgIncludes)) {\n            msg = `Expected error message to include "${msgIncludes}"\x2C but got "${e.message}"${msg ? `: ${msg}` : "."}`;\n            throw new AssertionError(msg);\n        }\n        doesThrow = true;\n    }\n    if (!doesThrow) {\n        msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n}\n/** Use this to stub out methods that will throw when invoked. */\nexport function unimplemented(msg) {\n    throw new AssertionError(msg || "unimplemented");\n}\n/** Use this to assert unreachable code. */\nexport function unreachable() {\n    throw new AssertionError("unreachable");\n}\n//# sourceMappingURL=asserts.js.map
code-source-info,0x78e87f488ae,16,0,8700,C152O0C155O0C176O0C179O8700C183O247C185O247C187O303C217O274C222O8700,,
timer-event-end,V8.CompileMicroSeconds,59597
timer-event-end,V8.CompileCode,59600
timer-event-end,V8.CompileScriptMicroSeconds,59605
timer-event-start,V8.CompileScriptMicroSeconds,60151
timer-event-start,V8.CompileCode,60173
timer-event-start,V8.CompileMicroSeconds,60249
code-creation,Script,12,60300,0x78e87f490ce,154, file:///home/yankun/workspace/rust/deno/std/util/async.ts:1:1,0x78e87f48ce8,~
script-source,17,file:///home/yankun/workspace/rust/deno/std/util/async.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n/** Creates a Promise with the `reject` and `resolve` functions\n * placed as methods on the promise object itself. It allows you to do:\n *\n *     const p = deferred<number>();\n *     // ...\n *     p.resolve(42);\n */\nexport function deferred() {\n    let methods;\n    const promise = new Promise((resolve\x2C reject) => {\n        methods = { resolve\x2C reject };\n    });\n    return Object.assign(promise\x2C methods);\n}\n/** The MuxAsyncIterator class multiplexes multiple async iterators into a\n * single stream. It currently makes a few assumptions:\n * - The iterators do not throw.\n * - The final result (the value returned and not yielded from the iterator)\n *   does not matter; if there is any\x2C it is discarded.\n */\nexport class MuxAsyncIterator {\n    constructor() {\n        this.iteratorCount = 0;\n        this.yields = [];\n        this.signal = deferred();\n    }\n    add(iterator) {\n        ++this.iteratorCount;\n        this.callIteratorNext(iterator);\n    }\n    async callIteratorNext(iterator) {\n        const { value\x2C done } = await iterator.next();\n        if (done) {\n            --this.iteratorCount;\n        }\n        else {\n            this.yields.push({ iterator\x2C value });\n        }\n        this.signal.resolve();\n    }\n    async *iterate() {\n        while (this.iteratorCount > 0) {\n            // Sleep until any of the wrapped iterators yields.\n            await this.signal;\n            // Note that while we're looping over `yields`\x2C new items may be added.\n            for (let i = 0; i < this.yields.length; i++) {\n                const { iterator\x2C value } = this.yields[i];\n                yield value;\n                this.callIteratorNext(iterator);\n            }\n            // Clear the `yields` list and reset the `signal` promise.\n            this.yields.length = 0;\n            this.signal = deferred();\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n}\n/** Collects all Uint8Arrays from an AsyncIterable and retuns a single\n * Uint8Array with the concatenated contents of all the collected arrays.\n */\nexport async function collectUint8Arrays(it) {\n    const chunks = [];\n    let length = 0;\n    for await (const chunk of it) {\n        chunks.push(chunk);\n        length += chunk.length;\n    }\n    if (chunks.length === 1) {\n        // No need to copy.\n        return chunks[0];\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk\x2C offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\n// Delays the given milliseconds and resolves.\nexport function delay(ms) {\n    return new Promise((res) => setTimeout(() => {\n        res();\n    }\x2C ms));\n}\n//# sourceMappingURL=async.js.map
code-source-info,0x78e87f490ce,17,0,2810,C55O0C58O0C79O0C82O2810C117O1931C122O1931C148O793C153O2810,,
timer-event-end,V8.CompileMicroSeconds,60475
timer-event-end,V8.CompileCode,60478
timer-event-end,V8.CompileScriptMicroSeconds,60484
timer-event-start,V8.CompileScriptMicroSeconds,60696
timer-event-start,V8.CompileCode,60711
timer-event-start,V8.CompileMicroSeconds,60762
code-creation,Script,12,60804,0x78e87f497f6,135, file:///home/yankun/workspace/rust/deno/std/io/util.ts:1:1,0x78e87f495a0,~
script-source,18,file:///home/yankun/workspace/rust/deno/std/io/util.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nconst { Buffer\x2C mkdir\x2C open } = Deno;\nimport { encode } from "../strings/mod.ts";\nimport * as path from "../fs/path.ts";\n// `off` is the offset into `dst` where it will at which to begin writing values\n// from `src`.\n// Returns the number of bytes copied.\nexport function copyBytes(dst\x2C src\x2C off = 0) {\n    off = Math.max(0\x2C Math.min(off\x2C dst.byteLength));\n    const r = dst.byteLength - off;\n    if (src.byteLength > r) {\n        src = src.subarray(0\x2C r);\n    }\n    dst.set(src\x2C off);\n    return src.byteLength;\n}\nexport function charCode(s) {\n    return s.charCodeAt(0);\n}\nexport function stringsReader(s) {\n    return new Buffer(encode(s).buffer);\n}\n/** Create or open a temporal file at specified directory with prefix and\n *  postfix\n * */\nexport async function tempFile(dir\x2C opts = { prefix: ""\x2C postfix: "" }) {\n    const r = Math.floor(Math.random() * 1000000);\n    const filepath = path.resolve(`${dir}/${opts.prefix || ""}${r}${opts.postfix || ""}`);\n    await mkdir(path.dirname(filepath)\x2C true);\n    const file = await open(filepath\x2C "a");\n    return { file\x2C filepath };\n}\n//# sourceMappingURL=util.js.map
code-source-info,0x78e87f497f6,18,0,1192,C78O0C81O0C102O0C105O1192C109O107C114O83C120O91C126O98C134O1192,,
timer-event-end,V8.CompileMicroSeconds,60901
timer-event-end,V8.CompileCode,60905
timer-event-end,V8.CompileScriptMicroSeconds,60910
timer-event-start,V8.CompileScriptMicroSeconds,61343
timer-event-start,V8.CompileCode,61362
timer-event-start,V8.CompileMicroSeconds,61471
code-creation,Script,12,61545,0x78e87f4ab2e,287, file:///home/yankun/workspace/rust/deno/std/fmt/colors.ts:1:1,0x78e87f49f88,~
script-source,19,file:///home/yankun/workspace/rust/deno/std/fmt/colors.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n/**\n * A module to print ANSI terminal colors. Inspired by chalk\x2C kleur\x2C and colors\n * on npm.\n *\n * ```\n * import { bgBlue\x2C red\x2C bold } from "https://deno.land/std/fmt/colors.ts";\n * console.log(bgBlue(red(bold("Hello world!"))));\n * ```\n *\n * This module supports `NO_COLOR` environmental variable disabling any coloring\n * if `NO_COLOR` is set.\n */\nconst { noColor } = Deno;\nlet enabled = !noColor;\nexport function setEnabled(value) {\n    if (noColor) {\n        return;\n    }\n    enabled = value;\n}\nexport function getEnabled() {\n    return enabled;\n}\nfunction code(open\x2C close) {\n    return {\n        open: `\\x1b[${open}m`\x2C\n        close: `\\x1b[${close}m`\x2C\n        regexp: new RegExp(`\\\\x1b\\\\[${close}m`\x2C "g")\n    };\n}\nfunction run(str\x2C code) {\n    return enabled\n        ? `${code.open}${str.replace(code.regexp\x2C code.open)}${code.close}`\n        : str;\n}\nexport function reset(str) {\n    return run(str\x2C code(0\x2C 0));\n}\nexport function bold(str) {\n    return run(str\x2C code(1\x2C 22));\n}\nexport function dim(str) {\n    return run(str\x2C code(2\x2C 22));\n}\nexport function italic(str) {\n    return run(str\x2C code(3\x2C 23));\n}\nexport function underline(str) {\n    return run(str\x2C code(4\x2C 24));\n}\nexport function inverse(str) {\n    return run(str\x2C code(7\x2C 27));\n}\nexport function hidden(str) {\n    return run(str\x2C code(8\x2C 28));\n}\nexport function strikethrough(str) {\n    return run(str\x2C code(9\x2C 29));\n}\nexport function black(str) {\n    return run(str\x2C code(30\x2C 39));\n}\nexport function red(str) {\n    return run(str\x2C code(31\x2C 39));\n}\nexport function green(str) {\n    return run(str\x2C code(32\x2C 39));\n}\nexport function yellow(str) {\n    return run(str\x2C code(33\x2C 39));\n}\nexport function blue(str) {\n    return run(str\x2C code(34\x2C 39));\n}\nexport function magenta(str) {\n    return run(str\x2C code(35\x2C 39));\n}\nexport function cyan(str) {\n    return run(str\x2C code(36\x2C 39));\n}\nexport function white(str) {\n    return run(str\x2C code(37\x2C 39));\n}\nexport function gray(str) {\n    return run(str\x2C code(90\x2C 39));\n}\nexport function bgBlack(str) {\n    return run(str\x2C code(40\x2C 49));\n}\nexport function bgRed(str) {\n    return run(str\x2C code(41\x2C 49));\n}\nexport function bgGreen(str) {\n    return run(str\x2C code(42\x2C 49));\n}\nexport function bgYellow(str) {\n    return run(str\x2C code(43\x2C 49));\n}\nexport function bgBlue(str) {\n    return run(str\x2C code(44\x2C 49));\n}\nexport function bgMagenta(str) {\n    return run(str\x2C code(45\x2C 49));\n}\nexport function bgCyan(str) {\n    return run(str\x2C code(46\x2C 49));\n}\nexport function bgWhite(str) {\n    return run(str\x2C code(47\x2C 49));\n}\n//# sourceMappingURL=colors.js.map
code-source-info,0x78e87f4ab2e,19,0,2637,C237O0C240O0C261O0C264O2637C268O447C273O435C279O467C282O467C286O2637,,
timer-event-end,V8.CompileMicroSeconds,61726
timer-event-end,V8.CompileCode,61729
timer-event-end,V8.CompileScriptMicroSeconds,61736
timer-event-start,V8.CompileScriptMicroSeconds,61929
timer-event-start,V8.CompileCode,61953
timer-event-start,V8.CompileMicroSeconds,62137
code-creation,Script,12,62187,0x78e87f4b60e,121, file:///home/yankun/workspace/rust/deno/std/testing/diff.ts:1:1,0x78e87f4b1d8,~
script-source,20,file:///home/yankun/workspace/rust/deno/std/testing/diff.ts,export var DiffType;\n(function (DiffType) {\n    DiffType["removed"] = "removed";\n    DiffType["common"] = "common";\n    DiffType["added"] = "added";\n})(DiffType || (DiffType = {}));\nconst REMOVED = 1;\nconst COMMON = 2;\nconst ADDED = 3;\nfunction createCommon(A\x2C B\x2C reverse) {\n    const common = [];\n    if (A.length === 0 || B.length === 0)\n        return [];\n    for (let i = 0; i < Math.min(A.length\x2C B.length); i += 1) {\n        if (A[reverse ? A.length - i - 1 : i] === B[reverse ? B.length - i - 1 : i]) {\n            common.push(A[reverse ? A.length - i - 1 : i]);\n        }\n        else {\n            return common;\n        }\n    }\n    return common;\n}\nexport default function diff(A\x2C B) {\n    const prefixCommon = createCommon(A\x2C B);\n    const suffixCommon = createCommon(A.slice(prefixCommon.length)\x2C B.slice(prefixCommon.length)\x2C true).reverse();\n    A = suffixCommon.length\n        ? A.slice(prefixCommon.length\x2C -suffixCommon.length)\n        : A.slice(prefixCommon.length);\n    B = suffixCommon.length\n        ? B.slice(prefixCommon.length\x2C -suffixCommon.length)\n        : B.slice(prefixCommon.length);\n    const swapped = B.length > A.length;\n    [A\x2C B] = swapped ? [B\x2C A] : [A\x2C B];\n    const M = A.length;\n    const N = B.length;\n    if (!M && !N && !suffixCommon.length && !prefixCommon.length)\n        return [];\n    if (!N) {\n        return [\n            ...prefixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n            ...A.map((a) => ({\n                type: swapped ? DiffType.added : DiffType.removed\x2C\n                value: a\n            }))\x2C\n            ...suffixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\n        ];\n    }\n    const offset = N;\n    const delta = M - N;\n    const size = M + N + 1;\n    const fp = new Array(size).fill({ y: -1 });\n    /**\n     * INFO:\n     * This buffer is used to save memory and improve performance.\n     * The first half is used to save route and last half is used to save diff\n     * type.\n     * This is because\x2C when I kept new uint8array area to save type\x2Cperformance\n     * worsened.\n     */\n    const routes = new Uint32Array((M * N + size + 1) * 2);\n    const diffTypesPtrOffset = routes.length / 2;\n    let ptr = 0;\n    let p = -1;\n    function backTrace(A\x2C B\x2C current\x2C swapped) {\n        const M = A.length;\n        const N = B.length;\n        const result = [];\n        let a = M - 1;\n        let b = N - 1;\n        let j = routes[current.id];\n        let type = routes[current.id + diffTypesPtrOffset];\n        while (true) {\n            if (!j && !type)\n                break;\n            const prev = j;\n            if (type === REMOVED) {\n                result.unshift({\n                    type: swapped ? DiffType.removed : DiffType.added\x2C\n                    value: B[b]\n                });\n                b -= 1;\n            }\n            else if (type === ADDED) {\n                result.unshift({\n                    type: swapped ? DiffType.added : DiffType.removed\x2C\n                    value: A[a]\n                });\n                a -= 1;\n            }\n            else {\n                result.unshift({ type: DiffType.common\x2C value: A[a] });\n                a -= 1;\n                b -= 1;\n            }\n            j = routes[prev];\n            type = routes[prev + diffTypesPtrOffset];\n        }\n        return result;\n    }\n    function createFP(slide\x2C down\x2C k\x2C M) {\n        if (slide && slide.y === -1 && (down && down.y === -1))\n            return { y: 0\x2C id: 0 };\n        if ((down && down.y === -1) ||\n            k === M ||\n            (slide && slide.y) > (down && down.y) + 1) {\n            const prev = slide.id;\n            ptr++;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = ADDED;\n            return { y: slide.y\x2C id: ptr };\n        }\n        else {\n            const prev = down.id;\n            ptr++;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = REMOVED;\n            return { y: down.y + 1\x2C id: ptr };\n        }\n    }\n    function snake(k\x2C slide\x2C down\x2C _offset\x2C A\x2C B) {\n        const M = A.length;\n        const N = B.length;\n        if (k < -N || M < k)\n            return { y: -1\x2C id: -1 };\n        const fp = createFP(slide\x2C down\x2C k\x2C M);\n        while (fp.y + k < M && fp.y < N && A[fp.y + k] === B[fp.y]) {\n            const prev = fp.id;\n            ptr++;\n            fp.id = ptr;\n            fp.y += 1;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = COMMON;\n        }\n        return fp;\n    }\n    while (fp[delta + offset].y < N) {\n        p = p + 1;\n        for (let k = -p; k < delta; ++k) {\n            fp[k + offset] = snake(k\x2C fp[k - 1 + offset]\x2C fp[k + 1 + offset]\x2C offset\x2C A\x2C B);\n        }\n        for (let k = delta + p; k > delta; --k) {\n            fp[k + offset] = snake(k\x2C fp[k - 1 + offset]\x2C fp[k + 1 + offset]\x2C offset\x2C A\x2C B);\n        }\n        fp[delta + offset] = snake(delta\x2C fp[delta - 1 + offset]\x2C fp[delta + 1 + offset]\x2C offset\x2C A\x2C B);\n    }\n    return [\n        ...prefixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n        ...backTrace(A\x2C B\x2C fp[delta + offset]\x2C swapped)\x2C\n        ...suffixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\n    ];\n}\n//# sourceMappingURL=diff.js.map
code-source-info,0x78e87f4b60e,20,0,5258,C52O0C55O0C76O0C79O5258C80O21C89O152C95O174C100O151C106O198C108O198C110O216C112O216C114O233C116O233C120O5258,,
code-creation,Script,12,62509,0x78e87f4b73e,21, file:///home/yankun/workspace/rust/deno/std/testing/diff.ts:2:11,0x78e87f4b540,~
code-source-info,0x78e87f4b73e,20,31,150,C0O31C1O48C3O68C7O85C9O104C13O120C15O138C20O149,,
timer-event-end,V8.CompileMicroSeconds,62532
timer-event-end,V8.CompileCode,62536
timer-event-end,V8.CompileScriptMicroSeconds,62541
timer-event-start,V8.CompileScriptMicroSeconds,62757
timer-event-start,V8.CompileCode,62797
timer-event-start,V8.CompileMicroSeconds,63091
code-creation,Script,12,63176,0x78e87f4c8d6,313, file:///home/yankun/workspace/rust/deno/std/testing/format.ts:1:1,0x78e87f4c078,~
script-source,21,file:///home/yankun/workspace/rust/deno/std/testing/format.ts,const toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = Symbol.prototype.toString;\nconst DEFAULT_OPTIONS = {\n    callToJSON: true\x2C\n    escapeRegex: false\x2C\n    escapeString: true\x2C\n    indent: 2\x2C\n    maxDepth: Infinity\x2C\n    min: false\x2C\n    printFunctionName: true\n};\n/**\n * Explicitly comparing typeof constructor to function avoids undefined as name\n * when mock identity-obj-proxy returns the key as the value for any key.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getConstructorName = (val) => (typeof val.constructor === "function" && val.constructor.name) || "Object";\n/* global window */\n/** Is val is equal to global window object?\n *  Works even if it does not exist :)\n * */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isWindow = (val) => typeof window !== "undefined" && val === window;\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction isToStringedArrayType(toStringed) {\n    return (toStringed === "[object Array]" ||\n        toStringed === "[object ArrayBuffer]" ||\n        toStringed === "[object DataView]" ||\n        toStringed === "[object Float32Array]" ||\n        toStringed === "[object Float64Array]" ||\n        toStringed === "[object Int8Array]" ||\n        toStringed === "[object Int16Array]" ||\n        toStringed === "[object Int32Array]" ||\n        toStringed === "[object Uint8Array]" ||\n        toStringed === "[object Uint8ClampedArray]" ||\n        toStringed === "[object Uint16Array]" ||\n        toStringed === "[object Uint32Array]");\n}\nfunction printNumber(val) {\n    return Object.is(val\x2C -0) ? "-0" : String(val);\n}\nfunction printFunction(val\x2C printFunctionName) {\n    if (!printFunctionName) {\n        return "[Function]";\n    }\n    return "[Function " + (val.name || "anonymous") + "]";\n}\nfunction printSymbol(val) {\n    return symbolToString.call(val).replace(SYMBOL_REGEXP\x2C "Symbol($1)");\n}\nfunction printError(val) {\n    return "[" + errorToString.call(val) + "]";\n}\n/**\n * The first port of call for printing an object\x2C handles most of the\n * data-types in JS.\n */\nfunction printBasicValue(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nval\x2C { printFunctionName\x2C escapeRegex\x2C escapeString }) {\n    if (val === true || val === false) {\n        return String(val);\n    }\n    if (val === undefined) {\n        return "undefined";\n    }\n    if (val === null) {\n        return "null";\n    }\n    const typeOf = typeof val;\n    if (typeOf === "number") {\n        return printNumber(val);\n    }\n    if (typeOf === "string") {\n        if (escapeString) {\n            return `"${val.replace(/"|\\\\/g\x2C "\\\\$&")}"`;\n        }\n        return `"${val}"`;\n    }\n    if (typeOf === "function") {\n        return printFunction(val\x2C printFunctionName);\n    }\n    if (typeOf === "symbol") {\n        return printSymbol(val);\n    }\n    const toStringed = toString.call(val);\n    if (toStringed === "[object WeakMap]") {\n        return "WeakMap {}";\n    }\n    if (toStringed === "[object WeakSet]") {\n        return "WeakSet {}";\n    }\n    if (toStringed === "[object Function]" ||\n        toStringed === "[object GeneratorFunction]") {\n        return printFunction(val\x2C printFunctionName);\n    }\n    if (toStringed === "[object Symbol]") {\n        return printSymbol(val);\n    }\n    if (toStringed === "[object Date]") {\n        return isNaN(+val) ? "Date { NaN }" : toISOString.call(val);\n    }\n    if (toStringed === "[object Error]") {\n        return printError(val);\n    }\n    if (toStringed === "[object RegExp]") {\n        if (escapeRegex) {\n            // https://github.com/benjamingr/RegExp.escape/blob/master/polyfill.js\n            return regExpToString.call(val).replace(/[\\\\^$*+?.()|[\\]{}]/g\x2C "\\\\$&");\n        }\n        return regExpToString.call(val);\n    }\n    if (val instanceof Error) {\n        return printError(val);\n    }\n    return null;\n}\nfunction printer(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nval\x2C config\x2C indentation\x2C depth\x2C refs\x2C hasCalledToJSON) {\n    const basicResult = printBasicValue(val\x2C config);\n    if (basicResult !== null) {\n        return basicResult;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return printComplexValue(val\x2C config\x2C indentation\x2C depth\x2C refs\x2C hasCalledToJSON);\n}\n/**\n * Return items (for example\x2C of an array)\n * with spacing\x2C indentation\x2C and comma\n * without surrounding punctuation (for example\x2C brackets)\n */\nfunction printListItems(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlist\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) {\n    let result = "";\n    if (list.length) {\n        result += config.spacingOuter;\n        const indentationNext = indentation + config.indent;\n        for (let i = 0; i < list.length; i++) {\n            result +=\n                indentationNext +\n                    printer(list[i]\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            if (i < list.length - 1) {\n                result += "\x2C" + config.spacingInner;\n            }\n            else if (!config.min) {\n                result += "\x2C";\n            }\n        }\n        result += config.spacingOuter + indentation;\n    }\n    return result;\n}\n/**\n * Return entries (for example\x2C of a map)\n * with spacing\x2C indentation\x2C and comma\n * without surrounding punctuation (for example\x2C braces)\n */\nfunction printIteratorEntries(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\niterator\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer\x2C \n// Too bad\x2C so sad that separator for ECMAScript Map has been ' => '\n// What a distracting diff if you change a data structure to/from\n// ECMAScript Object or Immutable.Map/OrderedMap which use the default.\nseparator = ": ") {\n    let result = "";\n    let current = iterator.next();\n    if (!current.done) {\n        result += config.spacingOuter;\n        const indentationNext = indentation + config.indent;\n        while (!current.done) {\n            const name = printer(current.value[0]\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            const value = printer(current.value[1]\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            result += indentationNext + name + separator + value;\n            current = iterator.next();\n            if (!current.done) {\n                result += "\x2C" + config.spacingInner;\n            }\n            else if (!config.min) {\n                result += "\x2C";\n            }\n        }\n        result += config.spacingOuter + indentation;\n    }\n    return result;\n}\n/**\n * Return values (for example\x2C of a set)\n * with spacing\x2C indentation\x2C and comma\n * without surrounding punctuation (braces or brackets)\n */\nfunction printIteratorValues(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\niterator\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) {\n    let result = "";\n    let current = iterator.next();\n    if (!current.done) {\n        result += config.spacingOuter;\n        const indentationNext = indentation + config.indent;\n        while (!current.done) {\n            result +=\n                indentationNext +\n                    printer(current.value\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            current = iterator.next();\n            if (!current.done) {\n                result += "\x2C" + config.spacingInner;\n            }\n            else if (!config.min) {\n                result += "\x2C";\n            }\n        }\n        result += config.spacingOuter + indentation;\n    }\n    return result;\n}\nconst getKeysOfEnumerableProperties = (object) => {\n    const keys = Object.keys(object).sort();\n    if (Object.getOwnPropertySymbols) {\n        Object.getOwnPropertySymbols(object).forEach((symbol) => {\n            if (Object.getOwnPropertyDescriptor(object\x2C symbol).enumerable) {\n                keys.push(symbol);\n            }\n        });\n    }\n    return keys;\n};\n/**\n * Return properties of an object\n * with spacing\x2C indentation\x2C and comma\n * without surrounding punctuation (for example\x2C braces)\n */\nfunction printObjectProperties(val\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) {\n    let result = "";\n    const keys = getKeysOfEnumerableProperties(val);\n    if (keys.length) {\n        result += config.spacingOuter;\n        const indentationNext = indentation + config.indent;\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            const name = printer(key\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            const value = printer(val[key]\x2C config\x2C indentationNext\x2C depth\x2C refs);\n            result += indentationNext + name + ": " + value;\n            if (i < keys.length - 1) {\n                result += "\x2C" + config.spacingInner;\n            }\n            else if (!config.min) {\n                result += "\x2C";\n            }\n        }\n        result += config.spacingOuter + indentation;\n    }\n    return result;\n}\n/**\n * Handles more complex objects ( such as objects with circular references.\n * maps and sets etc )\n */\nfunction printComplexValue(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nval\x2C config\x2C indentation\x2C depth\x2C refs\x2C hasCalledToJSON) {\n    if (refs.indexOf(val) !== -1) {\n        return "[Circular]";\n    }\n    refs = refs.slice();\n    refs.push(val);\n    const hitMaxDepth = ++depth > config.maxDepth;\n    const { min\x2C callToJSON } = config;\n    if (callToJSON &&\n        !hitMaxDepth &&\n        val.toJSON &&\n        typeof val.toJSON === "function" &&\n        !hasCalledToJSON) {\n        return printer(val.toJSON()\x2C config\x2C indentation\x2C depth\x2C refs\x2C true);\n    }\n    const toStringed = toString.call(val);\n    if (toStringed === "[object Arguments]") {\n        return hitMaxDepth\n            ? "[Arguments]"\n            : (min ? "" : "Arguments ") +\n                "[" +\n                printListItems(val\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) +\n                "]";\n    }\n    if (isToStringedArrayType(toStringed)) {\n        return hitMaxDepth\n            ? `[${val.constructor.name}]`\n            : (min ? "" : `${val.constructor.name} `) +\n                "[" +\n                printListItems(val\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) +\n                "]";\n    }\n    if (toStringed === "[object Map]") {\n        return hitMaxDepth\n            ? "[Map]"\n            : "Map {" +\n                printIteratorEntries(val.entries()\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer\x2C " => ") +\n                "}";\n    }\n    if (toStringed === "[object Set]") {\n        return hitMaxDepth\n            ? "[Set]"\n            : "Set {" +\n                printIteratorValues(val.values()\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) +\n                "}";\n    }\n    // Avoid failure to serialize global window object in jsdom test environment.\n    // For example\x2C not even relevant if window is prop of React element.\n    return hitMaxDepth || isWindow(val)\n        ? "[" + getConstructorName(val) + "]"\n        : (min ? "" : getConstructorName(val) + " ") +\n            "{" +\n            printObjectProperties(val\x2C config\x2C indentation\x2C depth\x2C refs\x2C printer) +\n            "}";\n}\n// TODO this is better done with `.padStart()`\nfunction createIndent(indent) {\n    return new Array(indent + 1).join(" ");\n}\nconst getConfig = (options) => ({\n    ...options\x2C\n    indent: options.min ? "" : createIndent(options.indent)\x2C\n    spacingInner: options.min ? " " : "\\n"\x2C\n    spacingOuter: options.min ? "" : "\\n"\n});\n/**\n * Returns a presentation string of your `val` object\n * @param val any potential JavaScript object\n * @param options Custom settings\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function format(val\x2C options = {}) {\n    const opts = {\n        ...DEFAULT_OPTIONS\x2C\n        ...options\n    };\n    const basicResult = printBasicValue(val\x2C opts);\n    if (basicResult !== null) {\n        return basicResult;\n    }\n    return printComplexValue(val\x2C getConfig(opts)\x2C ""\x2C 0\x2C []);\n}\n//# sourceMappingURL=format.js.map
code-source-info,0x78e87f4c8d6,21,0,12000,C148O0C151O0C172O0C175O12000C179O17C184O24C189O34C192O17C194O64C199O69C204O79C207O64C209O114C214O120C219O130C222O114C224O163C229O170C234O180C237O163C239O213C244O220C249O230C252O213C254O264C269O365C278O264C280O674C284O674C286O950C290O950C292O1030C296O1030C298O7604C302O7604C304O11278C308O11278C312O12000,,
timer-event-end,V8.CompileMicroSeconds,63879
timer-event-end,V8.CompileCode,63883
timer-event-end,V8.CompileScriptMicroSeconds,63892
timer-event-start,V8.CompileScriptMicroSeconds,64074
timer-event-start,V8.CompileCode,64087
timer-event-start,V8.CompileMicroSeconds,64099
code-creation,Script,12,64123,0x78e87f4ce16,62, file:///home/yankun/workspace/rust/deno/std/strings/mod.ts:1:1,0x78e87f4cd60,~
script-source,22,file:///home/yankun/workspace/rust/deno/std/strings/mod.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nexport * from "./encode.ts";\nexport * from "./decode.ts";\nexport * from "./pad.ts";\n//# sourceMappingURL=mod.js.map
code-source-info,0x78e87f4ce16,22,0,190,C30O0C31O0C52O0C55O190C61O190,,
timer-event-end,V8.CompileMicroSeconds,64160
timer-event-end,V8.CompileCode,64163
timer-event-end,V8.CompileScriptMicroSeconds,64168
timer-event-start,V8.CompileScriptMicroSeconds,64695
timer-event-start,V8.CompileCode,64707
timer-event-start,V8.CompileMicroSeconds,64719
code-creation,Script,12,64741,0x78e87f4d156,62, file:///home/yankun/workspace/rust/deno/std/fs/path.ts:1:1,0x78e87f4d0a0,~
script-source,23,file:///home/yankun/workspace/rust/deno/std/fs/path.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\nexport * from "./path/mod.ts";\n//# sourceMappingURL=path.js.map
code-source-info,0x78e87f4d156,23,0,138,C30O0C31O0C52O0C55O138C61O138,,
timer-event-end,V8.CompileMicroSeconds,64776
timer-event-end,V8.CompileCode,64780
timer-event-end,V8.CompileScriptMicroSeconds,64785
timer-event-start,V8.CompileScriptMicroSeconds,65076
timer-event-start,V8.CompileCode,65088
timer-event-start,V8.CompileMicroSeconds,65108
code-creation,Script,12,65136,0x78e87f4d4ce,88, file:///home/yankun/workspace/rust/deno/std/strings/encode.ts:1:1,0x78e87f4d3b0,~
script-source,24,file:///home/yankun/workspace/rust/deno/std/strings/encode.ts,/** A default TextEncoder instance */\nexport const encoder = new TextEncoder();\n/** Shorthand for new TextEncoder().encode() */\nexport function encode(input) {\n    return encoder.encode(input);\n}\n//# sourceMappingURL=encode.js.map
code-source-info,0x78e87f4d4ce,24,0,230,C41O0C44O0C65O0C68O230C72O61C77O61C82O61C87O230,,
timer-event-end,V8.CompileMicroSeconds,65178
timer-event-end,V8.CompileCode,65182
timer-event-end,V8.CompileScriptMicroSeconds,65187
timer-event-start,V8.CompileScriptMicroSeconds,65413
timer-event-start,V8.CompileCode,65425
timer-event-start,V8.CompileMicroSeconds,65444
code-creation,Script,12,65472,0x78e87f4d87e,88, file:///home/yankun/workspace/rust/deno/std/strings/decode.ts:1:1,0x78e87f4d760,~
script-source,25,file:///home/yankun/workspace/rust/deno/std/strings/decode.ts,/** A default TextDecoder instance */\nexport const decoder = new TextDecoder();\n/** Shorthand for new TextDecoder().decode() */\nexport function decode(input) {\n    return decoder.decode(input);\n}\n//# sourceMappingURL=decode.js.map
code-source-info,0x78e87f4d87e,25,0,230,C41O0C44O0C65O0C68O230C72O61C77O61C82O61C87O230,,
timer-event-end,V8.CompileMicroSeconds,65514
timer-event-end,V8.CompileCode,65518
timer-event-end,V8.CompileScriptMicroSeconds,65523
timer-event-start,V8.CompileScriptMicroSeconds,65742
timer-event-start,V8.CompileCode,65758
timer-event-start,V8.CompileMicroSeconds,65800
code-creation,Script,12,65827,0x78e87f4dc86,71, file:///home/yankun/workspace/rust/deno/std/strings/pad.ts:1:1,0x78e87f4db70,~
script-source,26,file:///home/yankun/workspace/rust/deno/std/strings/pad.ts,// Copyright 2018-2019 the Deno authors. All rights reserved. MIT license.\n/**\n * Pad helper for strings.\n * Input string is processed to output a string with a minimal length.\n * If the parameter `strict` is set to true\x2C the output string length\n * is equal to the `strLen` parameter.\n * Example:\n *\n *     pad("deno"\x2C 6\x2C { char: "*"\x2C side: "left" }) // output : "**deno"\n *     pad("deno"\x2C 6\x2C { char: "*"\x2C side: "right"}) // output : "deno**"\n *     pad("denosorusrex"\x2C 6 {\n *       char: "*"\x2C\n *       side: "left"\x2C\n *       strict: true\x2C\n *       strictSide: "right"\x2C\n *       strictChar: "..."\n *     }) // output : "den..."\n *\n * @param input Input string\n * @param strLen Output string lenght\n * @param opts Configuration object\n * @param [opts.char=" "] Character used to fill in\n * @param [opts.side="left"] Side to fill in\n * @param [opts.strict=false] Flag to truncate the string if length > strLen\n * @param [opts.strictChar=""] Character to add if string is truncated\n * @param [opts.strictSide="right"] Side to truncate\n */\nexport function pad(input\x2C strLen\x2C opts = {\n    char: " "\x2C\n    strict: false\x2C\n    side: "left"\x2C\n    strictChar: ""\x2C\n    strictSide: "right"\n}) {\n    let out = input;\n    const outL = out.length;\n    if (outL < strLen) {\n        if (!opts.side || opts.side === "left") {\n            out = out.padStart(strLen\x2C opts.char);\n        }\n        else {\n            out = out.padEnd(strLen\x2C opts.char);\n        }\n    }\n    else if (opts.strict && outL > strLen) {\n        const addChar = opts.strictChar ? opts.strictChar : "";\n        if (opts.strictSide === "left") {\n            let toDrop = outL - strLen;\n            if (opts.strictChar) {\n                toDrop += opts.strictChar.length;\n            }\n            out = `${addChar}${out.slice(toDrop\x2C outL)}`;\n        }\n        else {\n            out = `${out.substring(0\x2C strLen - addChar.length)}${addChar}`;\n        }\n    }\n    return out;\n}\n//# sourceMappingURL=pad.js.map
code-source-info,0x78e87f4dc86,26,0,1963,C37O0C40O0C61O0C64O1963C70O1963,,
timer-event-end,V8.CompileMicroSeconds,65960
timer-event-end,V8.CompileCode,65964
timer-event-end,V8.CompileScriptMicroSeconds,65969
timer-event-start,V8.CompileScriptMicroSeconds,66153
timer-event-start,V8.CompileCode,66167
timer-event-start,V8.CompileMicroSeconds,66204
code-creation,Script,12,66252,0x78e87f4e3c6,248, file:///home/yankun/workspace/rust/deno/std/fs/path/mod.ts:1:1,0x78e87f4e2a0,~
script-source,27,file:///home/yankun/workspace/rust/deno/std/fs/path/mod.ts,// Copyright the Browserify authors. MIT License.\n// Ported from https://github.com/browserify/path-browserify/\nimport * as _win32 from "./win32.ts";\nimport * as _posix from "./posix.ts";\nimport { isWindows } from "./constants.ts";\nconst path = isWindows ? _win32 : _posix;\nexport const win32 = _win32;\nexport const posix = _posix;\nexport const resolve = path.resolve;\nexport const normalize = path.normalize;\nexport const isAbsolute = path.isAbsolute;\nexport const join = path.join;\nexport const relative = path.relative;\nexport const toNamespacedPath = path.toNamespacedPath;\nexport const dirname = path.dirname;\nexport const basename = path.basename;\nexport const extname = path.extname;\nexport const format = path.format;\nexport const parse = path.parse;\nexport const sep = path.sep;\nexport const delimiter = path.delimiter;\n//# sourceMappingURL=mod.js.map
code-source-info,0x78e87f4e3c6,27,0,860,C111O0C114O0C135O0C138O860C142O245C157O295C159O295C162O324C164O324C167O360C170O355C173O399C176O394C179O441C182O436C185O478C188O473C191O513C194O508C197O560C200O555C203O606C206O601C209O644C212O639C215O682C218O677C221O718C224O713C227O752C230O747C233O783C236O778C239O818C242O813C247O860,,
timer-event-end,V8.CompileMicroSeconds,66356
timer-event-end,V8.CompileCode,66359
timer-event-end,V8.CompileScriptMicroSeconds,66364
timer-event-start,V8.CompileScriptMicroSeconds,66971
timer-event-start,V8.CompileCode,67016
timer-event-start,V8.CompileMicroSeconds,67619
code-creation,Script,12,67691,0x78e87f4f5ee,182, file:///home/yankun/workspace/rust/deno/std/fs/path/win32.ts:1:1,0x78e87f4f0f0,~
script-source,28,file:///home/yankun/workspace/rust/deno/std/fs/path/win32.ts,// Copyright the Browserify authors. MIT License.\n// Ported from https://github.com/browserify/path-browserify/\nconst { cwd\x2C env } = Deno;\nimport { CHAR_DOT\x2C CHAR_BACKWARD_SLASH\x2C CHAR_COLON\x2C CHAR_QUESTION_MARK } from "./constants.ts";\nimport { assertPath\x2C isPathSeparator\x2C isWindowsDeviceRoot\x2C normalizeString\x2C _format } from "./utils.ts";\nexport const sep = "\\\\";\nexport const delimiter = ";";\nexport function resolve(...pathSegments) {\n    let resolvedDevice = "";\n    let resolvedTail = "";\n    let resolvedAbsolute = false;\n    for (let i = pathSegments.length - 1; i >= -1; i--) {\n        let path;\n        if (i >= 0) {\n            path = pathSegments[i];\n        }\n        else if (!resolvedDevice) {\n            path = cwd();\n        }\n        else {\n            // Windows has the concept of drive-specific current working\n            // directories. If we've resolved a drive letter but not yet an\n            // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n            // the drive cwd is not available. We're sure the device is not\n            // a UNC path at this points\x2C because UNC paths are always absolute.\n            path = env()[`=${resolvedDevice}`] || cwd();\n            // Verify that a cwd was found and that it actually points\n            // to our drive. If not\x2C default to the drive's root.\n            if (path === undefined ||\n                path.slice(0\x2C 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\\\`) {\n                path = `${resolvedDevice}\\\\`;\n            }\n        }\n        assertPath(path);\n        const len = path.length;\n        // Skip empty entries\n        if (len === 0)\n            continue;\n        let rootEnd = 0;\n        let device = "";\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len > 1) {\n            if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator\x2C we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    for (; j < len; ++j) {\n                        if (isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last\x2C j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        for (; j < len; ++j) {\n                            if (!isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            for (; j < len; ++j) {\n                                if (isPathSeparator(path.charCodeAt(j)))\n                                    break;\n                            }\n                            if (j === len) {\n                                // We matched a UNC root only\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last)}`;\n                                rootEnd = j;\n                            }\n                            else if (j !== last) {\n                                // We matched a UNC root with leftovers\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last\x2C j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code)) {\n                // Possible device root\n                if (path.charCodeAt(1) === CHAR_COLON) {\n                    device = path.slice(0\x2C 2);\n                    rootEnd = 2;\n                    if (len > 2) {\n                        if (isPathSeparator(path.charCodeAt(2))) {\n                            // Treat separator following drive name as an absolute path\n                            // indicator\n                            isAbsolute = true;\n                            rootEnd = 3;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isPathSeparator(code)) {\n            // `path` contains just a path separator\n            rootEnd = 1;\n            isAbsolute = true;\n        }\n        if (device.length > 0 &&\n            resolvedDevice.length > 0 &&\n            device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n            // This path points to another device so it is not applicable\n            continue;\n        }\n        if (resolvedDevice.length === 0 && device.length > 0) {\n            resolvedDevice = device;\n        }\n        if (!resolvedAbsolute) {\n            resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n            resolvedAbsolute = isAbsolute;\n        }\n        if (resolvedAbsolute && resolvedDevice.length > 0)\n            break;\n    }\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C "\\\\"\x2C isPathSeparator);\n    return resolvedDevice + (resolvedAbsolute ? "\\\\" : "") + resolvedTail || ".";\n}\nexport function normalize(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return ".";\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = path.charCodeAt(0);\n    // Try to match a root\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator\x2C we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last\x2C j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last\x2C j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            // Possible device root\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0\x2C 2);\n                rootEnd = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2))) {\n                        // Treat separator following drive name as an absolute path\n                        // indicator\n                        isAbsolute = true;\n                        rootEnd = 3;\n                    }\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid unnecessary\n        // work\n        return "\\\\";\n    }\n    let tail;\n    if (rootEnd < len) {\n        tail = normalizeString(path.slice(rootEnd)\x2C !isAbsolute\x2C "\\\\"\x2C isPathSeparator);\n    }\n    else {\n        tail = "";\n    }\n    if (tail.length === 0 && !isAbsolute)\n        tail = ".";\n    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1)))\n        tail += "\\\\";\n    if (device === undefined) {\n        if (isAbsolute) {\n            if (tail.length > 0)\n                return `\\\\${tail}`;\n            else\n                return "\\\\";\n        }\n        else if (tail.length > 0) {\n            return tail;\n        }\n        else {\n            return "";\n        }\n    }\n    else if (isAbsolute) {\n        if (tail.length > 0)\n            return `${device}\\\\${tail}`;\n        else\n            return `${device}\\\\`;\n    }\n    else if (tail.length > 0) {\n        return device + tail;\n    }\n    else {\n        return device;\n    }\n}\nexport function isAbsolute(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return false;\n    const code = path.charCodeAt(0);\n    if (isPathSeparator(code)) {\n        return true;\n    }\n    else if (isWindowsDeviceRoot(code)) {\n        // Possible device root\n        if (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n            if (isPathSeparator(path.charCodeAt(2)))\n                return true;\n        }\n    }\n    return false;\n}\nexport function join(...paths) {\n    const pathsCount = paths.length;\n    if (pathsCount === 0)\n        return ".";\n    let joined;\n    let firstPart;\n    for (let i = 0; i < pathsCount; ++i) {\n        const path = paths[i];\n        assertPath(path);\n        if (path.length > 0) {\n            if (joined === undefined)\n                joined = firstPart = path;\n            else\n                joined += `\\\\${path}`;\n        }\n    }\n    if (joined === undefined)\n        return ".";\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for an UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at an UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as an UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    firstPart = firstPart;\n    if (isPathSeparator(firstPart.charCodeAt(0))) {\n        ++slashCount;\n        const firstLen = firstPart.length;\n        if (firstLen > 1) {\n            if (isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2)))\n                        ++slashCount;\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n    }\n    if (needsReplace) {\n        // Find any more consecutive slashes we need to replace\n        for (; slashCount < joined.length; ++slashCount) {\n            if (!isPathSeparator(joined.charCodeAt(slashCount)))\n                break;\n        }\n        // Replace the slashes if needed\n        if (slashCount >= 2)\n            joined = `\\\\${joined.slice(slashCount)}`;\n    }\n    return normalize(joined);\n}\n// It will solve the relative path from `from` to `to`\x2C for instance:\n//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\nexport function relative(from\x2C to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to)\n        return "";\n    const fromOrig = resolve(from);\n    const toOrig = resolve(to);\n    if (fromOrig === toOrig)\n        return "";\n    from = fromOrig.toLowerCase();\n    to = toOrig.toLowerCase();\n    if (from === to)\n        return "";\n    // Trim any leading backslashes\n    let fromStart = 0;\n    let fromEnd = from.length;\n    for (; fromStart < fromEnd; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    for (; fromEnd - 1 > fromStart; --fromEnd) {\n        if (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    const fromLen = fromEnd - fromStart;\n    // Trim any leading backslashes\n    let toStart = 0;\n    let toEnd = to.length;\n    for (; toStart < toEnd; ++toStart) {\n        if (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    for (; toEnd - 1 > toStart; --toEnd) {\n        if (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    const toLen = toEnd - toStart;\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i <= length; ++i) {\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                else if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            break;\n        }\n        const fromCode = from.charCodeAt(fromStart + i);\n        const toCode = to.charCodeAt(toStart + i);\n        if (fromCode !== toCode)\n            break;\n        else if (fromCode === CHAR_BACKWARD_SLASH)\n            lastCommonSep = i;\n    }\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length && lastCommonSep === -1) {\n        return toOrig;\n    }\n    let out = "";\n    if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n        if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n            if (out.length === 0)\n                out += "..";\n            else\n                out += "\\\\..";\n        }\n    }\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n        return out + toOrig.slice(toStart + lastCommonSep\x2C toEnd);\n    else {\n        toStart += lastCommonSep;\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH)\n            ++toStart;\n        return toOrig.slice(toStart\x2C toEnd);\n    }\n}\nexport function toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== "string")\n        return path;\n    if (path.length === 0)\n        return "";\n    const resolvedPath = resolve(path);\n    if (resolvedPath.length >= 3) {\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root\x2C convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n            // Possible device root\n            if (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n                resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n                // Matched device root\x2C convert the path to a long UNC path\n                return `\\\\\\\\?\\\\${resolvedPath}`;\n            }\n        }\n    }\n    return path;\n}\nexport function dirname(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return ".";\n    let rootEnd = -1;\n    let end = -1;\n    let matchedSlash = true;\n    let offset = 0;\n    const code = path.charCodeAt(0);\n    // Try to match a root\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a "normal root" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            // Possible device root\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                rootEnd = offset = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2)))\n                        rootEnd = offset = 3;\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        return path;\n    }\n    for (let i = len - 1; i >= offset; --i) {\n        if (isPathSeparator(path.charCodeAt(i))) {\n            if (!matchedSlash) {\n                end = i;\n                break;\n            }\n        }\n        else {\n            // We saw the first non-path separator\n            matchedSlash = false;\n        }\n    }\n    if (end === -1) {\n        if (rootEnd === -1)\n            return ".";\n        else\n            end = rootEnd;\n    }\n    return path.slice(0\x2C end);\n}\nexport function basename(path\x2C ext = "") {\n    if (ext !== undefined && typeof ext !== "string")\n        throw new TypeError('"ext" argument must be a string');\n    assertPath(path);\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2) {\n        const drive = path.charCodeAt(0);\n        if (isWindowsDeviceRoot(drive)) {\n            if (path.charCodeAt(1) === CHAR_COLON)\n                start = 2;\n        }\n    }\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n        if (ext.length === path.length && ext === path)\n            return "";\n        let extIdx = ext.length - 1;\n        let firstNonSlashEnd = -1;\n        for (i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string\x2C stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else {\n                if (firstNonSlashEnd === -1) {\n                    // We saw the first non-path separator\x2C remember this index in case\n                    // we need it if the extension ends up not matching\n                    matchedSlash = false;\n                    firstNonSlashEnd = i + 1;\n                }\n                if (extIdx >= 0) {\n                    // Try to match the explicit extension\n                    if (code === ext.charCodeAt(extIdx)) {\n                        if (--extIdx === -1) {\n                            // We matched the extension\x2C so mark this as the end of our path\n                            // component\n                            end = i;\n                        }\n                    }\n                    else {\n                        // Extension does not match\x2C so our result is the entire path\n                        // component\n                        extIdx = -1;\n                        end = firstNonSlashEnd;\n                    }\n                }\n            }\n        }\n        if (start === end)\n            end = firstNonSlashEnd;\n        else if (end === -1)\n            end = path.length;\n        return path.slice(start\x2C end);\n    }\n    else {\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string\x2C stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator\x2C mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1)\n            return "";\n        return path.slice(start\x2C end);\n    }\n}\nexport function extname(path) {\n    assertPath(path);\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        path.charCodeAt(1) === CHAR_COLON &&\n        isWindowsDeviceRoot(path.charCodeAt(0))) {\n        start = startPart = 2;\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string\x2C stop now\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            // We saw the first non-path separator\x2C mark this as the end of our\n            // extension\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            // If this is our first dot\x2C mark it as the start of our extension\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            // We saw a non-dot and non-path separator before our dot\x2C so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        return "";\n    }\n    return path.slice(startDot\x2C end);\n}\nexport function format(pathObject) {\n    /* eslint-disable max-len */\n    if (pathObject === null || typeof pathObject !== "object") {\n        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);\n    }\n    return _format("\\\\"\x2C pathObject);\n}\nexport function parse(path) {\n    assertPath(path);\n    const ret = { root: ""\x2C dir: ""\x2C base: ""\x2C ext: ""\x2C name: "" };\n    const len = path.length;\n    if (len === 0)\n        return ret;\n    let rootEnd = 0;\n    let code = path.charCodeAt(0);\n    // Try to match a root\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            // Possible device root\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                rootEnd = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2))) {\n                        if (len === 3) {\n                            // `path` contains just a drive root\x2C exit early to avoid\n                            // unnecessary work\n                            ret.root = ret.dir = path;\n                            return ret;\n                        }\n                        rootEnd = 3;\n                    }\n                }\n                else {\n                    // `path` contains just a drive root\x2C exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n    }\n    if (rootEnd > 0)\n        ret.root = path.slice(0\x2C rootEnd);\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n        code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string\x2C stop now\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            // We saw the first non-path separator\x2C mark this as the end of our\n            // extension\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            // If this is our first dot\x2C mark it as the start of our extension\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            // We saw a non-dot and non-path separator before our dot\x2C so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        if (end !== -1) {\n            ret.base = ret.name = path.slice(startPart\x2C end);\n        }\n    }\n    else {\n        ret.name = path.slice(startPart\x2C startDot);\n        ret.base = path.slice(startPart\x2C end);\n        ret.ext = path.slice(startDot\x2C end);\n    }\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd) {\n        ret.dir = path.slice(0\x2C startPart - 1);\n    }\n    else\n        ret.dir = ret.root;\n    return ret;\n}\n//# sourceMappingURL=win32.js.map
code-source-info,0x78e87f4f5ee,28,0,31920,C121O0C124O0C145O0C148O31920C152O133C157O120C163O125C169O359C171O359C174O390C176O390C181O31920,,
timer-event-end,V8.CompileMicroSeconds,69352
timer-event-end,V8.CompileCode,69356
timer-event-end,V8.CompileScriptMicroSeconds,69362
timer-event-start,V8.CompileScriptMicroSeconds,69758
timer-event-start,V8.CompileCode,69803
timer-event-start,V8.CompileMicroSeconds,70110
code-creation,Script,12,70169,0x78e87f50196,173, file:///home/yankun/workspace/rust/deno/std/fs/path/posix.ts:1:1,0x78e87f4fca0,~
script-source,29,file:///home/yankun/workspace/rust/deno/std/fs/path/posix.ts,// Copyright the Browserify authors. MIT License.\n// Ported from https://github.com/browserify/path-browserify/\nconst { cwd } = Deno;\nimport { CHAR_DOT\x2C CHAR_FORWARD_SLASH } from "./constants.ts";\nimport { assertPath\x2C normalizeString\x2C isPosixPathSeparator\x2C _format } from "./utils.ts";\nexport const sep = "/";\nexport const delimiter = ":";\n// path.resolve([from ...]\x2C to)\nexport function resolve(...pathSegments) {\n    let resolvedPath = "";\n    let resolvedAbsolute = false;\n    for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        let path;\n        if (i >= 0)\n            path = pathSegments[i];\n        else\n            path = cwd();\n        assertPath(path);\n        // Skip empty entries\n        if (path.length === 0) {\n            continue;\n        }\n        resolvedPath = `${path}/${resolvedPath}`;\n        resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    }\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C "/"\x2C isPosixPathSeparator);\n    if (resolvedAbsolute) {\n        if (resolvedPath.length > 0)\n            return `/${resolvedPath}`;\n        else\n            return "/";\n    }\n    else if (resolvedPath.length > 0)\n        return resolvedPath;\n    else\n        return ".";\n}\nexport function normalize(path) {\n    assertPath(path);\n    if (path.length === 0)\n        return ".";\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C "/"\x2C isPosixPathSeparator);\n    if (path.length === 0 && !isAbsolute)\n        path = ".";\n    if (path.length > 0 && trailingSeparator)\n        path += "/";\n    if (isAbsolute)\n        return `/${path}`;\n    return path;\n}\nexport function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n}\nexport function join(...paths) {\n    if (paths.length === 0)\n        return ".";\n    let joined;\n    for (let i = 0\x2C len = paths.length; i < len; ++i) {\n        const path = paths[i];\n        assertPath(path);\n        if (path.length > 0) {\n            if (!joined)\n                joined = path;\n            else\n                joined += `/${path}`;\n        }\n    }\n    if (!joined)\n        return ".";\n    return normalize(joined);\n}\nexport function relative(from\x2C to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to)\n        return "";\n    from = resolve(from);\n    to = resolve(to);\n    if (from === to)\n        return "";\n    // Trim any leading backslashes\n    let fromStart = 1;\n    const fromEnd = from.length;\n    for (; fromStart < fromEnd; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH)\n            break;\n    }\n    const fromLen = fromEnd - fromStart;\n    // Trim any leading backslashes\n    let toStart = 1;\n    const toEnd = to.length;\n    for (; toStart < toEnd; ++toStart) {\n        if (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH)\n            break;\n    }\n    const toLen = toEnd - toStart;\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i <= length; ++i) {\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                else if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n            break;\n        }\n        const fromCode = from.charCodeAt(fromStart + i);\n        const toCode = to.charCodeAt(toStart + i);\n        if (fromCode !== toCode)\n            break;\n        else if (fromCode === CHAR_FORWARD_SLASH)\n            lastCommonSep = i;\n    }\n    let out = "";\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n        if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n            if (out.length === 0)\n                out += "..";\n            else\n                out += "/..";\n        }\n    }\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n        return out + to.slice(toStart + lastCommonSep);\n    else {\n        toStart += lastCommonSep;\n        if (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH)\n            ++toStart;\n        return to.slice(toStart);\n    }\n}\nexport function toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n}\nexport function dirname(path) {\n    assertPath(path);\n    if (path.length === 0)\n        return ".";\n    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n        if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n            if (!matchedSlash) {\n                end = i;\n                break;\n            }\n        }\n        else {\n            // We saw the first non-path separator\n            matchedSlash = false;\n        }\n    }\n    if (end === -1)\n        return hasRoot ? "/" : ".";\n    if (hasRoot && end === 1)\n        return "//";\n    return path.slice(0\x2C end);\n}\nexport function basename(path\x2C ext = "") {\n    if (ext !== undefined && typeof ext !== "string")\n        throw new TypeError('"ext" argument must be a string');\n    assertPath(path);\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n        if (ext.length === path.length && ext === path)\n            return "";\n        let extIdx = ext.length - 1;\n        let firstNonSlashEnd = -1;\n        for (i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string\x2C stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else {\n                if (firstNonSlashEnd === -1) {\n                    // We saw the first non-path separator\x2C remember this index in case\n                    // we need it if the extension ends up not matching\n                    matchedSlash = false;\n                    firstNonSlashEnd = i + 1;\n                }\n                if (extIdx >= 0) {\n                    // Try to match the explicit extension\n                    if (code === ext.charCodeAt(extIdx)) {\n                        if (--extIdx === -1) {\n                            // We matched the extension\x2C so mark this as the end of our path\n                            // component\n                            end = i;\n                        }\n                    }\n                    else {\n                        // Extension does not match\x2C so our result is the entire path\n                        // component\n                        extIdx = -1;\n                        end = firstNonSlashEnd;\n                    }\n                }\n            }\n        }\n        if (start === end)\n            end = firstNonSlashEnd;\n        else if (end === -1)\n            end = path.length;\n        return path.slice(start\x2C end);\n    }\n    else {\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string\x2C stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator\x2C mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1)\n            return "";\n        return path.slice(start\x2C end);\n    }\n}\nexport function extname(path) {\n    assertPath(path);\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string\x2C stop now\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            // We saw the first non-path separator\x2C mark this as the end of our\n            // extension\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            // If this is our first dot\x2C mark it as the start of our extension\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            // We saw a non-dot and non-path separator before our dot\x2C so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        return "";\n    }\n    return path.slice(startDot\x2C end);\n}\nexport function format(pathObject) {\n    /* eslint-disable max-len */\n    if (pathObject === null || typeof pathObject !== "object") {\n        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);\n    }\n    return _format("/"\x2C pathObject);\n}\nexport function parse(path) {\n    assertPath(path);\n    const ret = { root: ""\x2C dir: ""\x2C base: ""\x2C ext: ""\x2C name: "" };\n    if (path.length === 0)\n        return ret;\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n        ret.root = "/";\n        start = 1;\n    }\n    else {\n        start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Get non-dir info\n    for (; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string\x2C stop now\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            // We saw the first non-path separator\x2C mark this as the end of our\n            // extension\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            // If this is our first dot\x2C mark it as the start of our extension\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            // We saw a non-dot and non-path separator before our dot\x2C so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        if (end !== -1) {\n            if (startPart === 0 && isAbsolute) {\n                ret.base = ret.name = path.slice(1\x2C end);\n            }\n            else {\n                ret.base = ret.name = path.slice(startPart\x2C end);\n            }\n        }\n    }\n    else {\n        if (startPart === 0 && isAbsolute) {\n            ret.name = path.slice(1\x2C startDot);\n            ret.base = path.slice(1\x2C end);\n        }\n        else {\n            ret.name = path.slice(startPart\x2C startDot);\n            ret.base = path.slice(startPart\x2C end);\n        }\n        ret.ext = path.slice(startDot\x2C end);\n    }\n    if (startPart > 0)\n        ret.dir = path.slice(0\x2C startPart - 1);\n    else if (isAbsolute)\n        ret.dir = "/";\n    return ret;\n}\n//# sourceMappingURL=posix.js.map
code-source-info,0x78e87f50196,29,0,14091,C118O0C121O0C142O0C145O14091C149O128C154O120C160O305C162O305C165O335C167O335C172O14091,,
timer-event-end,V8.CompileMicroSeconds,70930
timer-event-end,V8.CompileCode,70933
timer-event-end,V8.CompileScriptMicroSeconds,70939
timer-event-start,V8.CompileScriptMicroSeconds,71273
timer-event-start,V8.CompileCode,71290
timer-event-start,V8.CompileMicroSeconds,71361
code-creation,Script,12,71433,0x78e87f50ea6,507, file:///home/yankun/workspace/rust/deno/std/fs/path/constants.ts:1:1,0x78e87f50da0,~
script-source,30,file:///home/yankun/workspace/rust/deno/std/fs/path/constants.ts,// Copyright the Browserify authors. MIT License.\n// Ported from https://github.com/browserify/path-browserify/\nconst { build } = Deno;\n// Alphabet chars.\nexport const CHAR_UPPERCASE_A = 65; /* A */\nexport const CHAR_LOWERCASE_A = 97; /* a */\nexport const CHAR_UPPERCASE_Z = 90; /* Z */\nexport const CHAR_LOWERCASE_Z = 122; /* z */\n// Non-alphabetic chars.\nexport const CHAR_DOT = 46; /* . */\nexport const CHAR_FORWARD_SLASH = 47; /* / */\nexport const CHAR_BACKWARD_SLASH = 92; /* \\ */\nexport const CHAR_VERTICAL_LINE = 124; /* | */\nexport const CHAR_COLON = 58; /* : */\nexport const CHAR_QUESTION_MARK = 63; /* ? */\nexport const CHAR_UNDERSCORE = 95; /* _ */\nexport const CHAR_LINE_FEED = 10; /* \\n */\nexport const CHAR_CARRIAGE_RETURN = 13; /* \\r */\nexport const CHAR_TAB = 9; /* \\t */\nexport const CHAR_FORM_FEED = 12; /* \\f */\nexport const CHAR_EXCLAMATION_MARK = 33; /* ! */\nexport const CHAR_HASH = 35; /* # */\nexport const CHAR_SPACE = 32; /*   */\nexport const CHAR_NO_BREAK_SPACE = 160; /* \\u00A0 */\nexport const CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279; /* \\uFEFF */\nexport const CHAR_LEFT_SQUARE_BRACKET = 91; /* [ */\nexport const CHAR_RIGHT_SQUARE_BRACKET = 93; /* ] */\nexport const CHAR_LEFT_ANGLE_BRACKET = 60; /* < */\nexport const CHAR_RIGHT_ANGLE_BRACKET = 62; /* > */\nexport const CHAR_LEFT_CURLY_BRACKET = 123; /* { */\nexport const CHAR_RIGHT_CURLY_BRACKET = 125; /* } */\nexport const CHAR_HYPHEN_MINUS = 45; /* - */\nexport const CHAR_PLUS = 43; /* + */\nexport const CHAR_DOUBLE_QUOTE = 34; /* " */\nexport const CHAR_SINGLE_QUOTE = 39; /* ' */\nexport const CHAR_PERCENT = 37; /* % */\nexport const CHAR_SEMICOLON = 59; /* ; */\nexport const CHAR_CIRCUMFLEX_ACCENT = 94; /* ^ */\nexport const CHAR_GRAVE_ACCENT = 96; /* ` */\nexport const CHAR_AT = 64; /* @ */\nexport const CHAR_AMPERSAND = 38; /* & */\nexport const CHAR_EQUAL = 61; /* = */\n// Digits\nexport const CHAR_0 = 48; /* 0 */\nexport const CHAR_9 = 57; /* 9 */\nexport const isWindows = build.os === "win";\nexport const EOL = isWindows ? "\\r\\n" : "\\n";\nexport const SEP = isWindows ? "\\\\" : "/";\nexport const SEP_PATTERN = isWindows ? /[\\\\/]+/ : /\\/+/;\n//# sourceMappingURL=constants.js.map
code-source-info,0x78e87f50ea
timer-event-end,V8.CompileMicroSeconds,71666
timer-event-end,V8.CompileCode,71670
timer-event-end,V8.CompileScriptMicroSeconds,71675
timer-event-start,V8.CompileScriptMicroSeconds,71866
timer-event-start,V8.CompileCode,71886
timer-event-start,V8.CompileMicroSeconds,71991
code-creation,Script,12,72031,0x78e87f51a16,106, file:///home/yankun/workspace/rust/deno/std/fs/path/utils.ts:1:1,0x78e87f51720,~
script-source,31,file:///home/yankun/workspace/rust/deno/std/fs/path/utils.ts,// Copyright the Browserify authors. MIT License.\n// Ported from https://github.com/browserify/path-browserify/\nimport { CHAR_UPPERCASE_A\x2C CHAR_LOWERCASE_A\x2C CHAR_UPPERCASE_Z\x2C CHAR_LOWERCASE_Z\x2C CHAR_DOT\x2C CHAR_FORWARD_SLASH\x2C CHAR_BACKWARD_SLASH } from "./constants.ts";\nexport function assertPath(path) {\n    if (typeof path !== "string") {\n        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);\n    }\n}\nexport function isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nexport function isPathSeparator(code) {\n    return isPosixPathSeparator(code) || code === CHAR_BACKWARD_SLASH;\n}\nexport function isWindowsDeviceRoot(code) {\n    return ((code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z) ||\n        (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z));\n}\n// Resolves . and .. elements in a path with directory names\nexport function normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n    let res = "";\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code;\n    for (let i = 0\x2C len = path.length; i <= len; ++i) {\n        if (i < len)\n            code = path.charCodeAt(i);\n        else if (isPathSeparator(code))\n            break;\n        else\n            code = CHAR_FORWARD_SLASH;\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 ||\n                    lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = "";\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0\x2C lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length === 2 || res.length === 1) {\n                        res = "";\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0)\n                        res += `${separator}..`;\n                    else\n                        res = "..";\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0)\n                    res += separator + path.slice(lastSlash + 1\x2C i);\n                else\n                    res = path.slice(lastSlash + 1\x2C i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nexport function _format(sep\x2C pathObject) {\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");\n    if (!dir)\n        return base;\n    if (dir === pathObject.root)\n        return dir + base;\n    return dir + sep + base;\n}\n//# sourceMappingURL=utils.js.map
code-source-info,0x78e87f51a16,31,0,3709,C72O0C75O0C96O0C99O3709C105O3709,,
timer-event-end,V8.CompileMicroSeconds,72247
timer-event-end,V8.CompileCode,72250
timer-event-end,V8.CompileScriptMicroSeconds,72256
timer-event-start,V8.Execute,74507
timer-event-start,V8.Execute,74515
timer-event-start,V8.CompileCode,74722
code-creation,LazyCompile,12,74756,0x78e87f54e8e,16,charCode file:///home/yankun/workspace/rust/deno/std/io/util.ts:17:25,0x78e87f49638,~
code-source-info,0x78e87f54e8e,18,614,649,C0O614C1O633C10O633C15O647,,
timer-event-end,V8.CompileCode,74778
timer-event-start,V8.CompileCode,75359
code-creation,LazyCompile,12,75424,0x78e87f55466,260,serve file:///home/yankun/workspace/rust/deno/std/http/server.ts:335:22,0x78e87f42220,~
code-source-info,0x78e87f55466,12,12486,12700,C0O12486C1O12591C11O12591C18O12586C36O12568C78O12578C208O12624C222O12633C226O12649C231O12649C239O12624C245O12670C254O12677C259O12698,,
timer-event-end,V8.CompileCode,75457
timer-event-start,V8.CompileCode,75504
code-creation,LazyCompile,12,75559,0x78e87f557ae,104,listen /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3780:20,0x281636bd9368,~
code-source-info,0x78e87f557ae,5,149716,150070,C0O149716C1O149761C11O149818C21O149858C25O149878C35O149896C49O149921C53O149957C63O149975C67O149878C75O150005C81O150033C87O150053C98O150012C103O150064,,
timer-event-end,V8.CompileCode,75599
timer-event-start,V8.CompileCode,76816
code-creation,LazyCompile,12,76854,0x78e87f55fae,21,ListenerImpl /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3735:20,0x281636bd9128,~
code-source-info,0x78e87f55fae,5,148164,148311,C0O148164C1O148206C3O148215C7O148234C9O148249C13O148274C15O148289C20O148310,,
timer-event-end,V8.CompileCode,76882
timer-event-start,V8.CompileCode,76908
code-creation,LazyCompile,12,76934,0x78e87f5612e,14,Server file:///home/yankun/workspace/rust/deno/std/http/server.ts:262:16,0x78e87f42430,~
code-source-info,0x78e87f5612e,12,9967,10049,C0O9967C1O9988C3O10002C7O10022C8O10035C13O10048,,
timer-event-end,V8.CompileCode,76957
timer-event-start,V8.CompileCode,77062
code-creation,LazyCompile,12,77131,0x78e87f5646e,381,main file:///home/yankun/workspace/rust/deno/std/http/http_bench.ts:6:20,0x78e87f40f88,~
code-source-info,0x78e87f5646e,11,260,377,C16O260C20O269C25O277C37O291C52O277C57O329C115O322C183O305C184O322C187O351C201O361C207O351C352O376C380O376,,
timer-event-end,V8.CompileCode,77165
timer-event-start,V8.CompileCode,77177
code-creation,LazyCompile,12,77214,0x78e87f5673e,65,Console.log /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1928:24,0x281636bd3788,~
code-source-info,0x78e87f5673e,5,74968,75134,C3O74968C6O74999C10O75004C22O75028C32O75074C40O75014C49O75105C57O75004C64O75133,,
timer-event-end,V8.CompileCode,77243
timer-event-start,V8.CompileCode,77264
code-creation,LazyCompile,12,77477,0x78e87f56ac6,809,stringifyArgs /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1818:27,0x281636bd3360,~
code-source-info,0x78e87f56ac
timer-event-end,V8.CompileCode,77641
timer-event-start,V8.CompileCode,77738
code-creation,LazyCompile,12,77773,0x78e87f57446,50, file:///home/yankun/workspace/rust/deno/std/http/server.ts:329:27,0x78e87f42590,~
code-source-info,0x78e87f57446,12,12317,12462,C0O12317C1O12342C8O12342C15O12378C21O12387C27O12387C34O12378C39O12446C45O12446C49O12456,,
timer-event-end,V8.CompileCode,77800
timer-event-start,V8.CompileCode,77807
code-creation,LazyCompile,12,77834,0x78e87f575de,26,MuxAsyncIterator file:///home/yankun/workspace/rust/deno/std/util/async.ts:23:16,0x78e87f48e30,~
code-source-info,0x78e87f575de,17,833,935,C0O833C1O846C2O865C6O878C8O890C12O918C17O918C20O916C25O934,,
timer-event-end,V8.CompileCode,77860
timer-event-start,V8.CompileCode,77883
code-creation,LazyCompile,12,77926,0x78e87f577be,54,deferred file:///home/yankun/workspace/rust/deno/std/util/async.ts:9:25,0x78e87f48d28,~
code-source-info,0x78e87f577be,17,315,484,C8O315C9O328C10O328C12O357C25O357C32O443C37O457C47O457C53O482,,
timer-event-end,V8.CompileCode,77957
timer-event-start,V8.CompileCode,77969
code-creation,LazyCompile,12,77996,0x78e87f57956,29, file:///home/yankun/workspace/rust/deno/std/util/async.ts:11:33,0x78e87f576e8,~
code-source-info,0x78e87f57956,17,369,436,C0O369C1O400C9O412C15O421C21O408C28O435,,
timer-event-end,V8.CompileCode,78019
timer-event-start,V8.CompileCode,78062
code-creation,LazyCompile,12,78132,0x78e87f57bbe,562,acceptConnAndIterateHttpRequests file:///home/yankun/workspace/rust/deno/std/http/server.ts:319:44,0x78e87f42538,~
code-source-info,0x78e87f57bbe,12,11884,12290,C16O11884C25O11884C46O11884C56O11909C62O11930C71O12008C77O12017C83O12017C96O11997C124O12114C130O12123C136O12123C143O12114C148O12258C154O12258C248O12246C320O12246C370O12246C429O12246C556O12289C559O12289C561O12289,,
timer-event-end,V8.CompileCode,78174
timer-event-start,V8.CompileCode,78193
code-creation,LazyCompile,12,78219,0x78e87f57f36,24,add file:///home/yankun/workspace/rust/deno/std/util/async.ts:28:8,0x78e87f48e88,~
code-source-info,0x78e87f57f36,17,943,1032,C0O943C1O964C7O971C11O999C17O999C23O1031,,
timer-event-end,V8.CompileCode,78242
timer-event-start,V8.CompileCode,78256
code-creation,LazyCompile,12,78305,0x78e87f58126,183,callIteratorNext file:///home/yankun/workspace/rust/deno/std/util/async.ts:32:27,0x78e87f48ee0,~
code-source-info,0x78e87f58126,17,1059,1303,C16O1059C20O1119C26O1119C39O1104C64O1088C70O1095C76O1135C78O1159C84O1166C90O1223C96O1230C110O1237C116O1247C120O1230C125O1280C131O1287C137O1287C154O1302C182O1302,,
timer-event-end,V8.CompileCode,78343
timer-event-start,V8.CompileCode,78354
code-creation,LazyCompile,12,78400,0x78e87f583de,169,accept /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3740:21,0x281636bd9180,~
code-source-info,0x78e87f583de,5,148332,148519,C16O148332C20O148361C24O148387C34O148406C46O148429C54O148387C69O148361C97O148449C103O148473C109O148482C115O148498C123O148456C140O148509C168O148518,,
timer-event-end,V8.CompileCode,78434
timer-event-start,V8.CompileCode,78454
code-creation,LazyCompile,12,78531,0x78e87f586be,300,sendAsync /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1236:29,0x281636bd1568,~
code-source-info,0x78e87f586be,5,48820,49409,C16O48820C68O49408C72O48876C76O48876C81O48901C86O48915C92O48922C100O48930C104O48915C112O48968C116O48973C122O48973C128O49017C132O49017C138O49051C142O49061C148O49066C163O49066C170O49109C172O49172C176O49172C182O49205C188O49205C195O49285C201O49298C207O49298C213O49353C223O49353C251O49376C255O49383C271O49403C299O49408,,
timer-event-end,V8.CompileCode,78585
timer-event-start,V8.CompileCode,78593
code-creation,LazyCompile,12,78615,0x78e87f5892e,24,nextPromiseId /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1200:27,0x281636bd11a8,~
code-source-info,0x78e87f5892e,5,47558,47601,C0O47558C1O47571C15O47592C23O47595,,
timer-event-end,V8.CompileCode,78638
timer-event-start,V8.CompileCode,78666
code-creation,LazyCompile,12,78708,0x78e87f58b4e,54,createResolvable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:85:30,0x281636bce500,~
code-source-info,0x78e87f58b4e,5,3407,3735,C8O3407C9O3424C10O3424C12O3457C25O3457C32O3690C37O3704C47O3704C53O3729,,
timer-event-end,V8.CompileCode,78737
timer-event-start,V8.CompileCode,78748
code-creation,LazyCompile,12,78774,0x78e87f58ce6,29, /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:87:37,0x78e87f58a78,~
code-source-info,0x78e87f58ce6,5,3469,3544,C0O3469C1O3504C9O3516C15O3525C21O3512C28O3543,,
timer-event-end,V8.CompileCode,78799
timer-event-start,V8.CompileCode,79126
code-creation,LazyCompile,12,79200,0x78e87f58f0e,333,iterate file:///home/yankun/workspace/rust/deno/std/util/async.ts:42:19,0x78e87f48f38,~
code-source-info,0x78e87f58f0e,17,1322,1918,C16O1322C25O1322C46O1322C58O1347C65O1361C70O1335C71O1455C84O1444C109O1572C112O1584C118O1591C122O1577C127O1559C128O1655C136O1661C141O1630C147O1640C153O1682C166O1682C187O1682C197O1716C203O1716C208O1600C217O1846C224O1860C228O1891C233O1891C236O1889C327O1917C330O1917C332O1917,,
timer-event-end,V8.CompileCode,79259
timer-event-end,V8.Execute,79281
timer-event-end,V8.Execute,79286
timer-event-start,V8.CompileScriptMicroSeconds,79326
timer-event-start,V8.CompileCode,79335
timer-event-start,V8.CompileMicroSeconds,79346
code-creation,Script,12,79367,0x78e87f5925e,36, file:///home/yankun/workspace/rust/deno/__anonymous__:1:1,0x78e87f591a8,~
script-source,32,file:///home/yankun/workspace/rust/deno/__anonymous__,window.dispatchEvent(new Event('load'))
code-source-info,0x78e87f5925e,32,0,39,C0O0C1O0C6O7C11O25C22O21C29O7C35O39,,
timer-event-end,V8.CompileMicroSeconds,79397
timer-event-end,V8.CompileCode,79401
timer-event-end,V8.CompileScriptMicroSeconds,79406
timer-event-start,V8.Execute,79412
timer-event-start,V8.Execute,79415
timer-event-start,V8.CompileCode,79428
code-creation,LazyCompile,12,79516,0x78e87f596be,243,Event /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2188:20,0x281636bd4490,~
code-source-info,0x78e87f596be,5,86385,87639,C3O86385C18O86487C19O86506C23O86527C24O86548C28O86569C29O86591C33O86612C34O86640C38O86661C39O86696C43O86717C44O86743C48O86835C50O86846C54O86864C58O86874C68O86911C78O86874C83O86935C88O86942C94O86968C95O86990C99O87010C103O87018C109O87034C123O87062C127O87107C141O87167C152O87228C167O87321C173O87332C181O87466C186O87471C192O87471C200O87034C206O87505C211O87513C229O87604C236O87513C242O87638,,
timer-event-end,V8.CompileCode,79580
current-time,79686
timer-event-start,V8.CompileCode,79731
code-creation,LazyCompile,12,79805,0x78e87f59bee,218,dispatchEvent /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4457:22,0x281636bdb728,~
code-source-info,0x78e87f59bee,5,179425,180236,C3O179425C4O179461C12O179481C18O179501C22O179512C32O179569C42O179512C47O179611C51O179626C55O179616C60O179661C64O179677C70O179709C76O179677C84O179734C85O179746C86O179783C92O179804C98O179835C102O179857C112O179879C118O179889C130O179841C135O179835C136O179983C146O180007C152O180018C156O179994C161O180042C165O180064C175O180086C181O180096C193O180048C198O180042C199O180177C205O180203C211O180203C217O180226,,
timer-event-end,V8.CompileCode,79865
timer-event-start,V8.CompileCode,79879
code-creation,LazyCompile,12,79906,0x78e87f59e4e,34,get type /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2331:17,0x281636bd5008,~
code-source-info,0x78e87f59e4e,5,91708,91807,C0O91708C1O91725C5O91742C15O91772C28O91742C33O91797,,
timer-event-end,V8.CompileCode,79931
timer-event-start,V8.CompileCode,79937
code-creation,LazyCompile,12,79970,0x78e87f59fce,50,getPrivateValue /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:164:29,0x281636bceb90,~
code-source-info,0x78e87f59fce,5,6050,6227,C0O6050C1O6097C7O6097C14O6141C20O6141C29O6154C32O6160C33O6179C44O6185C49O6179,,
timer-event-end,V8.CompileCode,79999
timer-event-start,V8.CompileCode,80016
code-creation,LazyCompile,12,80038,0x78e87f5a126,6,get dispatched /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2259:23,0x281636bd49e8,~
code-source-info,0x78e87f5a126,5,89167,89222,C0O89167C1O89196C5O89212,,
timer-event-end,V8.CompileCode,80059
timer-event-start,V8.CompileCode,80066
code-creation,LazyCompile,12,80084,0x78e87f5a23e,6,get initialized /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2282:24,0x281636bd4bc8,~
code-source-info,0x78e87f5a23e,5,89981,90037,C0O89981C1O90010C5O90027,,
timer-event-end,V8.CompileCode,80106
timer-event-start,V8.CompileCode,80112
code-creation,LazyCompile,12,80135,0x78e87f5a366,34,get eventPhase /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2265:23,0x281636bd4ad8,~
code-source-info,0x78e87f5a366,5,89329,89434,C0O89329C1O89346C5O89363C15O89393C28O89363C33O89424,,
timer-event-end,V8.CompileCode,80164
timer-event-start,V8.CompileCode,80176
code-creation,LazyCompile,12,80405,0x78e87f5a74e,999,dispatch /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4479:17,0x281636bdb7f8,~
code-source-info,0x78e87f5a74e
timer-event-end,V8.CompileCode,80607
timer-event-start,V8.CompileCode,80617
code-creation,LazyCompile,12,80640,0x78e87f5ae4e,9,set dispatched /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2262:23,0x281636bd4a60,~
code-source-info,0x78e87f5ae4e,5,89245,89306,C0O89245C1O89267C3O89288C8O89305,,
timer-event-end,V8.CompileCode,80663
timer-event-start,V8.CompileCode,80678
code-creation,LazyCompile,12,80704,0x78e87f5af86,34,get relatedTarget /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2294:26,0x281636bd4da0,~
code-source-info,0x78e87f5af86,5,90291,90399,C0O90291C1O90308C5O90325C15O90355C28O90325C33O90389,,
timer-event-end,V8.CompileCode,80730
timer-event-start,V8.CompileCode,80740
code-creation,LazyCompile,12,80785,0x78e87f5b0ae,79,retarget /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4362:22,0x281636bdae28,~
code-source-info,0x78e87f5b0ae,5,175219,175632,C0O175219C1O175236C2O175263C6O175268C12O175297C14O175306C15O175347C19O175347C25O175371C27O175400C31O175405C41O175449C51O175462C58O175522C60O175531C61O175566C65O175585C69O175575C78O175631,,
timer-event-end,V8.CompileCode,80826
timer-event-start,V8.CompileCode,80835
code-creation,LazyCompile,12,80861,0x78e87f5b24e,26,isNode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4317:20,0x281636bdab30,~
code-source-info,0x78e87f5b24e,5,173547,173625,C0O173547C1O173568C8O173583C16O173606C21O173575C25O173619,,
timer-event-end,V8.CompileCode,80885
timer-event-start,V8.CompileCode,80897
code-creation,LazyCompile,12,80951,0x78e87f5b4ae,156,appendToEventPath /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4679:26,0x281636bdbba0,~
code-source-info,0x78e87f5b4ae,5,190301,190944,C0O190301C1O190423C5O190437C11O190437C22O190469C32O190496C38O190496C45O190469C52O190551C56O190565C62O190565C73O190605C77O190595C84O190622C89O190658C95O190663C109O190692C115O190716C121O190758C127O190790C133O190838C139O190868C145O190902C149O190663C155O190943,,
timer-event-end,V8.CompileCode,81001
timer-event-start,V8.CompileCode,81015
code-creation,LazyCompile,12,81048,0x78e87f5b6a6,62,isShadowRoot /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4321:26,0x281636bdaca8,~
code-source-info,0x78e87f5b6a6,5,173680,173905,C0O173680C1O173701C8O173716C14O173758C18O173748C27O173808C33O173817C37O173779C46O173873C50O173863C54O173890C57O173708C61O173899,,
timer-event-end,V8.CompileCode,81080
timer-event-start,V8.CompileCode,81093
code-creation,LazyCompile,12,81114,0x78e87f5b816,6,get path /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2288:17,0x281636bd4cc0,~
code-source-info,0x78e87f5b816,5,90152,90197,C0O90152C1O90181C5O90187,,
timer-event-end,V8.CompileCode,81136
timer-event-start,V8.CompileCode,81191
code-creation,LazyCompile,12,81229,0x78e87f5b986,79,isSlotable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4328:24,0x281636bdad00,~
code-source-info,0x78e87f5b986,5,173970,174219,C0O173970C1O173991C8O174006C14O174049C18O174039C27O174099C33O174108C37O174070C46O174158C50O174148C59O174192C65O174201C69O174179C74O173998C78O174213,,
timer-event-end,V8.CompileCode,81263
timer-event-start,V8.CompileCode,81278
code-creation,LazyCompile,12,81299,0x78e87f5bb06,3,getEventTargetParent /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4385:34,0x281636bdae98,~
code-source-info,0x78e87f5bb06,5,176218,176269,C0O176218C1O176251C2O176263,,
timer-event-end,V8.CompileCode,81321
timer-event-start,V8.CompileCode,81346
code-creation,LazyCompile,12,81392,0x78e87f5bd26,109,set eventPhase /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2268:23,0x281636bd4b50,~
code-source-info,0x78e87f5bd26,5,89457,89957,C0O89457C1O89479C5O89487C11O89503C23O89542C31O89578C39O89620C47O89663C55O89709C65O89752C69O89791C77O89838C85O89882C93O89922C101O89503C108O89956,,
timer-event-end,V8.CompileCode,81428
timer-event-start,V8.CompileCode,81456
code-creation,LazyCompile,12,81484,0x78e87f5bef6,34,get bubbles /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2218:20,0x281636bd4500,~
code-source-info,0x78e87f5bef6,5,87659,87761,C0O87659C1O87676C5O87693C15O87723C28O87693C33O87751,,
timer-event-end,V8.CompileCode,81510
timer-event-start,V8.CompileCode,81523
code-creation,LazyCompile,12,81548,0x78e87f5c03e,34,get cancelable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2233:23,0x281636bd4778,~
code-source-info,0x78e87f5c03e,5,88176,88281,C0O88176C1O88193C5O88210C15O88240C28O88210C33O88271,,
timer-event-end,V8.CompileCode,81574
timer-event-start,V8.CompileCode,81587
code-creation,LazyCompile,12,81612,0x78e87f5c186,34,get composed /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2236:21,0x281636bd47f0,~
code-source-info,0x78e87f5c186,5,88302,88405,C0O88302C1O88319C5O88336C15O88366C28O88336C33O88395,,
timer-event-end,V8.CompileCode,81637
timer-event-start,V8.CompileCode,81650
code-creation,LazyCompile,12,81675,0x78e87f5c2d6,34,get currentTarget /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2239:26,0x281636bd4868,~
code-source-info,0x78e87f5c2d6,5,88431,88539,C0O88431C1O88448C5O88465C15O88495C28O88465C33O88529,,
timer-event-end,V8.CompileCode,81700
timer-event-start,V8.CompileCode,81714
code-creation,LazyCompile,12,81738,0x78e87f5c3fe,34,isTrusted /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2184:23,0x281636bd4350,~
code-source-info,0x78e87f5c3fe,5,86251,86347,C0O86251C1O86264C5O86281C15O86311C28O86281C33O86341,,
timer-event-end,V8.CompileCode,81767
timer-event-start,V8.CompileCode,81784
code-creation,LazyCompile,12,81810,0x78e87f5c546,34,get target /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2311:19,0x281636bd4ea0,~
code-source-info,0x78e87f5c546,5,90941,91042,C0O90941C1O90958C5O90975C15O91005C28O90975C33O91032,,
timer-event-end,V8.CompileCode,81835
timer-event-start,V8.CompileCode,81848
code-creation,LazyCompile,12,81872,0x78e87f5c68e,34,get timeStamp /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2328:22,0x281636bd4f90,~
code-source-info,0x78e87f5c68e,5,91587,91691,C0O91587C1O91604C5O91621C15O91651C28O91621C33O91681,,
timer-event-end,V8.CompileCode,81897
timer-event-start,V8.CompileCode,81985
code-creation,LazyCompile,12,82046,0x78e87f5c81e,135,invokeEventListeners /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4585:29,0x281636bdb850,~
code-source-info,0x78e87f5c81e,5,186441,187095,C0O186441C1O186515C7O186520C13O186520C20O186561C22O186575C23O186575C28O186548C29O186624C37O186628C42O186655C48O186706C52O186702C56O186734C58O186582C67O186817C71O186809C75O186858C81O186890C82O186897C83O186956C87O186948C91O186974C97O186993C103O187048C113O187062C117O187052C128O186993C134O187094,,
timer-event-end,V8.CompileCode,82097
timer-event-start,V8.CompileCode,82112
code-creation,LazyCompile,12,82156,0x78e87f5cb26,109,set target /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2314:19,0x281636bd4f18,~
code-source-info,0x78e87f5cb26,5,91061,91565,C0O91061C1O91083C5O91091C11O91107C23O91146C31O91182C39O91224C47O91267C55O91313C63O91361C71O91405C79O91452C89O91491C93O91530C101O91107C108O91564,,
timer-event-end,V8.CompileCode,82192
timer-event-start,V8.CompileCode,82267
code-creation,LazyCompile,12,82314,0x78e87f5cef6,109,set relatedTarget /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2297:26,0x281636bd4e20,~
code-source-info,0x78e87f5cef6,5,90425,90922,C0O90425C1O90447C5O90455C11O90471C23O90510C31O90546C39O90588C47O90631C55O90677C63O90725C71O90769C81O90811C85O90847C93O90887C101O90471C108O90921,,
timer-event-end,V8.CompileCode,82351
timer-event-start,V8.CompileCode,82414
code-creation,LazyCompile,12,82438,0x78e87f5d0b6,6,get cancelBubble /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2221:25,0x281636bd4578,~
code-source-info,0x78e87f5d0b6,5,87786,87846,C0O87786C1O87815C5O87836,,
timer-event-end,V8.CompileCode,82460
timer-event-start,V8.CompileCode,82470
code-creation,LazyCompile,12,82511,0x78e87f5d2ee,109,set currentTarget /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2242:26,0x281636bd48e8,~
code-source-info,0x78e87f5d2ee,5,88565,89062,C0O88565C1O88587C5O88595C11O88611C23O88650C31O88686C39O88728C47O88771C57O88812C61O88852C69O88896C77O88943C85O88987C93O89027C101O88611C108O89061,,
timer-event-end,V8.CompileCode,82547
timer-event-start,V8.CompileCode,82609
code-creation,LazyCompile,12,83339,0x78e87f5d5c6,383,innerInvokeEventListeners /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4602:34,0x281636bdb8d0,~
code-source-info,0x78e87f5d5c
timer-event-end,V8.CompileCode,83443
timer-event-start,V8.CompileCode,83472
code-creation,LazyCompile,12,83500,0x78e87f5d926,27,handleEvent /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4425:28,0x281636bdb608,~
code-source-info,0x78e87f5d926,5,177951,178038,C0O177951C1O177986C7O177995C15O178000C19O177995C26O178037,,
timer-event-end,V8.CompileCode,83525
timer-event-start,V8.CompileCode,83532
code-creation,LazyCompile,12,83561,0x78e87f5da3e,27, /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:6724:49,0x281636be0b38,~
code-source-info,0x78e87f5da3e,5,275326,275467,C0O275326C1O275358C5O275370C11O275377C17O275393C21O275441C26O275466,,
timer-event-end,V8.CompileCode,83586
timer-event-start,V8.CompileCode,83599
code-creation,LazyCompile,12,83621,0x78e87f5db86,9,set inPassiveListener /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2285:30,0x281636bd4c40,~
code-source-info,0x78e87f5db86,5,90067,90135,C0O90067C1O90089C3O90117C8O90134,,
timer-event-end,V8.CompileCode,83644
timer-event-start,V8.CompileCode,83652
code-creation,LazyCompile,12,83671,0x78e87f5dcb6,6,get cancelBubbleImmediately /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2227:36,0x281636bd4668,~
code-source-info,0x78e87f5dcb6,5,87973,88042,C0O87973C1O88002C5O88032,,
timer-event-end,V8.CompileCode,83693
timer-event-start,V8.CompileCode,83809
code-creation,LazyCompile,12,83835,0x78e87f5ddc6,9,set path /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2291:17,0x281636bd4d30,~
code-source-info,0x78e87f5ddc6,5,90214,90265,C0O90214C1O90236C3O90247C8O90264,,
timer-event-end,V8.CompileCode,83858
timer-event-start,V8.CompileCode,83875
code-creation,LazyCompile,12,83897,0x78e87f5dee6,9,set cancelBubble /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2224:25,0x281636bd45f0,~
code-source-info,0x78e87f5dee6,5,87871,87937,C0O87871C1O87893C3O87919C8O87936,,
timer-event-end,V8.CompileCode,83919
timer-event-start,V8.CompileCode,83928
code-creation,LazyCompile,12,83948,0x78e87f5e016,9,set cancelBubbleImmediately /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2230:36,0x281636bd46f0,~
code-source-info,0x78e87f5e016,5,88078,88153,C0O88078C1O88100C3O88135C8O88152,,
timer-event-end,V8.CompileCode,83972
timer-event-start,V8.CompileCode,83980
code-creation,LazyCompile,12,83998,0x78e87f5e13e,6,get defaultPrevented /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:2256:29,0x281636bd4968,~
code-source-info,0x78e87f5e13e,5,89091,89144,C0O89091C1O89120C5O89134,,
timer-event-end,V8.CompileCode,84020
timer-event-end,V8.Execute,84026
timer-event-end,V8.Execute,84029
timer-event-start,V8.Execute,4828207
timer-event-start,V8.CompileCode,4828271
code-creation,LazyCompile,12,4828517,0x78e87f5e22e,55,handleAsyncMsgFromRust shared_queue.js:167:34,0x37b0526f7dc8,~
code-source-info,0x78e87f5e22e,9,4625,4931,C0O4625C1O4643C5O4730C11O4730C18O4774C19O4813C23O4813C28O4830C31O4863C33O4888C38O4888C45O4888C54O4930,,
timer-event-end,V8.CompileCode,4828657
timer-event-start,V8.CompileCode,4828691
code-creation,LazyCompile,12,4828970,0x78e87f5e3ee,380,shift shared_queue.js:138:17,0x37b0526f7d18,~
code-source-info,0x78e87f5e3ee,9,4042,4458,C0O4042C1O4061C9O4070C11O4069C16O4098C20O4102C26O4109C31O4123C36O4132C41O4123C45O4145C46O4157C47O4181C51O4181C57O4219C61O4219C67O4219C85O4206C127O4212C257O4236C261O4240C268O4247C273O4260C281O4269C291O4292C297O4317C301O4317C304O4337C311O4348C314O4337C318O4362C325O4373C328O4362C332O4399C338O4411C344O4411C352O4435C363O4443C373O4449C379O4454,,
timer-event-end,V8.CompileCode,4829148
timer-event-start,V8.CompileCode,4829179
code-creation,LazyCompile,12,4829261,0x78e87f5e6d6,33,size shared_queue.js:90:16,0x37b0526f7b60,~
code-source-info,0x78e87f5e6d6,9,2834,2916,C0O2834C1O2843C9O2859C11O2858C18O2880C24O2889C26O2888C29O2878C32O2912,,
timer-event-end,V8.CompileCode,4829329
timer-event-start,V8.CompileCode,4829353
code-creation,LazyCompile,12,4829449,0x78e87f5e7fe,53,getOffset shared_queue.js:109:21,0x37b0526f7c68,~
code-source-info,0x78e87f5e7fe,9,3325,3539,C0O3325C1O3339C5O3351C8O3349C13O3373C14O3383C19O3399C23O3416C24O3440C32O3456C38O3483C41O3474C44O3470C47O3455C50O3489C51O3517C52O3529,,
timer-event-end,V8.CompileCode,4829541
timer-event-start,V8.CompileCode,4829556
code-creation,LazyCompile,12,4829610,0x78e87f5e946,15,numRecords shared_queue.js:86:22,0x37b0526f7b08,~
code-source-info,0x78e87f5e946,9,2769,2817,C0O2769C1O2778C9O2794C11O2793C14O2813,,
timer-event-end,V8.CompileCode,4829664
timer-event-start,V8.CompileCode,4829685
code-creation,LazyCompile,12,4829792,0x78e87f5ea6e,96,getMeta shared_queue.js:99:19,0x37b0526f7c10,~
code-source-info,0x78e87f5ea6e,9,3079,3303,C0O3079C1O3093C5O3105C8O3103C13O3139C21O3148C27O3166C30O3162C33O3147C38O3195C46O3204C52O3222C55O3218C58O3230C61O3203C66O3242C77O3250C87O3256C93O3261C94O3281C95O3293,,
timer-event-end,V8.CompileCode,4829896
timer-event-start,V8.CompileCode,4829984
code-creation,LazyCompile,12,4830075,0x78e87f5ec06,64,reset shared_queue.js:74:17,0x37b0526f7a58,~
code-source-info,0x78e87f5ec06,9,2530,2671,C0O2530C1O2539C5O2539C8O2556C16O2565C21O2584C25O2593C33O2602C38O2625C42O2634C50O2643C56O2657C58O2655C63O2670,,
timer-event-end,V8.CompileCode,4830156
timer-event-start,V8.CompileCode,4830243
code-creation,LazyCompile,12,4830511,0x78e87f5ef06,500,asyncMsgFromRust /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1259:30,0x281636bd15e0,~
code-source-info,0x78e87f5ef06,5,49718,51283,C0O49718C1O49740C5O49781C21O49816C34O49926C47O49960C60O49996C73O50029C86O50068C99O50103C112O50137C125O50171C138O50206C151O50246C164O50289C177O50325C190O50359C203O50401C216O50453C229O50499C242O50547C255O50587C268O50622C281O50657C294O50692C307O50728C320O50767C333O50801C346O50839C359O50875C372O50909C385O50946C398O50985C411O51023C424O51066C437O51104C448O49841C452O49849C458O49849C464O49894C466O51143C470O51148C476O51148C482O51193C484O51237C493O51243C497O51237C499O51282,,
timer-event-end,V8.CompileCode,4830711
timer-event-start,V8.CompileCode,4830748
code-creation,LazyCompile,12,4830918,0x78e87f5f2c6,116,asyncMsgFromRust /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1218:30,0x281636bd14a0,~
code-source-info,0x78e87f5f2c6,5,48117,48388,C0O48117C1O48154C5O48154C11O48178C15O48183C21O48194C26O48204C29O48183C34O48238C40O48251C46O48259C52O48251C59O48279C63O48284C72O48299C75O48284C80O48317C86O48330C92O48341C98O48336C103O48369C109O48369C115O48387,,
timer-event-end,V8.CompileCode,4831042
timer-event-end,V8.Execute,4832494
timer-event-start,V8.CompileCode,4832524
code-creation,LazyCompile,12,4832568,0x78e87f5f5b6,21,ConnImpl /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3706:20,0x281636bd8ed8,~
code-source-info,0x78e87f5f5b6,5,147241,147391,C0O147241C1O147284C3O147293C7O147312C9O147328C13O147354C15O147369C20O147390,,
timer-event-end,V8.CompileCode,4832606
timer-event-start,V8.CompileCode,4834124
code-creation,LazyCompile,12,4834289,0x78e87f5f966,532,iterateHttpRequests file:///home/yankun/workspace/rust/deno/std/http/server.ts:271:31,0x78e87f424e0,~
code-source-info,0x78e87f5f966,12,10220,11569,C16O10220C25O10220C46O10220C56O10250C65O10250C72O10289C81O10289C88O10322C91O10339C94O10365C100O10352C104O10410C109O10422C123O10416C157O10414C168O10501C172O10526C176O10571C181O10576C185O10567C190O10599C192O10632C194O10638C198O10655C211O10655C232O10655C242O10806C255O10796C285O10842C290O10847C294O10838C301O10930C308O11041C313O11065C325O11133C330O11129C337O11147C343O11161C357O11147C366O11047C380O11041C426O11370C432O11555C438O11555C526O11568C529O11568C531O11568,,
timer-event-end,V8.CompileCode,4834393
timer-event-start,V8.CompileCode,4834422
code-creation,LazyCompile,12,4834487,0x78e87f5fd36,82,BufReader file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:27:16,0x78e87f430e0,~
code-source-info,0x78e87f5fd36,13,910,1183,C0O910C12O922C20O950C21O957C25O992C26O999C30O1035C31O1044C35O1061C39O1072C41O1070C46O1100C54O1144C60O1155C67O1151C74O1144C81O1182,,
timer-event-end,V8.CompileCode,4834537
timer-event-start,V8.CompileCode,4834595
code-creation,LazyCompile,12,4834637,0x78e87f5fef6,20,_reset file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:81:11,0x78e87f432f0,~
code-source-info,0x78e87f5fef6,13,2690,2845,C0O2690C1O2710C3O2719C7O2734C9O2742C13O2756C14O2765C19O2844,,
timer-event-end,V8.CompileCode,4834672
timer-event-start,V8.CompileCode,4834695
code-creation,LazyCompile,12,4834751,0x78e87f60036,68,BufWriter file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:360:16,0x78e87f435b0,~
code-source-info,0x78e87f60036,13,13538,13755,C0O13538C12O13550C20O13578C22O13586C26O13600C27O13607C31O13620C32O13629C36O13645C37O13654C42O13674C50O13732C57O13728C62O13726C67O13754,,
timer-event-end,V8.CompileCode,4834797
timer-event-start,V8.CompileCode,4834860
code-creation,LazyCompile,12,4834999,0x78e87f6033e,761,readRequest file:///home/yankun/workspace/rust/deno/std/http/server.ts:244:34,0x78e87f421c8,~
code-source-info,0x78e87f6033e,12,9350,9929,C16O9350C20O9380C29O9380C36O9438C42O9438C55O9429C83O9505C88O9510C92O9501C97O9523C102O9535C118O9539C119O9569C125O9569C138O9560C166O9607C171O9612C175O9603C180O9625C187O9631C192O9625C193O9673C200O9673C207O9698C209O9707C213O9719C215O9725C219O9782C233O9782C241O9770C259O9742C306O9754C353O9763C488O9801C493O9857C499O9836C505O9834C523O9806C570O9822C705O9869C707O9881C711O9896C715O9896C719O9916C732O9927C760O9928,,
timer-event-end,V8.CompileCode,4835093
timer-event-start,V8.CompileCode,4835104
code-creation,LazyCompile,12,4835135,0x78e87f607b6,9,TextProtoReader file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:34:16,0x78e87f441f0,~
code-source-info,0x78e87f607b6,14,908,939,C0O908C1O922C3O929C8O938,,
timer-event-end,V8.CompileCode,4835165
timer-event-start,V8.CompileCode,4835197
code-creation,LazyCompile,12,4835256,0x78e87f6096e,152,readLine file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:40:19,0x78e87f44248,~
code-source-info,0x78e87f6096e,14,1093,1229,C16O1093C20O1127C26O1127C39O1116C67O1162C72O1167C76O1158C81O1184C86O1196C102O1200C103O1209C107O1216C123O1223C151O1228,,
timer-event-end,V8.CompileCode,4835302
timer-event-start,V8.CompileCode,4835312
code-creation,LazyCompile,12,4835402,0x78e87f60ba6,257,readLineSlice file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:126:24,0x78e87f442f8,~
code-source-info,0x78e87f60ba6,14,4274,5081,C16O4274C20O4319C23O4333C24O4381C30O4383C36O4383C49O4370C77O4417C82O4422C86O4413C91O4443C96O4455C112O4459C113O4486C119O4489C125O4583C131O4597C133O4795C139O4795C147O4808C152O4837C162O4844C179O4862C180O4897C193O4906C194O4959C199O4966C206O4995C210O5024C215O5063C228O5075C256O5080,,
timer-event-end,V8.CompileCode,4835478
timer-event-start,V8.CompileCode,4835493
code-creation,LazyCompile,12,4835651,0x78e87f6107e,518,readLine file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:214:19,0x78e87f434a8,~
code-source-info,0x78e87f6107e
timer-event-end,V8.CompileCode,4835787
timer-event-start,V8.CompileCode,4835804
code-creation,LazyCompile,12,4835941,0x78e87f61556,438,readSlice file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:270:20,0x78e87f43500,~
code-source-info,0x78e87f
timer-event-end,V8.CompileCode,4836076
timer-event-start,V8.CompileCode,4836099
code-creation,LazyCompile,12,4836132,0x78e87f618ce,15,buffered file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:46:13,0x78e87f431e8,~
code-source-info,0x78e87f618ce,13,1560,1602,C0O1560C1O1585C7O1594C11O1587C14O1596,,
timer-event-end,V8.CompileCode,4836162
timer-event-start,V8.CompileCode,4836180
code-creation,LazyCompile,12,4836292,0x78e87f61b56,378,_fill file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:50:16,0x78e87f43240,~
code-source-info,0x78e87f61b56,13,1660,2506,C16O1660C20O1727C27O1729C32O1753C38O1757C47O1776C53O1784C59O1757C64O1800C70O1815C77O1807C81O1830C82O1837C86O1869C92O1879C98O1883C102O1871C107O1909C116O1915C120O1909C121O2046C129O2077C130O2077C135O2033C136O2123C142O2126C148O2136C154O2140C160O2154C166O2140C173O2126C187O2112C215O2182C220O2187C224O2178C229O2210C230O2219C234O2243C247O2250C248O2277C256O2287C265O2277C270O2323C278O2333C281O2330C285O2349C286O2356C291O2379C304O2386C305O2083C314O2419C327O2456C344O2425C349O2419C377O2505,,
timer-event-end,V8.CompileCode,4836400
timer-event-start,V8.CompileCode,4836423
code-creation,LazyCompile,12,4836461,0x78e87f61e66,24,read /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3714:13,0x281636bd8f88,~
code-source-info,0x78e87f61e66,5,147483,147547,C0O147483C1O147501C5O147519C11O147529C17O147519C23O147537,,
timer-event-end,V8.CompileCode,4836496
timer-event-start,V8.CompileCode,4836506
code-creation,LazyCompile,12,4836572,0x78e87f6200e,180,read /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1363:24,0x281636bd1a58,~
code-source-info,0x78e87f6200e,5,53555,53867,C16O53555C20O53588C24O53616C34O53642C46O53616C60O53588C88O53668C89O53678C94O53697C105O53703C110O53697C111O53751C112O53761C117O53781C121O53796C137O53800C138O53838C151O53851C179O53866,,
timer-event-end,V8.CompileCode,4836628
timer-event-start,V8.CompileCode,4836639
code-creation,LazyCompile,12,4836728,0x78e87f62286,195,sendAsyncMinimal /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1165:30,0x281636bd10b8,~
code-source-info,0x78e87f62286,5,45990,46681,C0O45990C1O46040C5O46040C10O46078C21O46091C25O46112C37O46125C41O46140C52O46153C56O46192C60O46197C66O46197C72O46237C76O46247C82O46252C90O46267C100O46252C107O46300C109O46337C114O46356C120O46368C126O46384C130O46395C137O46337C144O46428C148O46428C155O46511C161O46526C167O46511C174O46601C180O46617C186O46617C192O46660C194O46675,,
timer-event-end,V8.CompileCode,4836805
timer-event-start,V8.CompileCode,4836814
code-creation,LazyCompile,12,4836842,0x78e87f6249e,24,nextPromiseId /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1138:27,0x281636bd0dc0,~
code-source-info,0x78e87f6249e,5,44956,44999,C0O44956C1O44969C15O44990C23O44993,,
timer-event-end,V8.CompileCode,4836874
timer-event-start,V8.Execute,4898560
timer-event-start,V8.CompileCode,4898636
code-creation,LazyCompile,12,4898746,0x78e87f64e8e,108,asyncMsgFromRust /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1156:30,0x281636bd1040,~
code-source-info,0x78e87f64e8e,5,45570,45911,C0O45570C1O45606C6O45625C12O45637C18O45653C22O45664C29O45606C36O45693C40O45693C47O45744C53O45755C59O45798C65O45814C71O45814C78O45838C84O45854C90O45860C95O45889C101O45889C107O45910,,
timer-event-end,V8.CompileCode,4898797
timer-event-start,V8.CompileCode,4898821
code-creation,LazyCompile,12,4898872,0x78e87f650ce,69,recordFromBufMinimal /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1141:34,0x281636bd0fe8,~
code-source-info,0x78e87f650ce,5,45033,45272,C0O45033C1O45067C9O45074C14O45094C23O45100C27O45094C28O45140C35O45177C44O45194C50O45222C59O45252C68O45266,,
timer-event-end,V8.CompileCode,4898905
timer-event-start,V8.GCScavenger,4899048
timer-event-start,V8.GCScavengerForeground,4899056
timer-event-end,V8.GCScavengerForeground,4900378
timer-event-end,V8.GCScavenger,4900385
timer-event-end,V8.Execute,4902333
timer-event-start,V8.CompileCode,4902416
code-creation,LazyCompile,12,4902463,0x78e87f6617e,37,assert file:///home/yankun/workspace/rust/deno/std/testing/asserts.ts:99:23,0x78e87f48300,~
code-source-info,0x78e87f6617e,16,2914,2996,C0O2914C16O2937C20O2958C29O2964C34O2958C36O2995,,
timer-event-end,V8.CompileCode,4902488
timer-event-start,V8.CompileCode,4904162
code-creation,LazyCompile,12,4904224,0x78e87f663be,91,skipSpace file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:152:14,0x78e87f44350,~
code-source-info,0x78e87f663be,14,5095,5324,C0O5095C1O5117C4O5141C7O5150C11O5146C16O5128C17O5177C19O5182C24O5190C35O5190C39O5186C46O5208C51O5216C62O5216C66O5212C71O5250C73O5286C79O5159C88O5309C90O5318,,
timer-event-end,V8.CompileCode,4904264
timer-event-start,V8.CompileCode,4905349
code-creation,LazyCompile,12,4905386,0x78e87f66686,27,str file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:8:13,0x78e87f440e8,~
code-source-info,0x78e87f66686,14,378,493,C0O378C1O390C6O417C8O427C9O453C15O473C21O473C26O485,,
timer-event-end,V8.CompileCode,4905412
timer-event-start,V8.CompileCode,4909464
code-creation,LazyCompile,12,4909640,0x78e87f66946,828,readMIMEHeader file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:66:25,0x78e87f442a0,~
code-source-info,0x78e87f66946,14,1898,4250,C16O1898C20O1921C25O1921C32O1948C35O2044C41O2046C51O2046C65O2033C93O2075C98O2080C102O2071C107O2099C112O2111C128O2115C129O2139C130O2146C135O2153C146O2153C150O2150C156O2173C161O2180C172O2180C176O2177C181O2229C187O2229C200O2218C230O2282C236O2284C246O2284C260O2271C288O2313C293O2318C297O2309C302O2337C309O2343C314O2337C315O2392C316O2399C321O2406C332O2406C336O2403C342O2426C347O2433C358O2433C362O2430C367O2463C382O2526C394O2469C399O2463C400O2558C401O2607C407O2607C420O2596C448O2673C453O2678C457O2669C462O2699C469O2705C474O2699C475O2750C482O2761C487O2784C500O2793C501O2995C507O3003C518O3003C524O2995C531O3031C532O3037C537O3060C552O3115C564O3066C569O3060C570O3166C575O3199C576O3195C583O3212C586O3204C591O3220C602O3220C606O3217C611O3181C612O3253C621O3373C625O3380C634O3380C642O3373C648O3683C650O3691C655O3716C657O3797C663O3842C667O3837C674O3875C679O3882C690O3882C694O3879C701O3901C706O3908C717O3908C721O3905C726O3828C727O3943C736O3988C740O3995C746O3995C753O3988C762O4179C768O4179C799O4249C827O4249,,
timer-event-end,V8.CompileCode,4909779
timer-event-start,V8.CompileCode,4909788
code-creation,LazyCompile,12,4909810,0x78e87f66e96,19,Headers /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4939:5,0x281636bdc668,~
code-source-info,0x78e87f66e96,5,201195,201195,C6O201195C7O201195C13O201195C18O201195,,
timer-event-end,V8.CompileCode,4909833
timer-event-start,V8.CompileCode,4909840
code-creation,LazyCompile,12,4909857,0x78e87f66f86,19,DomIterable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4152:29,0x281636bda6b0,~
code-source-info,0x78e87f66f86,5,165048,165048,C6O165048C7O165048C13O165048C18O165048,,
timer-event-end,V8.CompileCode,4909880
timer-event-start,V8.CompileCode,4909886
code-creation,LazyCompile,12,4910022,0x78e87f672f6,1032,HeadersBase /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4844:20,0x281636bdc278,~
code-source-info,0x78e87f672f6,5,196903,198557,C0O196903C1O196924C5O196961C16O196967C21O196961C22O197080C26O197084C32O197119C34O197124C38O197141C45O197137C50O197135C56O197201C58O197206C62O197223C67O197219C72O197217C76O197246C81O197256C87O197256C94O197313C115O197304C146O197293C147O197304C150O197553C154O197564C164O197632C174O197564C179O197695C186O197717C193O197727C198O197695C206O197690C227O197675C269O197681C404O197762C410O197762C415O197812C421O197812C426O197881C428O197886C430O197885C435O197897C441O197897C448O197932C450O197937C452O197936C457O197948C468O197958C472O197977C484O197995C494O197948C596O198074C600O198120C605O198127C611O198127C618O198181C639O198170C670O198159C671O198170C674O198231C676O198235C681O198297C687O198297C695O198292C716O198277C758O198283C893O198363C899O198363C904O198413C910O198413C915O198460C917O198465C919O198464C924O198476C930O198476C1031O198556,,
timer-event-end,V8.CompileCode,4910133
timer-event-start,V8.CompileCode,4910148
code-creation,LazyCompile,12,4910173,0x78e87f678f6,9,isHeaders /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4837:23,0x281636bdc0a8,~
code-source-info,0x78e87f678f6,5,196628,196760,C0O196628C1O196722C3O196746C5O196735C8O196754,,
timer-event-end,V8.CompileCode,4910198
timer-event-start,V8.CompileCode,4910227
code-creation,LazyCompile,12,4910319,0x78e87f67be6,436,peek file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:325:15,0x78e87f43558,~
code-source-info,0x78e87f67be
timer-event-end,V8.CompileCode,4910407
timer-event-start,V8.CompileCode,4910874
code-creation,LazyCompile,12,4910907,0x78e87f68b1e,24,close /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3717:14,0x281636bd8fe0,~
code-source-info,0x78e87f68b1e,5,147561,147615,C0O147561C1O147578C5O147589C11O147600C17O147589C23O147614,,
timer-event-end,V8.CompileCode,4910933
timer-event-start,V8.CompileCode,4910939
code-creation,LazyCompile,12,4910968,0x78e87f68c66,41,close /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1438:19,0x281636bd1c10,~
code-source-info,0x78e87f68c66,5,56066,56144,C0O56066C1O56082C5O56101C15O56119C29O56131C33O56101C40O56143,,
timer-event-end,V8.CompileCode,4910994
timer-event-start,V8.CompileCode,4914918
code-creation,LazyCompile,12,4914994,0x78e87f68f2e,330,append /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4899:15,0x281636bdc458,~
code-source-info,0x78e87f68f2e,5,199524,199949,C3O199524C4O199552C8O199563C18O199609C28O199563C33O199666C39O199666C47O199661C65O199640C107O199649C237O199714C243O199714C248O199755C254O199755C259O199803C261O199808C263O199807C268O199819C274O199819C281O199857C285O199864C297O199870C307O199905C309O199910C311O199909C316O199921C322O199921C329O199948,,
timer-event-end,V8.CompileCode,4915043
timer-event-start,V8.CompileCode,4915053
code-creation,LazyCompile,12,4915088,0x78e87f691ee,75,_normalizeParams /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4880:25,0x281636bdc2f0,~
code-source-info,0x78e87f691ee,5,198707,198855,C0O198707C1O198735C6O198742C12O198754C18O198755C24O198782C29O198790C35O198803C41O198804C47O198824C58O198832C68O198838C74O198845,,
timer-event-end,V8.CompileCode,4915121
timer-event-start,V8.CompileCode,4915153
code-creation,LazyCompile,12,4915195,0x78e87f69396,54,_validateName /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4888:22,0x281636bdc368,~
code-source-info,0x78e87f69396,5,199072,199247,C0O199072C1O199093C7O199115C13O199115C22O199134C27O199160C34O199183C46O199166C51O199160C53O199246,,
timer-event-end,V8.CompileCode,4915225
timer-event-start,V8.CompileCode,4915273
code-creation,LazyCompile,12,4915307,0x78e87f695a6,47,_validateValue /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4893:23,0x281636bdc3e0,~
code-source-info,0x78e87f695a6,5,199270,199439,C0O199270C1O199292C7O199319C13O199319C20O199350C27O199373C39O199356C44O199350C46O199438,,
timer-event-end,V8.CompileCode,4915336
code-creation,RegExp,4,4915753,0x236ca382040,800,[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]
code-creation,RegExp,4,4915794,0x236ca3823a0,782,[^\\t\\x20-\\x7e\\x80-\\xff]
timer-event-start,V8.CompileCode,4923502
code-creation,LazyCompile,12,4923544,0x78e87f69dd6,17,ServerRequest file:///home/yankun/workspace/rust/deno/std/http/server.ts:84:16,0x78e87f422d0,~
code-source-info,0x78e87f69dd6,12,2772,2814,C0O2772C1O2797C8O2797C11O2795C16O2813,,
timer-event-end,V8.CompileCode,4923568
timer-event-start,V8.CompileCode,4923660
code-creation,LazyCompile,12,4923775,0x78e87f6a0f6,295,parseHTTPVersion file:///home/yankun/workspace/rust/deno/std/http/server.ts:207:33,0x78e87f42170,~
code-source-info,0x78e87f6a0f6,12,8175,9316,C0O8175C1O8188C20O8241C24O8255C25O8293C29O8307C30O8351C38O8414C44O8477C54O8477C61O8516C63O8566C73O8566C80O8592C81O8600C86O8623C88O8678C94O8693C104O8693C109O8706C114O8678C122O8743C127O8743C133O8789C139O8789C151O8823C158O8861C165O8890C170O8915C172O8970C180O8984C185O8970C192O9016C197O9016C203O9062C209O9062C221O9096C228O9134C235O9163C240O9188C242O9221C253O9229C263O9236C269O9243C270O9264C281O9306C289O9270C294O9264,,
timer-event-end,V8.CompileCode,4923852
timer-event-start,V8.CompileCode,4923891
code-creation,LazyCompile,12,4923980,0x78e87f6a616,252,fixLength file:///home/yankun/workspace/rust/deno/std/http/server.ts:179:19,0x78e87f42118,~
code-source-info,0x78e87f6a616,12,6895,7965,C0O6895C1O6933C7O6941C17O6941C24O6968C26O7027C36O7027C43O7059C51O7066C56O7102C61O7122C73O7122C82O7106C90O7171C98O7178C103O7201C112O7207C116O7201C117O7317C123O7325C134O7355C139O7325C145O7407C151O7415C161O7415C168O7454C176O7461C183O7475C187O7482C192O7505C201O7511C205O7505C206O7584C210O7597C216O7605C226O7605C233O7861C244O7867C249O7861C251O7964,,
timer-event-end,V8.CompileCode,4924040
timer-event-start,V8.CompileCode,4924049
code-creation,LazyCompile,12,4924100,0x78e87f6a92e,231,get /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4914:12,0x281636bdc508,~
code-source-info,0x78e87f6a92e,5,200220,200506,C3O200220C4O200241C8O200252C18O200295C28O200252C33O200342C39O200342C46O200337C64O200326C194O200383C200O200383C205O200433C207O200438C209O200437C214O200449C220O200449C227O200475C230O200496,,
timer-event-end,V8.CompileCode,4924138
timer-event-start,V8.CompileCode,4927816
code-creation,LazyCompile,12,4927867,0x78e87f6afd6,128,respond file:///home/yankun/workspace/rust/deno/std/http/server.ts:171:18,0x78e87f423d8,~
code-source-info,0x78e87f6afd6,12,6626,6874,C16O6626C20O6671C25O6696C31O6677C45O6671C70O6853C76O6858C82O6858C99O6873C127O6873,,
timer-event-end,V8.CompileCode,4927896
timer-event-start,V8.CompileCode,4927904
code-creation,LazyCompile,12,4928057,0x78e87f6b356,1020,writeResponse file:///home/yankun/workspace/rust/deno/std/http/server.ts:47:36,0x78e87f420c0,~
code-source-info,0x78e87f6b
timer-event-end,V8.CompileCode,4928168
timer-event-start,V8.CompileCode,4928179
code-creation,LazyCompile,12,4928209,0x78e87f6b93e,29,bufWriter file:///home/yankun/workspace/rust/deno/std/http/server.ts:8:19,0x78e87f41fb8,~
code-source-info,0x78e87f6b93e,12,450,565,C0O450C1O477C6O466C11O498C13O507C14O533C23O540C28O557,,
timer-event-end,V8.CompileCode,4928235
timer-event-start,V8.CompileCode,4928251
code-creation,LazyCompile,12,4928300,0x78e87f6bb06,140,setContentLength file:///home/yankun/workspace/rust/deno/std/http/server.ts:16:33,0x78e87f42010,~
code-source-info,0x78e87f6bb06,12,598,1040,C0O598C1O615C7O650C12O646C17O644C21O677C27O700C33O708C43O708C50O751C56O767C59O756C64O818C70O823C76O853C82O861C92O897C98O897C104O861C112O961C118O969C132O969C139O1039,,
timer-event-end,V8.CompileCode,4928342
timer-event-start,V8.CompileCode,4928373
code-creation,LazyCompile,12,4928429,0x78e87f6bd5e,226,has /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4921:12,0x281636bdc560,~
code-source-info,0x78e87f6bd5e,5,200518,200763,C3O200518C4O200539C8O200550C18O200593C28O200550C33O200640C39O200640C46O200635C64O200624C194O200681C200O200681C205O200717C207O200729C209O200728C214O200740C220O200740C225O200753,,
timer-event-end,V8.CompileCode,4928466
timer-event-start,V8.CompileCode,4928532
code-creation,LazyCompile,12,4928582,0x78e87f6c03e,247,DomIterableMixin.DomIterable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4181:31,0x281636bda8e0,~
code-source-info,0x78e87f6c03e,5,166332,166536,C16O166332C17O166332C38O166332C41O166535C42O166456C44O166456C70O166443C101O166432C102O166443C105O166492C115O166492C136O166492C244O166535C246O166535,,
timer-event-end,V8.CompileCode,4928619
timer-event-start,V8.CompileCode,4928871
code-creation,LazyCompile,12,4928961,0x78e87f6c38e,400,write file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:422:16,0x78e87f43818,~
code-source-info,0x78e87f6c38e
timer-event-end,V8.CompileCode,4929036
timer-event-start,V8.CompileCode,4929051
code-creation,LazyCompile,12,4929076,0x78e87f6c6ae,21,available file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:410:14,0x78e87f43768,~
code-source-info,0x78e87f6c6ae,13,14974,15029,C0O14974C1O14999C7O15003C13O15021C17O15014C20O15023,,
timer-event-end,V8.CompileCode,4929099
timer-event-start,V8.CompileCode,4929110
code-creation,LazyCompile,12,4929158,0x78e87f6c7de,125,copyBytes file:///home/yankun/workspace/rust/deno/std/io/util.ts:8:26,0x78e87f495e0,~
code-source-info,0x78e87f6c7de,18,356,589,C0O356C18O382C23O393C32O400C37O405C43O418C49O405C57O393C65O450C73O461C78O480C86O491C91O516C100O516C108O546C114O546C120O576C124O587,,
timer-event-end,V8.CompileCode,4929194
timer-event-start,V8.CompileCode,4930356
code-creation,LazyCompile,12,4930434,0x78e87f6cc76,303,flush file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:386:16,0x78e87f43710,~
code-source-info,0x78e87f6cc76,13,14346,14900,C16O14346C20O14368C26O14405C30O14394C31O14427C38O14429C43O14448C56O14455C57O14472C63O14516C69O14519C75O14530C81O14534C90O14551C96O14534C104O14519C118O14505C152O14503C163O14598C165O14607C169O14624C171O14624C172O14664C176O14657C181O14681C182O14687C187O14715C193O14719C202O14741C211O14719C216O14761C224O14771C227O14768C231O14815C242O14811C247O14809C251O14860C255O14849C256O14883C257O14890C274O14899C302O14899,,
timer-event-end,V8.CompileCode,4930499
timer-event-start,V8.CompileCode,4930513
code-creation,LazyCompile,12,4930540,0x78e87f6cf16,24,write /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3711:14,0x281636bd8f30,~
code-source-info,0x78e87f6cf16,5,147405,147470,C0O147405C1O147423C5O147441C11O147452C17O147441C23O147460,,
timer-event-end,V8.CompileCode,4930565
timer-event-start,V8.CompileCode,4930571
code-creation,LazyCompile,12,4930615,0x78e87f6d0b6,153,write /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1407:25,0x281636bd1b08,~
code-source-info,0x78e87f6d0b6,5,54974,55218,C16O54974C20O55008C24O55036C34O55062C46O55036C60O55008C88O55089C89O55100C94O55119C105O55125C110O55119C111O55188C124O55202C152O55217,,
timer-event-end,V8.CompileCode,4930649
timer-event-start,V8.GCScavenger,4932749
timer-event-start,V8.GCScavengerForeground,4932758
timer-event-end,V8.GCScavengerForeground,4933763
timer-event-end,V8.GCScavenger,4933771
timer-event-start,V8.Execute,4958738
timer-event-end,V8.Execute,4960136
timer-event-start,V8.GCScavenger,4973176
timer-event-start,V8.GCScavengerForeground,4973187
timer-event-end,V8.GCScavengerForeground,4973735
timer-event-end,V8.GCScavenger,4973741
timer-event-start,V8.OptimizeCode,4984316
timer-event-start,V8.RecompileSynchronous,4984469
timer-event-end,V8.RecompileSynchronous,4986970
timer-event-end,V8.OptimizeCode,4986984
timer-event-start,V8.RecompileConcurrent,4987067
timer-event-start,V8.OptimizeCode,4987488
timer-event-start,V8.RecompileSynchronous,4987503
timer-event-end,V8.RecompileSynchronous,4988153
timer-event-end,V8.OptimizeCode,4988162
timer-event-start,V8.RecompileConcurrent,4988174
timer-event-start,V8.OptimizeCode,4991600
timer-event-start,V8.RecompileSynchronous,4991629
timer-event-end,V8.RecompileSynchronous,4991941
timer-event-end,V8.OptimizeCode,4991950
timer-event-start,V8.RecompileConcurrent,4991962
timer-event-end,V8.RecompileConcurrent,4993117
timer-event-start,V8.RecompileSynchronous,4993147
code-creation,LazyCompile,0,4993196,0x236ca3831e0,225,isASCIIByte /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:461:25,0x281636bcf730,*
code-source-info,0x236ca3831e0,5,19374,19424,C0O19374C83O19326I0C106O19418C142O19374,F0O19395,S0x281636bcf6d8
timer-event-end,V8.RecompileSynchronous,4993224
timer-event-end,V8.RecompileConcurrent,4998040
timer-event-start,V8.RecompileSynchronous,4998068
code-creation,LazyCompile,0,4998117,0x236ca383320,3156,codePointsToString /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:706:32,0x281636bcfbd8,*
code-source-info,0x236ca383320,5,28598,28748,C0O28598C83O28658C130O28652C241O28641C251O28696C597O28652C734O28641C744O28696C901O28686C997O28742C1005O28686C1043O28598C1117O28641C1172O28696C1889O28641C1928O28696,,
timer-event-end,V8.RecompileSynchronous,4998154
timer-event-start,V8.Execute,5004239
timer-event-end,V8.Execute,5005407
timer-event-end,V8.RecompileConcurrent,5008361
timer-event-start,V8.RecompileSynchronous,5008380
code-creation,LazyCompile,0,5008466,0x236ca383fc0,7144,decode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:778:15,0x281636bd0318,*
code-source-info,0x236ca383fcx281636bcfae8S0x281636bcfd00S0x281636bcfbd8S0x281636bcfc30S0x281636bcf7e0
timer-event-end,V8.RecompileSynchronous,5008592
timer-event-start,V8.GCScavenger,5014343
timer-event-start,V8.GCScavengerForeground,5014359
timer-event-end,V8.GCScavengerForeground,5014918
timer-event-end,V8.GCScavenger,5014924
timer-event-start,V8.OptimizeCode,5020155
timer-event-start,V8.RecompileSynchronous,5020177
timer-event-end,V8.RecompileSynchronous,5020873
timer-event-start,V8.RecompileConcurrent,5020883
timer-event-end,V8.OptimizeCode,5020903
timer-event-end,V8.RecompileConcurrent,5021961
timer-event-start,V8.RecompileSynchronous,5021978
code-creation,LazyCompile,0,5022026,0x236ca385c00,593,handler /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:481:16,0x281636bcf838,*
code-source-info,0x236ca385c00,5,19962,23062,C0O19962C83O20000C116O20026C153O20039C167O20082C184O20172C193O20261C286O20301C298O20887C302O20900C313O22279C325O19326I1C335O20929C347O21072C359O21028C366O20225C375O19962C415O20261,F0O20929F1O19395I0,S0x281636bcf730S0x281636bcf6d8
timer-event-end,V8.RecompileSynchronous,5022068
timer-event-start,V8.Execute,5036810
timer-event-end,V8.Execute,5037659
timer-event-start,V8.Execute,5064586
timer-event-end,V8.Execute,5065434
timer-event-start,V8.OptimizeCode,5071147
timer-event-start,V8.RecompileSynchronous,5071169
timer-event-end,V8.RecompileSynchronous,5072859
timer-event-start,V8.RecompileConcurrent,5072869
timer-event-end,V8.OptimizeCode,5072884
timer-event-start,V8.OptimizeCode,5075669
timer-event-start,V8.RecompileSynchronous,5075688
timer-event-end,V8.RecompileSynchronous,5075916
timer-event-end,V8.OptimizeCode,5075925
timer-event-start,V8.RecompileConcurrent,5075940
timer-event-end,V8.RecompileConcurrent,5077895
timer-event-start,V8.RecompileSynchronous,5077919
code-creation,LazyCompile,0,5077965,0x236ca385ea0,766,charCode file:///home/yankun/workspace/rust/deno/std/io/util.ts:17:25,0x78e87f49638,*
code-source-info,0x236ca385ea0,18,614,649,C0O614C83O633C492O647C534O614C574O633,,
timer-event-end,V8.RecompileSynchronous,5077988
timer-event-end,V8.RecompileConcurrent,5078993
timer-event-start,V8.RecompileSynchronous,5079008
code-creation,LazyCompile,0,5079071,0x236ca3861e0,3220,encode /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:828:15,0x281636bd0540,*
code-source-info,0x236ca3861ex281636bcf8a8S0x281636bcf6d8S0x281636bcfd00S0x281636bcfc30S0x281636bcf788
timer-event-end,V8.RecompileSynchronous,5079156
timer-event-start,V8.GCScavenger,5099378
timer-event-start,V8.GCScavengerForeground,5099395
timer-event-end,V8.GCScavengerForeground,5100263
timer-event-end,V8.GCScavenger,5100272
timer-event-start,V8.Execute,5111186
timer-event-end,V8.Execute,5112116
timer-event-start,V8.Execute,5131168
timer-event-end,V8.Execute,5131835
timer-event-start,V8.OptimizeCode,5134491
timer-event-start,V8.RecompileSynchronous,5134512
timer-event-end,V8.RecompileSynchronous,5135133
timer-event-end,V8.OptimizeCode,5135144
timer-event-start,V8.RecompileConcurrent,5135157
timer-event-end,V8.RecompileConcurrent,5144492
timer-event-start,V8.RecompileSynchronous,5144535
code-creation,LazyCompile,0,5144586,0x236ca386ec0,3242,skipSpace file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:152:14,0x78e87f44350,*
code-source-info,0x236ca386ec0,14,5095,5324,C0O5095C83O5150C116O5146C168O5318C177O5128C189O5182C235O5190C304O633I0C648O5186C657O5208C720O633I1C1064O5212C1104O5159C1152O5146C1161O5128C1171O5182C1267O633I0C1620O5186C1628O5208C1680O633I1C2034O5212C2042O5286C2062O5318C2082O5095C2122O5128C2166O633I0C2319O633I1C2469O5128C2554O633I0C2710O633I1C2924O5318C2968O5190,F0O5190F0O5216,S0x78e87f49638
timer-event-end,V8.RecompileSynchronous,5144652
timer-event-start,V8.GCScavenger,5150463
timer-event-start,V8.GCScavengerForeground,5150472
timer-event-end,V8.GCScavengerForeground,5151213
timer-event-end,V8.GCScavenger,5151221
timer-event-start,V8.Execute,5154418
timer-event-end,V8.Execute,5155104
timer-event-start,V8.Execute,5174140
timer-event-end,V8.Execute,5174801
timer-event-start,V8.Execute,5193736
timer-event-end,V8.Execute,5194396
timer-event-start,V8.GCScavenger,5195187
timer-event-start,V8.GCScavengerForeground,5195196
timer-event-end,V8.GCScavengerForeground,5195675
timer-event-end,V8.GCScavenger,5195681
timer-event-start,V8.Execute,5214053
timer-event-end,V8.Execute,5214721
timer-event-start,V8.Execute,5233653
timer-event-end,V8.Execute,5234313
timer-event-start,V8.GCScavenger,5240289
timer-event-start,V8.GCScavengerForeground,5240298
timer-event-end,V8.GCScavengerForeground,5240578
timer-event-end,V8.GCScavenger,5240583
timer-event-start,V8.Execute,5253775
timer-event-end,V8.Execute,5254437
timer-event-start,V8.Execute,5273387
timer-event-end,V8.Execute,5274053
timer-event-start,V8.GCScavenger,5285921
timer-event-start,V8.GCScavengerForeground,5285931
timer-event-end,V8.GCScavengerForeground,5286208
timer-event-end,V8.GCScavenger,5286214
timer-event-start,V8.Execute,5293478
timer-event-end,V8.Execute,5294146
timer-event-start,V8.Execute,5313068
timer-event-end,V8.Execute,5313739
timer-event-start,V8.OptimizeCode,5316737
timer-event-start,V8.RecompileSynchronous,5316760
timer-event-end,V8.RecompileSynchronous,5317170
timer-event-end,V8.OptimizeCode,5317180
timer-event-start,V8.RecompileConcurrent,5317194
timer-event-end,V8.RecompileConcurrent,5320335
timer-event-start,V8.RecompileSynchronous,5320365
code-creation,LazyCompile,0,5320437,0x236ca387bc0,638,_normalizeParams /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4880:25,0x281636bdc2f0,*
code-source-info,0x236ca387bc0,5,198707,198855,C0O198707C83O198742C133O198755C190O198790C234O198804C307O198824C391O198832C399O198838C403O198845C413O198707,,
timer-event-end,V8.RecompileSynchronous,5320469
timer-event-start,V8.GCScavenger,5331991
timer-event-start,V8.GCScavengerForeground,5332001
timer-event-end,V8.GCScavengerForeground,5332362
timer-event-end,V8.GCScavenger,5332368
timer-event-start,V8.Execute,5333555
timer-event-end,V8.Execute,5334228
timer-event-start,V8.Execute,5352843
timer-event-end,V8.Execute,5353506
timer-event-start,V8.Execute,5372079
timer-event-end,V8.Execute,5372833
timer-event-start,V8.GCScavenger,5376421
timer-event-start,V8.GCScavengerForeground,5376431
timer-event-end,V8.GCScavengerForeground,5376757
timer-event-end,V8.GCScavenger,5376763
timer-event-start,V8.OptimizeCode,5376996
timer-event-start,V8.RecompileSynchronous,5377019
timer-event-end,V8.RecompileSynchronous,5382243
timer-event-end,V8.OptimizeCode,5382254
timer-event-start,V8.RecompileConcurrent,5382269
timer-event-start,V8.OptimizeCode,5382400
timer-event-start,V8.RecompileSynchronous,5382414
timer-event-end,V8.RecompileSynchronous,5384773
timer-event-end,V8.OptimizeCode,5384783
timer-event-start,V8.RecompileConcurrent,5384794
timer-event-start,V8.OptimizeCode,5392235
timer-event-start,V8.RecompileSynchronous,5392258
timer-event-end,V8.RecompileSynchronous,5394963
timer-event-end,V8.OptimizeCode,5394981
timer-event-start,V8.RecompileConcurrent,5394994
timer-event-end,V8.RecompileConcurrent,5401869
timer-event-start,V8.RecompileSynchronous,5401891
code-creation,LazyCompile,0,5401965,0x236ca387e80,6092,readLine file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:214:19,0x78e87f434a8,*
code-source-info,0x236ca387ex78e87f43500
timer-event-end,V8.RecompileSynchronous,5402100
timer-event-start,V8.Execute,5403009
timer-event-end,V8.Execute,5403671
timer-event-end,V8.RecompileConcurrent,5409463
timer-event-start,V8.RecompileSynchronous,5409484
code-creation,LazyCompile,0,5409565,0x236ca3896a0,5384,readSlice file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:270:20,0x78e87f43500,*
code-source-info,0x236ca3896ax78e87f431e8S0x78e87f43240
timer-event-end,V8.RecompileSynchronous,5409669
timer-event-end,V8.RecompileConcurrent,5412855
timer-event-start,V8.RecompileSynchronous,5412867
code-creation,LazyCompile,0,5412945,0x236ca38ac00,14128,readMIMEHeader file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:66:25,0x78e87f442a0,*
code-source-info,0x236ca38acx281636bdc668S0x281636bda6b0S0x78e87f49638S0x78e87f440e8S0x78e87f442f8S0x78e87f43558
timer-event-end,V8.RecompileSynchronous,5413157
timer-event-start,V8.OptimizeCode,5416852
timer-event-start,V8.RecompileSynchronous,5416875
timer-event-start,V8.CollectSourcePositions,5419308
timer-event-end,V8.CollectSourcePositions,5419361
timer-event-end,V8.RecompileSynchronous,5422253
timer-event-start,V8.RecompileConcurrent,5422268
timer-event-end,V8.OptimizeCode,5422291
timer-event-start,V8.Execute,5426785
timer-event-end,V8.Execute,5427458
timer-event-start,V8.GCScavenger,5435394
timer-event-start,V8.GCScavengerForeground,5435404
timer-event-end,V8.GCScavengerForeground,5435646
timer-event-end,V8.GCScavenger,5435652
timer-event-start,V8.Execute,5443821
timer-event-end,V8.Execute,5444488
timer-event-end,V8.RecompileConcurrent,5455184
timer-event-start,V8.RecompileSynchronous,5455208
code-creation,LazyCompile,0,5455331,0x236ca38e380,13224,writeResponse file:///home/yankun/workspace/rust/deno/std/http/server.ts:47:36,0x78e87f420c0,*
code-source-info,0x236ca38ex78e87f41fb8S0x281636bd03e0S0x78e87f43710S0x78e87f48300S0x78e87f43818S0x78e87f43768S0x78e87f495e0
timer-event-end,V8.RecompileSynchronous,5455538
timer-event-start,V8.Execute,5460124
timer-event-end,V8.Execute,5460788
timer-event-start,V8.OptimizeCode,5472447
timer-event-start,V8.RecompileSynchronous,5472470
timer-event-end,V8.RecompileSynchronous,5476301
timer-event-start,V8.RecompileConcurrent,5476316
timer-event-end,V8.OptimizeCode,5476339
timer-event-start,V8.GCScavenger,5477963
timer-event-start,V8.GCScavengerForeground,5477972
timer-event-end,V8.GCScavengerForeground,5478452
timer-event-end,V8.GCScavenger,5478459
timer-event-start,V8.Execute,5480116
timer-event-end,V8.Execute,5480782
timer-event-start,V8.Execute,5495487
timer-event-end,V8.Execute,5496146
timer-event-end,V8.RecompileConcurrent,5497206
timer-event-start,V8.RecompileSynchronous,5497227
code-creation,LazyCompile,0,5497327,0x236ca391780,9184,readRequest file:///home/yankun/workspace/rust/deno/std/http/server.ts:244:34,0x78e87f421c8,*
code-source-info,0x236cax78e87f441f0S0x78e87f422d0S0x78e87f44248S0x78e87f440e8S0x78e87f42118S0x78e87f42170S0x78e87f48d28S0x78e87f576e8
timer-event-end,V8.RecompileSynchronous,5497447
timer-event-start,V8.Execute,5510254
timer-event-end,V8.Execute,5510921
timer-event-start,V8.GCScavenger,5513731
timer-event-start,V8.GCScavengerForeground,5513739
timer-event-end,V8.GCScavengerForeground,5514028
timer-event-end,V8.GCScavenger,5514034
timer-event-start,V8.Execute,5525167
timer-event-end,V8.Execute,5525832
timer-event-start,V8.OptimizeCode,5532028
timer-event-start,V8.RecompileSynchronous,5532051
timer-event-start,V8.CollectSourcePositions,5533328
timer-event-end,V8.CollectSourcePositions,5533414
timer-event-end,V8.RecompileSynchronous,5533813
timer-event-start,V8.RecompileConcurrent,5533821
timer-event-end,V8.OptimizeCode,5533835
timer-event-end,V8.RecompileConcurrent,5537203
timer-event-start,V8.RecompileSynchronous,5537218
code-creation,LazyCompile,0,5537295,0x236ca393ba0,1672,append /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4899:15,0x281636bdc458,*
code-source-info,0x236ca393ba0,5,199524,199949,C0O199524C131O5298I3C141O199666C175O198742I2C225O198755I2C284O198790I2C329O198804I2C363O199640C397O199649C422O199714C446O199115I1C526O199134I1C540O199755C564O199319I0C638O199807C666O199819C735O199857C809O199921C854O199948C865O199864C900O199350I0C950O199373I0C990O199160I1C1037O199183I1C1077O5339I3C1089O199524C1129O199857,F0O199755F1O199714F2O199666F3O199563,S0x281636bdc3e0S0x281636bdc368S0x281636bdc2f0S0x281636bce8b8
timer-event-end,V8.RecompileSynchronous,5537357
timer-event-start,V8.Execute,5541407
timer-event-end,V8.Execute,5542068
timer-event-start,V8.GCScavenger,5550568
timer-event-start,V8.GCScavengerForeground,5550577
timer-event-end,V8.GCScavengerForeground,5550844
timer-event-end,V8.GCScavenger,5550851
timer-event-start,V8.Execute,5555486
timer-event-end,V8.Execute,5556152
timer-event-start,V8.Execute,5569140
timer-event-end,V8.Execute,5569800
timer-event-start,V8.Execute,5582801
timer-event-end,V8.Execute,5583468
timer-event-start,V8.GCScavenger,5585958
timer-event-start,V8.GCScavengerForeground,5585967
timer-event-end,V8.GCScavengerForeground,5586404
timer-event-end,V8.GCScavenger,5586410
timer-event-start,V8.OptimizeCode,5590753
timer-event-start,V8.RecompileSynchronous,5590779
timer-event-end,V8.RecompileSynchronous,5592149
timer-event-end,V8.OptimizeCode,5592159
timer-event-start,V8.RecompileConcurrent,5592174
timer-event-start,V8.Execute,5598563
timer-event-end,V8.Execute,5599232
timer-event-end,V8.RecompileConcurrent,5604786
timer-event-start,V8.RecompileSynchronous,5604805
code-creation,LazyCompile,0,5604872,0x236ca394280,4400,readLineSlice file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:126:24,0x78e87f442f8,*
code-source-info,0x236cax78e87f44350S0x78e87f49638
timer-event-end,V8.RecompileSynchronous,5604950
timer-event-start,V8.Execute,5613672
timer-event-end,V8.Execute,5616429
timer-event-start,V8.GCScavenger,5622692
timer-event-start,V8.GCScavengerForeground,5622703
timer-event-end,V8.GCScavengerForeground,5623245
timer-event-end,V8.GCScavenger,5623252
timer-event-start,V8.Execute,5649445
timer-event-end,V8.Execute,5652239
timer-event-start,V8.GCScavenger,5655657
timer-event-start,V8.GCScavengerForeground,5655666
timer-event-end,V8.GCScavengerForeground,5656831
timer-event-end,V8.GCScavenger,5656837
timer-event-start,V8.OptimizeCode,5667193
timer-event-start,V8.RecompileSynchronous,5667219
timer-event-end,V8.RecompileSynchronous,5667653
timer-event-end,V8.OptimizeCode,5667663
timer-event-start,V8.RecompileConcurrent,5667683
timer-event-end,V8.RecompileConcurrent,5671154
timer-event-start,V8.RecompileSynchronous,5671182
code-creation,LazyCompile,0,5671239,0x236ca395400,781,dispatch shared_queue.js:182:20,0x37b0526f7e20,*
code-source-info,0x236ca395400,9,4952,5059,C0O4952C114O1737I0C214O1763I0C226O5020C273O5025C404O5055C411O4952C451O1737I0C540O5025C584O1737I0,F0O4991,S0x37b0526f78f8
timer-event-end,V8.RecompileSynchronous,5671270
timer-event-start,V8.Execute,5673829
timer-event-end,V8.Execute,5676652
timer-event-start,V8.OptimizeCode,5678614
timer-event-start,V8.RecompileSynchronous,5678636
timer-event-end,V8.RecompileSynchronous,5679113
timer-event-end,V8.OptimizeCode,5679124
timer-event-start,V8.RecompileConcurrent,5679133
timer-event-end,V8.RecompileConcurrent,5681134
timer-event-start,V8.RecompileSynchronous,5681152
code-creation,LazyCompile,0,5681202,0x236ca395760,687,createResolvable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:85:30,0x281636bce500,*
code-source-info,0x236ca395760,5,3407,3735,C0O3407C125O3457C427O3504I0C449O3516I0C453O3525I0C457O3704C526O3729C533O3407,F0O3457,S0x78e87f58a78
timer-event-end,V8.RecompileSynchronous,5681239
timer-event-start,V8.GCScavenger,5687098
timer-event-start,V8.GCScavengerForeground,5687114
timer-event-end,V8.GCScavengerForeground,5688275
timer-event-end,V8.GCScavenger,5688282
timer-event-start,V8.Execute,5708189
timer-event-start,V8.OptimizeCode,5708888
timer-event-start,V8.RecompileSynchronous,5708912
timer-event-end,V8.RecompileSynchronous,5709389
timer-event-end,V8.OptimizeCode,5709399
timer-event-start,V8.RecompileConcurrent,5709417
timer-event-end,V8.RecompileConcurrent,5711169
timer-event-start,V8.RecompileSynchronous,5711198
code-creation,LazyCompile,0,5711261,0x236ca395a60,815,recordFromBufMinimal /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1141:34,0x281636bd0fe8,*
code-source-info,0x236ca395a60,5,45033,45272,C0O45033C83O45067C117O45074C167O45094C207O45100C258O45140C319O45177C397O45194C415O45222C482O45252C549O45266C559O45033,,
timer-event-end,V8.RecompileSynchronous,5711300
timer-event-end,V8.Execute,5711689
timer-event-start,V8.OptimizeCode,5714550
timer-event-start,V8.RecompileSynchronous,5714568
timer-event-end,V8.RecompileSynchronous,5716152
timer-event-end,V8.OptimizeCode,5716162
timer-event-start,V8.RecompileConcurrent,5716181
timer-event-end,V8.RecompileConcurrent,5729161
timer-event-start,V8.RecompileSynchronous,5729177
code-creation,LazyCompile,0,5729251,0x236ca395de0,3622,sendAsyncMinimal /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1165:30,0x281636bd10b8,*
code-source-info,0x236ca395dex281636bd0dc0S0x37b0526f7e20S0x37b0526f78f8S0x281636bce500S0x78e87f58a78S0x281636bd0fe8
timer-event-end,V8.RecompileSynchronous,5729339
timer-event-start,V8.Execute,5731921
timer-event-end,V8.Execute,5734318
timer-event-start,V8.GCScavenger,5748057
timer-event-start,V8.GCScavengerForeground,5748069
timer-event-end,V8.GCScavengerForeground,5748612
timer-event-end,V8.GCScavenger,5748619
timer-event-start,V8.Execute,5762140
timer-event-end,V8.Execute,5764622
timer-event-start,V8.Execute,5782544
timer-event-end,V8.Execute,5785031
timer-event-start,V8.OptimizeCode,5786137
timer-event-start,V8.RecompileSynchronous,5786163
timer-event-end,V8.RecompileSynchronous,5789708
timer-event-end,V8.OptimizeCode,5789728
timer-event-start,V8.RecompileConcurrent,5789741
timer-event-start,V8.OptimizeCode,5801935
timer-event-start,V8.RecompileSynchronous,5801954
timer-event-end,V8.RecompileSynchronous,5802245
timer-event-end,V8.OptimizeCode,5802254
timer-event-start,V8.RecompileConcurrent,5802274
timer-event-end,V8.RecompileConcurrent,5803412
timer-event-start,V8.RecompileSynchronous,5803438
code-creation,LazyCompile,0,5803492,0x236ca396c60,508,_validateName /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4888:22,0x281636bdc368,*
code-source-info,0x236ca396c60,5,199072,199247,C0O199072C83O199115C190O199134C204O199246C224O199160C267O199183C310O199072,,
timer-event-end,V8.RecompileSynchronous,5803519
timer-event-end,V8.RecompileConcurrent,5807919
timer-event-start,V8.RecompileSynchronous,5807934
code-creation,LazyCompile,0,5808014,0x236ca396ea0,7420,_fill file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:50:16,0x78e87f43240,*
code-source-info,0x236ca396eax281636bd8f88S0x281636bd1a58S0x78e87f48300S0x281636bd10b8S0x281636bd0dc0S0x37b0526f7e20S0x37b0526f78f8S0x281636bce500S0x78e87f58a78
timer-event-end,V8.RecompileSynchronous,5808174
timer-event-start,V8.GCScavenger,5810137
timer-event-start,V8.GCScavengerForeground,5810146
timer-event-end,V8.GCScavengerForeground,5810981
timer-event-end,V8.GCScavenger,5810987
timer-event-start,V8.Execute,5817100
timer-event-start,V8.OptimizeCode,5818512
timer-event-start,V8.RecompileSynchronous,5818536
timer-event-end,V8.RecompileSynchronous,5820825
timer-event-end,V8.OptimizeCode,5820836
timer-event-start,V8.RecompileConcurrent,5820856
timer-event-end,V8.Execute,5821955
timer-event-end,V8.RecompileConcurrent,5833540
timer-event-start,V8.RecompileSynchronous,5833555
code-creation,LazyCompile,0,5833626,0x236ca398be0,2960,shift shared_queue.js:138:17,0x37b0526f7d18,*
code-source-info,0x236ca398bex37b0526f7a00S0x37b0526f7b60S0x37b0526f7c10S0x37b0526f7b08S0x37b0526f7c68
timer-event-end,V8.RecompileSynchronous,5833743
timer-event-start,V8.Execute,5838160
timer-event-end,V8.Execute,5838894
timer-event-start,V8.Execute,5863724
timer-event-end,V8.Execute,5864466
timer-event-start,V8.GCScavenger,5866311
timer-event-start,V8.GCScavengerForeground,5866320
timer-event-end,V8.GCScavengerForeground,5867139
timer-event-end,V8.GCScavenger,5867147
timer-event-start,V8.Execute,5882429
timer-event-end,V8.Execute,5883207
timer-event-start,V8.Execute,5909199
timer-event-end,V8.Execute,5909941
timer-event-start,V8.GCScavenger,5916044
timer-event-start,V8.GCScavengerForeground,5916055
timer-event-end,V8.GCScavengerForeground,5917076
timer-event-end,V8.GCScavenger,5917083
timer-event-start,V8.Execute,5928260
timer-event-end,V8.Execute,5929032
timer-event-start,V8.Execute,5955011
timer-event-end,V8.Execute,5955753
timer-event-start,V8.GCScavenger,5965988
timer-event-start,V8.GCScavengerForeground,5965999
timer-event-end,V8.GCScavengerForeground,5967002
timer-event-end,V8.GCScavenger,5967009
timer-event-start,V8.Execute,5973851
timer-event-end,V8.Execute,5974626
timer-event-start,V8.Execute,6000343
timer-event-end,V8.Execute,6001084
timer-event-start,V8.Execute,6018030
timer-event-end,V8.Execute,6018801
timer-event-start,V8.GCScavenger,6020015
timer-event-start,V8.GCScavengerForeground,6020025
timer-event-end,V8.GCScavengerForeground,6021283
timer-event-end,V8.GCScavenger,6021291
timer-event-start,V8.Execute,6046495
timer-event-end,V8.Execute,6047253
timer-event-start,V8.OptimizeCode,6056332
timer-event-start,V8.RecompileSynchronous,6056366
timer-event-end,V8.RecompileSynchronous,6057271
timer-event-end,V8.OptimizeCode,6057281
timer-event-start,V8.RecompileConcurrent,6057296
timer-event-start,V8.Execute,6065184
timer-event-end,V8.Execute,6065949
timer-event-end,V8.RecompileConcurrent,6067581
timer-event-start,V8.RecompileSynchronous,6067598
code-creation,LazyCompile,0,6067656,0x236ca3997c0,2960,DomIterableMixin.DomIterable /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4181:31,0x281636bda8e0,*
code-source-info,0x236ca3997c0,5,166332,166536,C0O166332C299O166456C560O166492C675O166456C731O166492C782O166443C926O166432C975O166492C1253O166443C1258O166492C1391O166535C1401O166492C1436O166535C1441O166443C1441O166535C1450O166332C1640O166443C1803O166432C1935O166492C2082O166332,,
timer-event-end,V8.RecompileSynchronous,6067706
timer-event-start,V8.GCScavenger,6073817
timer-event-start,V8.GCScavengerForeground,6073827
timer-event-end,V8.GCScavengerForeground,6074921
timer-event-end,V8.GCScavenger,6074929
timer-event-start,V8.Execute,6093465
timer-event-end,V8.Execute,6094215
timer-event-start,V8.OptimizeCode,6102868
timer-event-start,V8.RecompileSynchronous,6102892
timer-event-end,V8.RecompileSynchronous,6104171
timer-event-end,V8.OptimizeCode,6104181
timer-event-start,V8.RecompileConcurrent,6104194
timer-event-start,V8.OptimizeCode,6106273
timer-event-start,V8.RecompileSynchronous,6106291
timer-event-end,V8.RecompileSynchronous,6107836
timer-event-start,V8.RecompileConcurrent,6107848
timer-event-end,V8.OptimizeCode,6107861
timer-event-end,V8.RecompileConcurrent,6110237
timer-event-start,V8.RecompileSynchronous,6110262
code-creation,LazyCompile,0,6110348,0x236ca39a3a0,1241,get /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4914:12,0x281636bdc508,*
code-source-info,0x236ca39a3a0,5,200220,200506,C0O200220C131O5298I2C141O200342C175O198742I1C225O198755I1C284O198790I1C328O198804I1C362O200326C417O200383C441O199115I0C521O199134I0C535O200437C563O200449C627O200475C701O200496C723O199160I0C777O199183I0C820O5339I2C832O200220C872O200475,F0O200383F1O200342F2O200252,S0x281636bdc368S0x281636bdc2f0S0x281636bce8b8
timer-event-end,V8.RecompileSynchronous,6110408
timer-event-end,V8.RecompileConcurrent,6111907
timer-event-start,V8.Execute,6114007
timer-event-end,V8.Execute,6114767
timer-event-start,V8.OptimizeCode,6126796
timer-event-start,V8.RecompileSynchronous,6126829
timer-event-end,V8.RecompileSynchronous,6128328
timer-event-end,V8.OptimizeCode,6128338
timer-event-start,V8.RecompileConcurrent,6128343
timer-event-start,V8.GCScavenger,6128444
timer-event-start,V8.GCScavengerForeground,6128450
timer-event-end,V8.GCScavengerForeground,6129224
timer-event-end,V8.GCScavenger,6129231
timer-event-start,V8.OptimizeCode,6136359
timer-event-start,V8.RecompileSynchronous,6136385
timer-event-end,V8.RecompileSynchronous,6137634
timer-event-end,V8.OptimizeCode,6137644
timer-event-start,V8.RecompileConcurrent,6137658
timer-event-start,V8.Execute,6143429
timer-event-end,V8.RecompileConcurrent,6143484
timer-event-end,V8.RecompileConcurrent,6143510
timer-event-start,V8.RecompileSynchronous,6143525
code-creation,LazyCompile,0,6143599,0x236ca39a8c0,2828,write file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:422:16,0x78e87f43818,*
code-source-info,0x236ca39a8c0,13,15301,16177,C0O15301C236O15324C290O15301C523O15324C567O15361C579O15380C613O15387C687O15472C750O15975C866O15694C997O16027C1009O15472C1053O15490C1087O14999I0C1091O15003I0C1095O15021I0C1099O15014I0C1136O15483C1169O15014I0C1192O15483C1225O16079C1259O405I1C1274O393I1C1317O461I1C1319O16083C1338O393I1C1352O405I1C1375O393I1C1398O491I1C1406O546I1C1490O576I1C1518O16133C1551O16150C1591O16123C1619O16133C1644O16130C1663O16150C1676O16161C1732O16171C1743O516I1C1765O15463C1785O15526C1797O15406C1822O15415C1867O15301C1948O15692C1959O15793C2062O16161C2148O16079C2195O15463C2204O16171C2261O16176,F0O15490F1O16083,S0x78e87f43768S0x78e87f495e0
timer-event-end,V8.RecompileSynchronous,6143696
timer-event-start,V8.RecompileSynchronous,6143749
code-creation,LazyCompile,0,6143793,0x236ca39b420,1077,has /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4921:12,0x281636bdc560,*
code-source-info,0x236ca39b420,5,200518,200763,C0O200518C131O5298I2C141O200640C175O198742I1C225O198755I1C284O198790I1C328O198804I1C362O200624C417O200681C441O199115I0C521O199134I0C535O200728C563O200740C587O200753C622O199160I0C676O199183I0C719O5339I2C731O200518,F0O200681F1O200640F2O200550,S0x281636bdc368S0x281636bdc2f0S0x281636bce8b8
timer-event-end,V8.RecompileSynchronous,6143847
timer-event-start,V8.RecompileSynchronous,6143884
code-creation,LazyCompile,0,6143921,0x236ca39b8a0,8580,iterateHttpRequests file:///home/yankun/workspace/rust/deno/std/http/server.ts:271:31,0x78e87f424e0,*
code-source-info,0x236ca39b8a0,12,10220,11569,C0O10220C204O11041C393O10220C520O10250C619O10289C817O10365C896O10796C1008O10365C1072O10796C1072O10655C1246O10806C1304O10796C1617O10416C1850O10576C1850O10567C1902O10638C2189O10655C2522O10365C2655O10352C2665O10410C2679O10422C2833O10847C2833O10838C2885O10930C2969O11370C2981O11041C2997O11065C3025O11555C3134O10416C3458O11555C3529O11568C3541O11555C3598O11568C3657O10220C3996O11041C4171O10638C4250O10365C4406O10352C4482O10414C4531O10930C4730O10289C4796O10250C4871O11555C5017O10250C5049O10220,,
timer-event-end,V8.RecompileSynchronous,6143994
timer-event-end,V8.Execute,6144752
timer-event-start,V8.Execute,6159643
timer-event-end,V8.Execute,6160413
timer-event-start,V8.GCScavenger,6178189
timer-event-start,V8.GCScavengerForeground,6178202
timer-event-end,V8.GCScavengerForeground,6178945
timer-event-end,V8.GCScavenger,6178952
timer-event-start,V8.Execute,6183860
timer-event-end,V8.Execute,6184610
timer-event-start,V8.Execute,6199000
timer-event-end,V8.Execute,6199748
timer-event-start,V8.Execute,6221322
timer-event-end,V8.Execute,6222028
timer-event-start,V8.GCScavenger,6223890
timer-event-start,V8.GCScavengerForeground,6223899
timer-event-end,V8.GCScavengerForeground,6224842
timer-event-end,V8.GCScavenger,6224848
timer-event-start,V8.OptimizeCode,6227795
timer-event-start,V8.RecompileSynchronous,6227822
timer-event-end,V8.RecompileSynchronous,6228688
timer-event-end,V8.OptimizeCode,6228697
timer-event-start,V8.RecompileConcurrent,6228706
timer-event-start,V8.OptimizeCode,6231861
timer-event-start,V8.RecompileSynchronous,6231879
timer-event-end,V8.RecompileSynchronous,6232565
timer-event-end,V8.OptimizeCode,6232575
timer-event-start,V8.RecompileConcurrent,6232588
timer-event-end,V8.RecompileConcurrent,6236206
timer-event-start,V8.RecompileSynchronous,6236230
code-creation,LazyCompile,0,6236295,0x236ca39da80,1864,peek file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:325:15,0x78e87f43558,*
code-source-info,0x236ca39da80,13,12333,13134,C0O12333C189O12353C243O12333C486O12353C510O12438C542O12447C546O12440C555O12471C641O12556C752O12747C764O12471C798O12787C808O13095C846O13113C850O13123C869O13099C970O13128C981O12801C993O12491C1045O12372C1045O12378C1096O12333C1222O12471C1273O12556C1284O12651C1385O13099C1449O13128C1510O13133,,
timer-event-end,V8.RecompileSynchronous,6236343
timer-event-start,V8.Execute,6238916
timer-event-end,V8.Execute,6239651
timer-event-end,V8.RecompileConcurrent,6240092
timer-event-start,V8.RecompileSynchronous,6240109
code-creation,LazyCompile,0,6240160,0x236ca39e220,2780,callIteratorNext file:///home/yankun/workspace/rust/deno/std/util/async.ts:32:27,0x78e87f48ee0,*
code-source-info,0x236ca39e220,17,1059,1303,C0O1059C158O1104C248O1159C264O1088C298O1095C302O1135C385O1223C419O1119C432O1230C532O1237C545O1247C559O1230C731O1159C806O1166C825O1280C829O1287C899O1302C910O1119C964O1059C1185O1119C1277O1104C1415O1135C1733O1230C1886O1059C1947O1302,,
timer-event-end,V8.RecompileSynchronous,6240204
timer-event-start,V8.Execute,6260247
timer-event-end,V8.Execute,6260959
timer-event-start,V8.GCScavenger,6268452
timer-event-start,V8.GCScavengerForeground,6268479
timer-event-end,V8.GCScavengerForeground,6269472
timer-event-end,V8.GCScavenger,6269479
timer-event-start,V8.Execute,6277824
timer-event-end,V8.Execute,6278569
timer-event-start,V8.Execute,6298857
timer-event-end,V8.Execute,6299557
timer-event-start,V8.Execute,6312813
timer-event-end,V8.Execute,6313537
timer-event-start,V8.Execute,6333768
timer-event-end,V8.Execute,6334475
timer-event-start,V8.Execute,6347634
timer-event-end,V8.Execute,6348364
timer-event-start,V8.GCScavenger,6355784
timer-event-start,V8.GCScavengerForeground,6355795
timer-event-end,V8.GCScavengerForeground,6357019
timer-event-end,V8.GCScavenger,6357025
timer-event-start,V8.Execute,6371260
timer-event-start,V8.OptimizeCode,6371573
timer-event-start,V8.RecompileSynchronous,6371596
timer-event-end,V8.RecompileSynchronous,6372425
timer-event-end,V8.OptimizeCode,6372436
timer-event-start,V8.RecompileConcurrent,6372458
timer-event-end,V8.Execute,6372879
timer-event-end,V8.RecompileConcurrent,6379802
timer-event-start,V8.RecompileSynchronous,6379831
code-creation,LazyCompile,0,6379907,0x236ca39ed40,1980,asyncMsgFromRust /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1156:30,0x281636bd1040,*
code-source-info,0x236ca39ed40,5,45570,45911,C0O45570C83O45625C177O45637C209O45653C213O45664C282O45606C436O45067I0C459O45074I0C507O45094I0C557O45100I0C569O45177I0C643O45194I0C655O45222I0C716O45252I0C776O45814C1031O45252I0C1034O45860C1084O45889C1159O45910C1170O45570C1274O45606C1432O45814,F0O45693,S0x281636bd0fe8
timer-event-end,V8.RecompileSynchronous,6379958
timer-event-start,V8.Execute,6386305
timer-event-end,V8.Execute,6386672
timer-event-start,V8.OptimizeCode,6400233
timer-event-start,V8.RecompileSynchronous,6400257
timer-event-end,V8.RecompileSynchronous,6401298
timer-event-end,V8.OptimizeCode,6401307
timer-event-start,V8.RecompileConcurrent,6401323
timer-event-end,V8.RecompileConcurrent,6405506
timer-event-start,V8.Execute,6408259
timer-event-end,V8.Execute,6408610
timer-event-start,V8.Execute,6421728
timer-event-end,V8.Execute,6422108
timer-event-start,V8.OptimizeCode,6436420
timer-event-start,V8.RecompileSynchronous,6436447
timer-event-end,V8.RecompileSynchronous,6439341
timer-event-start,V8.RecompileConcurrent,6439357
timer-event-end,V8.OptimizeCode,6439382
timer-event-start,V8.Execute,6445630
timer-event-start,V8.OptimizeCode,6445644
timer-event-start,V8.RecompileSynchronous,6445659
timer-event-end,V8.RecompileSynchronous,6448274
timer-event-end,V8.OptimizeCode,6448284
timer-event-start,V8.RecompileConcurrent,6448303
timer-event-end,V8.Execute,6448639
timer-event-start,V8.GCScavenger,6450695
timer-event-start,V8.GCScavengerForeground,6450704
timer-event-end,V8.GCScavengerForeground,6452283
timer-event-end,V8.GCScavenger,6452291
timer-event-end,V8.RecompileConcurrent,6458155
timer-event-start,V8.RecompileSynchronous,6458176
code-creation,LazyCompile,0,6458253,0x236ca39f540,1190,HeadersBase /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:4844:20,0x281636bdc278,*
code-source-info,0x236ca39f540,5,196903,198557,C0O196903C83O196924C97O196735I0C136O197084C152O197219C196O197217C310O197256C461O198074C537O198556C548O198120C588O198127C600O197313C612O197137C624O196961C653O196967C665O196903C708O197256C785O198074,F0O197084,S0x281636bdc0a8
timer-event-end,V8.RecompileSynchronous,6458295
timer-event-start,V8.RecompileSynchronous,6458332
code-creation,LazyCompile,0,6458414,0x236ca39fa40,4434,setContentLength file:///home/yankun/workspace/rust/deno/std/http/server.ts:16:33,0x78e87f42010,*
code-source-info,0x236ca39fax281636bdc668S0x281636bda6b0S0x281636bdc458S0x281636bdc560S0x281636bdc368S0x281636bdc2f0S0x281636bce8b8S0x281636bdc3e0
timer-event-end,V8.RecompileSynchronous,6458521
timer-event-start,V8.Execute,6464290
timer-event-end,V8.Execute,6464665
timer-event-end,V8.RecompileConcurrent,6464733
timer-event-start,V8.RecompileSynchronous,6464749
code-creation,LazyCompile,0,6464802,0x236ca3a0be0,3876,handleAsyncMsgFromRust shared_queue.js:167:34,0x37b0526f7dc8,*
code-source-info,0x236ca3a0bex37b0526f7d18S0x37b0526f7a00S0x37b0526f7b60S0x37b0526f7c10S0x37b0526f7b08S0x37b0526f7c68S0x37b0526f7a58S0x37b0526f78f8
timer-event-end,V8.RecompileSynchronous,6464954
timer-event-start,V8.Execute,6483796
timer-event-end,V8.Execute,6484071
timer-event-start,V8.OptimizeCode,6484143
timer-event-start,V8.RecompileSynchronous,6484161
timer-event-end,V8.RecompileSynchronous,6486167
timer-event-end,V8.OptimizeCode,6486178
timer-event-start,V8.RecompileConcurrent,6486196
timer-event-end,V8.RecompileConcurrent,6494922
timer-event-start,V8.RecompileSynchronous,6494937
code-creation,LazyCompile,0,6495016,0x236ca3a1b60,5216,write /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1407:25,0x281636bd1b08,*
code-source-info,0x236ca3a1bx281636bd10b8S0x281636bd0dc0S0x37b0526f7e20S0x37b0526f78f8S0x281636bce500S0x78e87f58a78S0x281636bd0fe8
timer-event-end,V8.RecompileSynchronous,6495135
timer-event-start,V8.Execute,6498693
timer-event-end,V8.Execute,6499018
timer-event-start,V8.OptimizeCode,6509311
timer-event-start,V8.RecompileSynchronous,6509339
timer-event-end,V8.RecompileSynchronous,6510951
timer-event-end,V8.OptimizeCode,6510961
timer-event-start,V8.RecompileConcurrent,6510979
timer-event-start,V8.Execute,6519389
timer-event-end,V8.Execute,6519661
timer-event-end,V8.RecompileConcurrent,6523249
timer-event-start,V8.RecompileSynchronous,6523268
code-creation,LazyCompile,0,6523338,0x236ca3a3000,7264,acceptConnAndIterateHttpRequests file:///home/yankun/workspace/rust/deno/std/http/server.ts:319:44,0x78e87f42538,*
code-source-info,0x236ca3a3000,12,11884,12290,C0O11884C320O11997C434O12114C468O12123C567O12114C628O12258C912O12246C1041O12258C1095O12246C2103O12258C2209O12246C2466O12258C2502O12246C2541O11884C2665O11909C2787O12008C2791O12017C2870O11997C3058O12246C3125O12289C3137O12246C3194O12289C3253O11884C3720O12246C4116O11909C4308O12246C4494O11884,,
timer-event-end,V8.RecompileSynchronous,6523387
timer-event-start,V8.Execute,6531843
timer-event-end,V8.Execute,6532135
timer-event-start,V8.GCScavenger,6535454
timer-event-start,V8.GCScavengerForeground,6535462
timer-event-end,V8.GCScavengerForeground,6536552
timer-event-end,V8.GCScavenger,6536559
timer-event-start,V8.Execute,6552750
timer-event-end,V8.Execute,6553033
timer-event-start,V8.OptimizeCode,6560353
timer-event-start,V8.RecompileSynchronous,6560377
timer-event-end,V8.RecompileSynchronous,6560917
timer-event-end,V8.OptimizeCode,6560926
timer-event-start,V8.RecompileConcurrent,6560941
timer-event-start,V8.Execute,6565638
timer-event-end,V8.Execute,6565932
timer-event-end,V8.RecompileConcurrent,6566327
timer-event-start,V8.RecompileSynchronous,6566351
code-creation,LazyCompile,0,6566416,0x236ca3a4ca0,1696,respond file:///home/yankun/workspace/rust/deno/std/http/server.ts:171:18,0x78e87f423d8,*
code-source-info,0x236ca3a4ca0,12,6626,6874,C0O6626C158O6671C248O6853C286O6858C366O6873C377O6696C431O6626C644O6696C682O6677C793O6671C996O6626C1057O6873,,
timer-event-end,V8.RecompileSynchronous,6566447
timer-event-start,V8.OptimizeCode,6578491
timer-event-start,V8.RecompileSynchronous,6578514
timer-event-end,V8.RecompileSynchronous,6579861
timer-event-start,V8.RecompileConcurrent,6579871
timer-event-end,V8.OptimizeCode,6579883
timer-event-start,V8.OptimizeCode,6580768
timer-event-start,V8.RecompileSynchronous,6580783
timer-event-end,V8.RecompileSynchronous,6582537
timer-event-end,V8.OptimizeCode,6582546
timer-event-start,V8.RecompileConcurrent,6582557
timer-event-end,V8.RecompileConcurrent,6586400
timer-event-start,V8.Execute,6587607
timer-event-end,V8.Execute,6587882
timer-event-end,V8.RecompileConcurrent,6594766
timer-event-start,V8.RecompileSynchronous,6594782
code-creation,LazyCompile,0,6594857,0x236ca3a5380,4616,main file:///home/yankun/workspace/rust/deno/std/http/http_bench.ts:6:20,0x78e87f40f88,*
code-source-info,0x236ca3a5380,11,260,377,C0O260C168O351C462O329C496O322C737O305C751O351C864O361C907O6626I0C1101O6696I0C1109O6677I0C1239O6671I0C1393O329C1451O322C1578O351C1822O376C1866O351C1866O322C2115O260C2442O269C2442O277C2454O351C2518O322C2725O305C2829O6873I0C2972O361C3078O351C3187O260C3233O376,F0O351,S0x78e87f423d8
timer-event-end,V8.RecompileSynchronous,6594919
timer-event-start,V8.RecompileSynchronous,6594944
code-creation,LazyCompile,0,6594988,0x236ca3a65e0,5740,iterate file:///home/yankun/workspace/rust/deno/std/util/async.ts:42:19,0x78e87f48f38,*
code-source-info,0x236ca3a65e0,17,1322,1918,C0O1322C356O1584C416O1889C517O1347C592O1444C740O1584C784O1682C896O1716C959O1059I0C1168O1119I0C1277O1104I0C1417O1600C1444O1584C1514O1591C1538O1577C1595O1860C1595O1891C1700O1347C1770O1444C1779O1584C1838O1682C1849O1559C1859O1661C1886O1630C1920O1640C1956O1682C2157O1347C2192O1361C2239O1335C2249O1455C2272O1444C2427O1889C2494O1917C2506O1889C2563O1917C2619O1322C2988O1302I0C3116O1584C3237O1559C3314O1335C3401O1889C3579O1322,F0O1716,S0x78e87f48ee0
timer-event-end,V8.RecompileSynchronous,6595050
timer-event-start,V8.Execute,6599413
timer-event-end,V8.Execute,6599702
timer-event-start,V8.GCScavenger,6613091
timer-event-start,V8.GCScavengerForeground,6613103
timer-event-end,V8.GCScavengerForeground,6614210
timer-event-end,V8.GCScavenger,6614216
timer-event-start,V8.Execute,6618939
timer-event-end,V8.Execute,6619253
timer-event-start,V8.Execute,6630606
timer-event-end,V8.Execute,6630910
timer-event-start,V8.Execute,6648280
timer-event-end,V8.Execute,6648581
timer-event-start,V8.OptimizeCode,6651472
timer-event-start,V8.RecompileSynchronous,6651499
timer-event-end,V8.RecompileSynchronous,6653845
timer-event-end,V8.OptimizeCode,6653857
timer-event-start,V8.RecompileConcurrent,6653875
timer-event-start,V8.Execute,6662652
timer-event-end,V8.Execute,6662980
timer-event-end,V8.RecompileConcurrent,6670593
timer-event-start,V8.RecompileSynchronous,6670610
code-creation,LazyCompile,0,6670713,0x236ca3a7ca0,6216,str file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:8:13,0x78e87f440e8,*
code-source-info,0x236ca3a7cax281636bd0318S0x281636bcfae8S0x281636bcfd00S0x281636bcfbd8S0x281636bcfc30S0x281636bcf7e0
timer-event-end,V8.RecompileSynchronous,6670870
timer-event-start,V8.Execute,6681823
timer-event-end,V8.Execute,6682114
timer-event-start,V8.GCScavenger,6691334
timer-event-start,V8.GCScavengerForeground,6691345
timer-event-end,V8.GCScavengerForeground,6693506
timer-event-end,V8.GCScavenger,6693514
timer-event-start,V8.Execute,6697422
timer-event-end,V8.Execute,6697757
timer-event-start,V8.Execute,6716194
timer-event-end,V8.Execute,6716491
timer-event-start,V8.Execute,6728495
timer-event-end,V8.Execute,6728813
timer-event-start,V8.Execute,6747270
timer-event-end,V8.Execute,6747566
timer-event-start,V8.Execute,6759686
timer-event-end,V8.Execute,6760002
timer-event-start,V8.GCScavenger,6771791
timer-event-start,V8.GCScavengerForeground,6771803
timer-event-end,V8.GCScavengerForeground,6773557
timer-event-end,V8.GCScavenger,6773566
timer-event-start,V8.Execute,6781272
timer-event-end,V8.Execute,6781586
timer-event-start,V8.Execute,6793767
timer-event-end,V8.Execute,6794082
timer-event-start,V8.Execute,6812640
timer-event-end,V8.Execute,6812942
timer-event-start,V8.Execute,6825034
timer-event-end,V8.Execute,6825349
timer-event-start,V8.Execute,6843950
timer-event-end,V8.Execute,6844260
timer-event-start,V8.GCScavenger,6852567
timer-event-start,V8.GCScavengerForeground,6852578
timer-event-end,V8.GCScavengerForeground,6854177
timer-event-end,V8.GCScavenger,6854185
timer-event-start,V8.Execute,6859310
timer-event-end,V8.Execute,6859651
timer-event-start,V8.Execute,6878118
timer-event-end,V8.Execute,6878412
timer-event-start,V8.Execute,6890622
timer-event-end,V8.Execute,6890943
timer-event-start,V8.Execute,6909442
timer-event-end,V8.Execute,6909755
timer-event-start,V8.Execute,6921821
timer-event-end,V8.Execute,6922145
timer-event-start,V8.GCScavenger,6932836
timer-event-start,V8.GCScavengerForeground,6932846
timer-event-end,V8.GCScavengerForeground,6934088
timer-event-end,V8.GCScavenger,6934095
timer-event-start,V8.Execute,6942504
timer-event-end,V8.Execute,6942806
timer-event-start,V8.OptimizeCode,6950216
timer-event-start,V8.RecompileSynchronous,6950243
timer-event-end,V8.RecompileSynchronous,6952384
timer-event-end,V8.OptimizeCode,6952396
timer-event-start,V8.RecompileConcurrent,6952413
timer-event-start,V8.Execute,6956929
timer-event-end,V8.Execute,6957253
timer-event-end,V8.RecompileConcurrent,6968841
timer-event-start,V8.RecompileSynchronous,6968859
code-creation,LazyCompile,0,6968946,0x236ca3a9540,4656,write /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:3711:14,0x281636bd8f30,*
code-source-info,0x236ca3ax281636bd1b08S0x281636bd10b8S0x281636bd0dc0S0x37b0526f7e20S0x37b0526f78f8S0x281636bce500S0x78e87f58a78S0x281636bd0fe8
timer-event-end,V8.RecompileSynchronous,6969057
timer-event-start,V8.Execute,6975586
timer-event-end,V8.Execute,6975882
timer-event-start,V8.Execute,6987731
timer-event-end,V8.Execute,6988044
timer-event-start,V8.Execute,7006177
timer-event-end,V8.Execute,7006468
timer-event-start,V8.GCScavenger,7014208
timer-event-start,V8.GCScavengerForeground,7014218
timer-event-end,V8.GCScavengerForeground,7015179
timer-event-end,V8.GCScavenger,7015186
timer-event-start,V8.Execute,7020425
timer-event-end,V8.Execute,7020755
timer-event-start,V8.Execute,7038628
timer-event-end,V8.Execute,7038928
timer-event-start,V8.OptimizeCode,7039002
timer-event-start,V8.RecompileSynchronous,7039025
timer-event-end,V8.RecompileSynchronous,7039916
timer-event-end,V8.OptimizeCode,7039927
timer-event-start,V8.RecompileConcurrent,7039935
timer-event-start,V8.OptimizeCode,7042148
timer-event-start,V8.RecompileSynchronous,7042167
timer-event-end,V8.RecompileConcurrent,7042309
timer-event-end,V8.RecompileSynchronous,7044112
timer-event-end,V8.OptimizeCode,7044123
timer-event-start,V8.RecompileConcurrent,7044135
timer-event-start,V8.RecompileSynchronous,7044151
code-creation,LazyCompile,0,7044235,0x236ca3aa7c0,1828,flush file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:386:16,0x78e87f43710,*
code-source-info,0x236ca3aa7c0,13,14346,14900,C0O14346C155O14505C265O14664C303O14657C321O14890C372O14899C383O14687C399O14368C457O14346C682O14368C726O14405C738O14427C742O14429C758O14516C762O14530C766O14534C812O14519C900O14505C1040O14448C1067O14455C1140O14346C1236O14503C1247O14607,,
timer-event-end,V8.RecompileSynchronous,7044283
timer-event-start,V8.Execute,7054182
timer-event-end,V8.Execute,7054500
timer-event-end,V8.RecompileConcurrent,7059544
timer-event-start,V8.RecompileSynchronous,7059561
code-creation,LazyCompile,0,7059637,0x236ca3aaf40,5036,read /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1363:24,0x281636bd1a58,*
code-source-info,0x236ca3aafx281636bd10b8S0x281636bd0dc0S0x37b0526f7e20S0x37b0526f78f8S0x281636bce500S0x78e87f58a78
timer-event-end,V8.RecompileSynchronous,7059770
timer-event-start,V8.Execute,7072666
timer-event-end,V8.Execute,7072969
timer-event-start,V8.OptimizeCode,7076323
timer-event-start,V8.RecompileSynchronous,7076347
timer-event-end,V8.RecompileSynchronous,7079267
timer-event-end,V8.OptimizeCode,7079280
timer-event-start,V8.RecompileConcurrent,7079291
timer-event-start,V8.Execute,7087704
timer-event-end,V8.Execute,7088019
timer-event-end,V8.RecompileConcurrent,7097964
timer-event-start,V8.RecompileSynchronous,7097984
code-creation,LazyCompile,0,7098092,0x236ca3ac340,6916,readLine file:///home/yankun/workspace/rust/deno/std/textproto/mod.ts:40:19,0x78e87f44248,*
code-source-info,0x236ca3acx78e87f440e8S0x281636bd0318S0x281636bcfae8S0x281636bcfd00S0x281636bcfbd8S0x281636bcfc30S0x281636bcf7e0
timer-event-end,V8.RecompileSynchronous,7098231
timer-event-start,V8.GCScavenger,7098927
timer-event-start,V8.GCScavengerForeground,7098936
timer-event-end,V8.GCScavengerForeground,7099712
timer-event-end,V8.GCScavenger,7099719
timer-event-start,V8.Execute,7108358
timer-event-end,V8.Execute,7108660
timer-event-start,V8.Execute,7120219
timer-event-end,V8.Execute,7120528
timer-event-start,V8.Execute,7138225
timer-event-end,V8.Execute,7138525
timer-event-start,V8.Execute,7150043
timer-event-end,V8.Execute,7150363
timer-event-start,V8.Execute,7168147
timer-event-end,V8.Execute,7168440
timer-event-start,V8.GCScavenger,7174403
timer-event-start,V8.GCScavengerForeground,7174414
timer-event-end,V8.GCScavengerForeground,7175821
timer-event-end,V8.GCScavenger,7175829
timer-event-start,V8.Execute,7182711
timer-event-end,V8.Execute,7183047
timer-event-start,V8.Execute,7200853
timer-event-end,V8.Execute,7201150
timer-event-start,V8.Execute,7212778
timer-event-end,V8.Execute,7213092
timer-event-start,V8.Execute,7230947
timer-event-end,V8.Execute,7231260
timer-event-start,V8.Execute,7243000
timer-event-end,V8.Execute,7243332
timer-event-start,V8.GCScavenger,7250255
timer-event-start,V8.GCScavengerForeground,7250266
timer-event-end,V8.GCScavengerForeground,7252184
timer-event-end,V8.GCScavenger,7252192
timer-event-start,V8.Execute,7264822
timer-event-end,V8.Execute,7265132
timer-event-start,V8.Execute,7276908
timer-event-end,V8.Execute,7277224
timer-event-start,V8.Execute,7295322
timer-event-end,V8.Execute,7295635
timer-event-start,V8.Execute,7307392
timer-event-end,V8.Execute,7307713
timer-event-start,V8.Execute,7325479
timer-event-end,V8.Execute,7325779
timer-event-start,V8.GCScavenger,7326898
timer-event-start,V8.GCScavengerForeground,7326908
timer-event-end,V8.GCScavengerForeground,7328075
timer-event-end,V8.GCScavenger,7328083
timer-event-start,V8.Execute,7340053
timer-event-end,V8.Execute,7340412
timer-event-start,V8.Execute,7358401
timer-event-end,V8.Execute,7358706
timer-event-start,V8.Execute,7370459
timer-event-end,V8.Execute,7370786
timer-event-start,V8.Execute,7388911
timer-event-end,V8.Execute,7389217
timer-event-start,V8.Execute,7401213
timer-event-end,V8.Execute,7401542
timer-event-start,V8.GCScavenger,7404595
timer-event-start,V8.GCScavengerForeground,7404606
timer-event-end,V8.GCScavengerForeground,7406577
timer-event-end,V8.GCScavenger,7406586
timer-event-start,V8.Execute,7423017
timer-event-end,V8.Execute,7423333
timer-event-start,V8.Execute,7435186
timer-event-end,V8.Execute,7435514
timer-event-start,V8.Execute,7452519
timer-event-end,V8.Execute,7452805
timer-event-start,V8.Execute,7464564
timer-event-end,V8.Execute,7464892
timer-event-start,V8.GCScavenger,7479263
timer-event-start,V8.GCScavengerForeground,7479282
timer-event-end,V8.GCScavengerForeground,7480684
timer-event-end,V8.GCScavenger,7480706
timer-event-start,V8.Execute,7491121
timer-event-end,V8.Execute,7491456
timer-event-start,V8.Execute,7503301
timer-event-start,V8.OptimizeCode,7503425
timer-event-start,V8.RecompileSynchronous,7503451
timer-event-end,V8.RecompileSynchronous,7504991
timer-event-end,V8.OptimizeCode,7505003
timer-event-start,V8.RecompileConcurrent,7505025
timer-event-end,V8.Execute,7505248
timer-event-end,V8.RecompileConcurrent,7514457
timer-event-start,V8.RecompileSynchronous,7514481
code-creation,LazyCompile,0,7514563,0x236ca3adea0,3428,asyncMsgFromRust /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1259:30,0x281636bd15e0,*
code-source-info,0x236ca3adea0,5,49718,51283,C0O49718C83O49781C164O49816C229O49926C294O49960C359O49996C424O50029C489O50068C554O50103C619O50137C684O50171C749O50206C814O50246C879O50289C944O50325C956O51148C1038O45625I0C1132O45637I0C1164O45653I0C1168O45664I0C1234O45606I0C1388O45067I1C1411O45074I1C1459O45094I1C1506O45100I1C1518O45177I1C1592O45222I1C1653O45252I1C1713O45814I0C1975O45252I1C1978O45860I0C2025O45889I0C2100O51282C2111O49718C2215O45606I0C2373O45814I0,F0O49849F1O45693I0,S0x281636bd1040S0x281636bd0fe8
timer-event-end,V8.RecompileSynchronous,7514646
timer-event-start,V8.Execute,7523820
timer-event-end,V8.Execute,7524047
timer-event-start,V8.Execute,7535793
timer-event-end,V8.Execute,7536027
timer-event-start,V8.Execute,7554277
timer-event-end,V8.Execute,7554508
timer-event-start,V8.GCScavenger,7568637
timer-event-start,V8.GCScavengerForeground,7568669
timer-event-end,V8.GCScavengerForeground,7570682
timer-event-end,V8.GCScavenger,7570690
timer-event-start,V8.Execute,7574691
timer-event-end,V8.Execute,7574949
timer-event-start,V8.Execute,7593073
timer-event-end,V8.Execute,7593297
timer-event-start,V8.Execute,7604933
timer-event-end,V8.Execute,7605157
timer-event-start,V8.Execute,7622723
timer-event-end,V8.Execute,7622947
timer-event-start,V8.Execute,7634558
timer-event-end,V8.Execute,7634773
timer-event-start,V8.Execute,7652247
timer-event-end,V8.Execute,7652465
timer-event-start,V8.Execute,7663533
timer-event-end,V8.Execute,7663753
timer-event-start,V8.Execute,7681674
timer-event-end,V8.Execute,7681890
timer-event-start,V8.Execute,7693546
timer-event-end,V8.Execute,7693766
timer-event-start,V8.Execute,7711723
timer-event-end,V8.Execute,7711939
timer-event-start,V8.Execute,7723523
timer-event-end,V8.Execute,7723740
timer-event-start,V8.OptimizeCode,7724373
timer-event-start,V8.RecompileSynchronous,7724402
timer-event-end,V8.RecompileSynchronous,7724696
timer-event-end,V8.OptimizeCode,7724705
timer-event-start,V8.RecompileConcurrent,7724718
timer-event-start,V8.GCScavenger,7725066
timer-event-start,V8.GCScavengerForeground,7725076
timer-event-end,V8.RecompileConcurrent,7726498
timer-event-end,V8.GCScavengerForeground,7726849
timer-event-end,V8.GCScavenger,7726859
timer-event-start,V8.RecompileSynchronous,7728841
code-creation,LazyCompile,0,7728937,0x236ca3aec60,358,buffered file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:46:13,0x78e87f431e8,*
code-source-info,0x236ca3aec60,13,1560,1602,C0O1560C83O1585C120O1594C124O1587C130O1596C151O1560C253O1596,,
timer-event-end,V8.RecompileSynchronous,7728969
timer-event-start,V8.Execute,7746386
timer-event-end,V8.Execute,7746609
timer-event-start,V8.Execute,7758175
timer-event-end,V8.Execute,7758401
timer-event-start,V8.Execute,7776456
timer-event-end,V8.Execute,7776677
timer-event-start,V8.Execute,7788445
timer-event-end,V8.Execute,7788682
timer-event-start,V8.Execute,7806787
timer-event-end,V8.Execute,7807017
timer-event-start,V8.Execute,7818646
timer-event-end,V8.Execute,7818876
timer-event-start,V8.Execute,7836856
timer-event-end,V8.Execute,7837094
timer-event-start,V8.Execute,7848653
timer-event-end,V8.Execute,7848879
timer-event-start,V8.Execute,7866690
timer-event-end,V8.Execute,7866916
timer-event-start,V8.Execute,7878370
timer-event-end,V8.Execute,7878595
timer-event-start,V8.GCScavenger,7881410
timer-event-start,V8.GCScavengerForeground,7881420
timer-event-end,V8.GCScavengerForeground,7883422
timer-event-end,V8.GCScavenger,7883431
timer-event-start,V8.Execute,7900761
timer-event-end,V8.Execute,7900989
timer-event-start,V8.Execute,7912669
timer-event-end,V8.Execute,7912898
timer-event-start,V8.Execute,7930578
timer-event-end,V8.Execute,7930793
timer-event-start,V8.Execute,7942205
timer-event-end,V8.Execute,7942427
timer-event-start,V8.Execute,7960183
timer-event-end,V8.Execute,7960397
timer-event-start,V8.Execute,7971874
timer-event-end,V8.Execute,7972092
timer-event-start,V8.Execute,7989890
timer-event-end,V8.Execute,7990105
timer-event-start,V8.Execute,8001577
timer-event-end,V8.Execute,8001796
timer-event-start,V8.Execute,8019583
timer-event-end,V8.Execute,8019800
timer-event-start,V8.Execute,8031286
timer-event-end,V8.Execute,8031505
timer-event-start,V8.GCScavenger,8034596
timer-event-start,V8.GCScavengerForeground,8034606
timer-event-end,V8.GCScavengerForeground,8036360
timer-event-end,V8.GCScavenger,8036369
timer-event-start,V8.Execute,8053498
timer-event-end,V8.Execute,8053722
timer-event-start,V8.Execute,8065233
timer-event-end,V8.Execute,8065452
timer-event-start,V8.Execute,8083380
timer-event-end,V8.Execute,8083600
timer-event-start,V8.Execute,8095094
timer-event-end,V8.Execute,8095314
timer-event-start,V8.Execute,8113093
timer-event-end,V8.Execute,8113307
timer-event-start,V8.Execute,8124798
timer-event-end,V8.Execute,8125016
timer-event-start,V8.Execute,8142499
timer-event-end,V8.Execute,8142716
timer-event-start,V8.Execute,8154153
timer-event-end,V8.Execute,8154373
timer-event-start,V8.Execute,8171706
timer-event-end,V8.Execute,8171921
timer-event-start,V8.Execute,8183364
timer-event-end,V8.Execute,8183584
timer-event-start,V8.GCScavenger,8188518
timer-event-start,V8.GCScavengerForeground,8188528
timer-event-end,V8.GCScavengerForeground,8189957
timer-event-end,V8.GCScavenger,8189966
timer-event-start,V8.Execute,8205408
timer-event-end,V8.Execute,8205648
timer-event-start,V8.Execute,8217345
timer-event-end,V8.Execute,8217570
timer-event-start,V8.Execute,8235576
timer-event-end,V8.Execute,8235818
timer-event-start,V8.Execute,8247561
timer-event-end,V8.Execute,8247790
timer-event-start,V8.Execute,8265983
timer-event-end,V8.Execute,8266212
timer-event-start,V8.Execute,8278033
timer-event-end,V8.Execute,8278275
timer-event-start,V8.Execute,8296527
timer-event-end,V8.Execute,8296764
timer-event-start,V8.Execute,8308583
timer-event-end,V8.Execute,8308826
timer-event-start,V8.Execute,8326535
timer-event-end,V8.Execute,8326766
timer-event-start,V8.Execute,8338405
timer-event-end,V8.Execute,8338640
timer-event-start,V8.GCScavenger,8345749
timer-event-start,V8.GCScavengerForeground,8345759
timer-event-end,V8.GCScavengerForeground,8347778
timer-event-end,V8.GCScavenger,8347786
timer-event-start,V8.Execute,8360993
timer-event-end,V8.Execute,8361229
timer-event-start,V8.Execute,8372682
timer-event-end,V8.Execute,8372903
timer-event-start,V8.Execute,8390009
timer-event-end,V8.Execute,8390209
timer-event-start,V8.Execute,8401045
timer-event-end,V8.Execute,8401248
timer-event-start,V8.Execute,8417491
timer-event-end,V8.Execute,8417693
timer-event-start,V8.Execute,8428561
timer-event-end,V8.Execute,8428776
timer-event-start,V8.Execute,8445555
timer-event-end,V8.Execute,8445780
timer-event-start,V8.Execute,8456854
timer-event-end,V8.Execute,8457061
timer-event-start,V8.Execute,8473340
timer-event-end,V8.Execute,8473540
timer-event-start,V8.Execute,8484209
timer-event-end,V8.Execute,8484415
timer-event-start,V8.GCScavenger,8491860
timer-event-start,V8.GCScavengerForeground,8491870
timer-event-end,V8.GCScavengerForeground,8493577
timer-event-end,V8.GCScavenger,8493585
timer-event-start,V8.Execute,8504618
timer-event-end,V8.Execute,8504824
timer-event-start,V8.Execute,8515409
timer-event-end,V8.Execute,8515610
timer-event-start,V8.Execute,8531917
timer-event-end,V8.Execute,8532115
timer-event-start,V8.Execute,8542692
timer-event-end,V8.Execute,8542910
timer-event-start,V8.Execute,8559177
timer-event-end,V8.Execute,8559378
timer-event-start,V8.Execute,8569938
timer-event-end,V8.Execute,8570140
timer-event-start,V8.Execute,8586551
timer-event-end,V8.Execute,8586753
timer-event-start,V8.Execute,8597445
timer-event-end,V8.Execute,8597658
timer-event-start,V8.Execute,8615419
timer-event-end,V8.Execute,8615642
timer-event-start,V8.Execute,8627161
timer-event-end,V8.Execute,8627401
timer-event-start,V8.GCScavenger,8638014
timer-event-start,V8.GCScavengerForeground,8638026
timer-event-end,V8.GCScavengerForeground,8639345
timer-event-end,V8.GCScavenger,8639355
timer-event-start,V8.Execute,8648994
timer-event-end,V8.Execute,8649221
timer-event-start,V8.Execute,8660707
timer-event-end,V8.Execute,8660927
timer-event-start,V8.Execute,8677949
timer-event-end,V8.Execute,8678151
timer-event-start,V8.Execute,8688959
timer-event-end,V8.Execute,8689185
timer-event-start,V8.Execute,8706940
timer-event-end,V8.Execute,8707159
timer-event-start,V8.Execute,8718592
timer-event-end,V8.Execute,8718829
timer-event-start,V8.Execute,8736630
timer-event-end,V8.Execute,8736849
timer-event-start,V8.Execute,8748416
timer-event-end,V8.Execute,8748638
timer-event-start,V8.Execute,8766434
timer-event-end,V8.Execute,8766654
timer-event-start,V8.Execute,8778169
timer-event-end,V8.Execute,8778394
timer-event-start,V8.GCScavenger,8791331
timer-event-start,V8.GCScavengerForeground,8791345
timer-event-end,V8.GCScavengerForeground,8792543
timer-event-end,V8.GCScavenger,8792551
timer-event-start,V8.Execute,8799826
timer-event-end,V8.Execute,8800059
timer-event-start,V8.Execute,8811679
timer-event-end,V8.Execute,8811904
timer-event-start,V8.Execute,8829559
timer-event-end,V8.Execute,8829775
timer-event-start,V8.Execute,8840965
timer-event-end,V8.Execute,8841170
timer-event-start,V8.Execute,8857414
timer-event-end,V8.Execute,8857611
timer-event-start,V8.Execute,8868355
timer-event-end,V8.Execute,8868555
timer-event-start,V8.Execute,8884761
timer-event-end,V8.Execute,8884960
timer-event-start,V8.Execute,8895614
timer-event-end,V8.Execute,8895823
timer-event-start,V8.Execute,8912097
timer-event-end,V8.Execute,8912298
timer-event-start,V8.Execute,8923483
timer-event-end,V8.Execute,8923708
timer-event-start,V8.GCScavenger,8937449
timer-event-start,V8.GCScavengerForeground,8937461
timer-event-end,V8.GCScavengerForeground,8939210
timer-event-end,V8.GCScavenger,8939219
timer-event-start,V8.GCIncrementalMarkingStart,8941167
timer-event-end,V8.GCIncrementalMarkingStart,8941409
timer-event-start,V8.GCIncrementalMarking,8942009
timer-event-end,V8.GCIncrementalMarking,8942176
timer-event-start,V8.GCIncrementalMarking,8942626
timer-event-end,V8.GCIncrementalMarking,8942782
timer-event-start,V8.Execute,8946134
timer-event-end,V8.Execute,8946379
timer-event-start,V8.GCIncrementalMarking,8946784
timer-event-end,V8.GCIncrementalMarking,8946893
timer-event-start,V8.GCIncrementalMarkingFinalize,8946901
timer-event-end,V8.GCIncrementalMarkingFinalize,8946971
timer-event-start,V8.GCIncrementalMarking,8947471
timer-event-end,V8.GCIncrementalMarking,8947557
timer-event-start,V8.GCFinalizeMC,8947573
timer-event-start,V8.GCFinalizeMCForeground,8947577
timer-event-end,V8.GCFinalizeMCForeground,8974010
timer-event-end,V8.GCFinalizeMC,8974041
timer-event-start,V8.Execute,8986400
timer-event-end,V8.Execute,8986610
timer-event-start,V8.Execute,9002859
timer-event-end,V8.Execute,9003057
timer-event-start,V8.Execute,9013949
timer-event-end,V8.Execute,9014157
timer-event-start,V8.Execute,9030622
timer-event-end,V8.Execute,9030849
timer-event-start,V8.Execute,9042292
timer-event-end,V8.Execute,9042512
timer-event-start,V8.Execute,9060352
timer-event-end,V8.Execute,9060578
timer-event-start,V8.Execute,9071437
timer-event-end,V8.Execute,9071641
timer-event-start,V8.Execute,9088059
timer-event-end,V8.Execute,9088259
timer-event-start,V8.Execute,9099591
timer-event-end,V8.Execute,9099822
timer-event-start,V8.Execute,9117594
timer-event-end,V8.Execute,9117812
timer-event-start,V8.GCScavenger,9124314
timer-event-start,V8.GCScavengerForeground,9124325
timer-event-end,V8.GCScavengerForeground,9126143
timer-event-end,V8.GCScavenger,9126152
timer-event-start,V8.Execute,9133768
timer-event-end,V8.Execute,9134004
timer-event-start,V8.Execute,9151838
timer-event-end,V8.Execute,9152076
timer-event-start,V8.Execute,9163606
timer-event-end,V8.Execute,9163832
timer-event-start,V8.Execute,9181605
timer-event-end,V8.Execute,9181821
timer-event-start,V8.Execute,9193315
timer-event-end,V8.Execute,9193558
timer-event-start,V8.Execute,9211350
timer-event-end,V8.Execute,9211579
timer-event-start,V8.Execute,9223117
timer-event-end,V8.Execute,9223338
timer-event-start,V8.Execute,9241109
timer-event-end,V8.Execute,9241324
timer-event-start,V8.Execute,9252824
timer-event-end,V8.Execute,9253056
timer-event-start,V8.Execute,9270341
timer-event-end,V8.Execute,9270542
timer-event-start,V8.GCScavenger,9276313
timer-event-start,V8.GCScavengerForeground,9276324
timer-event-end,V8.GCScavengerForeground,9290478
timer-event-end,V8.GCScavenger,9290487
timer-event-start,V8.Execute,9302441
timer-event-end,V8.Execute,9302651
timer-event-start,V8.Execute,9318868
timer-event-end,V8.Execute,9319064
timer-event-start,V8.Execute,9330120
timer-event-end,V8.Execute,9330357
timer-event-start,V8.Execute,9347980
timer-event-end,V8.Execute,9348192
timer-event-start,V8.Execute,9359818
timer-event-end,V8.Execute,9360052
timer-event-start,V8.Execute,9377650
timer-event-end,V8.Execute,9377867
timer-event-start,V8.Execute,9389672
timer-event-end,V8.Execute,9389906
timer-event-start,V8.Execute,9408148
timer-event-end,V8.Execute,9408382
timer-event-start,V8.Execute,9420404
timer-event-end,V8.Execute,9420651
timer-event-start,V8.Execute,9438801
timer-event-end,V8.Execute,9439061
timer-event-start,V8.GCScavenger,9445521
timer-event-start,V8.GCScavengerForeground,9445540
timer-event-end,V8.GCScavengerForeground,9447337
timer-event-end,V8.GCScavenger,9447349
timer-event-start,V8.Execute,9455661
timer-event-end,V8.Execute,9455939
timer-event-start,V8.Execute,9472783
timer-event-end,V8.Execute,9472995
timer-event-start,V8.Execute,9483825
timer-event-end,V8.Execute,9484028
timer-event-start,V8.Execute,9500535
timer-event-end,V8.Execute,9500738
timer-event-start,V8.Execute,9511996
timer-event-end,V8.Execute,9512226
timer-event-start,V8.Execute,9530164
timer-event-end,V8.Execute,9530427
timer-event-start,V8.Execute,9541966
timer-event-end,V8.Execute,9542192
timer-event-start,V8.Execute,9560169
timer-event-end,V8.Execute,9560412
timer-event-start,V8.Execute,9571219
timer-event-end,V8.Execute,9571426
timer-event-start,V8.Execute,9587998
timer-event-end,V8.Execute,9588201
timer-event-start,V8.GCScavenger,9594299
timer-event-start,V8.GCScavengerForeground,9594310
timer-event-end,V8.GCScavengerForeground,9595927
timer-event-end,V8.GCScavenger,9595935
timer-event-start,V8.Execute,9602824
timer-event-end,V8.Execute,9603043
timer-event-start,V8.Execute,9619463
timer-event-end,V8.Execute,9619664
timer-event-start,V8.Execute,9630324
timer-event-end,V8.Execute,9630524
timer-event-start,V8.Execute,9646732
timer-event-end,V8.Execute,9646940
timer-event-start,V8.Execute,9657512
timer-event-end,V8.Execute,9657715
timer-event-start,V8.Execute,9673996
timer-event-end,V8.Execute,9674195
timer-event-start,V8.Execute,9684777
timer-event-end,V8.Execute,9684979
timer-event-start,V8.Execute,9701225
timer-event-end,V8.Execute,9701424
timer-event-start,V8.Execute,9712058
timer-event-end,V8.Execute,9712265
timer-event-start,V8.Execute,9728487
timer-event-end,V8.Execute,9728685
timer-event-start,V8.GCScavenger,9735162
timer-event-start,V8.GCScavengerForeground,9735173
timer-event-end,V8.GCScavengerForeground,9736531
timer-event-end,V8.GCScavenger,9736538
timer-event-start,V8.Execute,9743106
timer-event-end,V8.Execute,9743328
timer-event-start,V8.Execute,9759848
timer-event-end,V8.Execute,9760048
timer-event-start,V8.Execute,9770800
timer-event-end,V8.Execute,9771008
timer-event-start,V8.Execute,9787522
timer-event-end,V8.Execute,9787725
timer-event-start,V8.Execute,9798556
timer-event-end,V8.Execute,9798762
timer-event-start,V8.Execute,9815293
timer-event-end,V8.Execute,9815502
timer-event-start,V8.Execute,9826253
timer-event-end,V8.Execute,9826464
timer-event-start,V8.Execute,9842914
timer-event-end,V8.Execute,9843116
timer-event-start,V8.Execute,9853992
timer-event-end,V8.Execute,9854197
timer-event-start,V8.Execute,9870732
timer-event-end,V8.Execute,9870948
timer-event-start,V8.GCScavenger,9878362
timer-event-start,V8.GCScavengerForeground,9878374
timer-event-end,V8.GCScavengerForeground,9879926
timer-event-end,V8.GCScavenger,9879935
timer-event-start,V8.Execute,9885541
timer-event-end,V8.Execute,9885764
timer-event-start,V8.Execute,9902320
timer-event-end,V8.Execute,9902519
timer-event-start,V8.Execute,9913303
timer-event-end,V8.Execute,9913527
timer-event-start,V8.Execute,9930015
timer-event-end,V8.Execute,9930216
timer-event-start,V8.Execute,9941138
timer-event-end,V8.Execute,9941362
timer-event-start,V8.Execute,9958701
timer-event-end,V8.Execute,9958925
timer-event-start,V8.Execute,9969617
timer-event-end,V8.Execute,9969820
timer-event-start,V8.Execute,9986295
timer-event-end,V8.Execute,9986500
timer-event-start,V8.Execute,9997193
timer-event-end,V8.Execute,9997395
timer-event-start,V8.Execute,10013761
timer-event-end,V8.Execute,10013962
timer-event-start,V8.GCScavenger,10021681
timer-event-start,V8.GCScavengerForeground,10021692
timer-event-end,V8.GCScavengerForeground,10023129
timer-event-end,V8.GCScavenger,10023138
timer-event-start,V8.Execute,10028290
timer-event-end,V8.Execute,10028520
timer-event-start,V8.Execute,10044964
timer-event-end,V8.Execute,10045162
timer-event-start,V8.Execute,10055732
timer-event-end,V8.Execute,10055936
timer-event-start,V8.Execute,10072184
timer-event-end,V8.Execute,10072384
timer-event-start,V8.Execute,10082941
timer-event-end,V8.Execute,10083141
timer-event-start,V8.Execute,10099426
timer-event-end,V8.Execute,10099625
timer-event-start,V8.Execute,10110165
timer-event-end,V8.Execute,10110366
timer-event-start,V8.Execute,10126664
timer-event-end,V8.Execute,10126891
timer-event-start,V8.Execute,10137452
timer-event-end,V8.Execute,10137653
timer-event-start,V8.Execute,10153912
timer-event-end,V8.Execute,10154110
timer-event-start,V8.GCScavenger,10161900
timer-event-start,V8.GCScavengerForeground,10161911
timer-event-end,V8.GCScavengerForeground,10163931
timer-event-end,V8.GCScavenger,10163940
timer-event-start,V8.Execute,10169033
timer-event-end,V8.Execute,10169258
timer-event-start,V8.Execute,10185602
timer-event-end,V8.Execute,10185798
timer-event-start,V8.Execute,10196396
timer-event-end,V8.Execute,10196606
timer-event-start,V8.Execute,10212901
timer-event-end,V8.Execute,10213101
timer-event-start,V8.Execute,10223715
timer-event-end,V8.Execute,10223922
timer-event-start,V8.Execute,10240381
timer-event-end,V8.Execute,10240592
timer-event-start,V8.Execute,10251221
timer-event-end,V8.Execute,10251423
timer-event-start,V8.Execute,10267681
timer-event-end,V8.Execute,10267881
timer-event-start,V8.Execute,10278500
timer-event-end,V8.Execute,10278759
timer-event-start,V8.Execute,10295143
timer-event-end,V8.Execute,10295345
timer-event-start,V8.GCScavenger,10303278
timer-event-start,V8.GCScavengerForeground,10303288
timer-event-end,V8.GCScavengerForeground,10305449
timer-event-end,V8.GCScavenger,10305457
timer-event-start,V8.Execute,10310560
timer-event-end,V8.Execute,10310782
timer-event-start,V8.Execute,10327115
timer-event-end,V8.Execute,10327310
timer-event-start,V8.Execute,10337835
timer-event-end,V8.Execute,10338036
timer-event-start,V8.Execute,10354342
timer-event-end,V8.Execute,10354549
timer-event-start,V8.Execute,10365167
timer-event-end,V8.Execute,10365369
timer-event-start,V8.Execute,10381639
timer-event-end,V8.Execute,10381837
timer-event-start,V8.Execute,10392404
timer-event-end,V8.Execute,10392606
timer-event-start,V8.Execute,10408960
timer-event-end,V8.Execute,10409163
timer-event-start,V8.Execute,10419726
timer-event-end,V8.Execute,10419926
timer-event-start,V8.Execute,10436264
timer-event-end,V8.Execute,10436465
timer-event-start,V8.GCScavenger,10444646
timer-event-start,V8.GCScavengerForeground,10444658
timer-event-end,V8.GCScavengerForeground,10446317
timer-event-end,V8.GCScavenger,10446324
timer-event-start,V8.Execute,10451160
timer-event-end,V8.Execute,10451384
timer-event-start,V8.Execute,10467745
timer-event-end,V8.Execute,10467944
timer-event-start,V8.Execute,10478510
timer-event-end,V8.Execute,10478713
timer-event-start,V8.Execute,10494962
timer-event-end,V8.Execute,10495159
timer-event-start,V8.Execute,10505668
timer-event-end,V8.Execute,10505864
timer-event-start,V8.Execute,10522059
timer-event-end,V8.Execute,10522261
timer-event-start,V8.Execute,10532887
timer-event-end,V8.Execute,10533090
timer-event-start,V8.Execute,10549362
timer-event-end,V8.Execute,10549561
timer-event-start,V8.Execute,10560198
timer-event-end,V8.Execute,10560403
timer-event-start,V8.Execute,10576649
timer-event-end,V8.Execute,10576848
timer-event-start,V8.GCScavenger,10585180
timer-event-start,V8.GCScavengerForeground,10585191
timer-event-end,V8.GCScavengerForeground,10587264
timer-event-end,V8.GCScavenger,10587272
timer-event-start,V8.Execute,10591726
timer-event-end,V8.Execute,10591956
timer-event-start,V8.Execute,10608332
timer-event-end,V8.Execute,10608530
timer-event-start,V8.Execute,10619128
timer-event-end,V8.Execute,10619329
timer-event-start,V8.Execute,10635688
timer-event-end,V8.Execute,10635896
timer-event-start,V8.Execute,10646503
timer-event-end,V8.Execute,10646709
timer-event-start,V8.Execute,10662861
timer-event-end,V8.Execute,10663054
timer-event-start,V8.Execute,10673491
timer-event-end,V8.Execute,10673690
timer-event-start,V8.Execute,10689995
timer-event-end,V8.Execute,10690215
timer-event-start,V8.Execute,10701547
timer-event-end,V8.Execute,10701763
timer-event-start,V8.Execute,10719019
timer-event-end,V8.Execute,10719230
timer-event-start,V8.GCScavenger,10728436
timer-event-start,V8.GCScavengerForeground,10728448
timer-event-end,V8.GCScavengerForeground,10729941
timer-event-end,V8.GCScavenger,10729951
timer-event-start,V8.Execute,10734691
timer-event-end,V8.Execute,10734952
timer-event-start,V8.Execute,10752529
timer-event-end,V8.Execute,10752741
timer-event-start,V8.Execute,10763938
timer-event-end,V8.Execute,10764139
timer-event-start,V8.Execute,10780789
timer-event-end,V8.Execute,10781009
timer-event-start,V8.Execute,10792562
timer-event-end,V8.Execute,10792791
timer-event-start,V8.Execute,10810689
timer-event-end,V8.Execute,10810917
timer-event-start,V8.Execute,10821793
timer-event-end,V8.Execute,10821997
timer-event-start,V8.Execute,10838503
timer-event-end,V8.Execute,10838710
timer-event-start,V8.Execute,10849450
timer-event-end,V8.Execute,10849677
timer-event-start,V8.Execute,10866172
timer-event-end,V8.Execute,10866372
timer-event-start,V8.GCScavenger,10874979
timer-event-start,V8.GCScavengerForeground,10874993
timer-event-end,V8.GCScavengerForeground,10876791
timer-event-end,V8.GCScavenger,10876814
timer-event-start,V8.Execute,10884297
timer-event-end,V8.Execute,10884612
timer-event-start,V8.Execute,10905063
timer-event-end,V8.Execute,10905278
timer-event-start,V8.Execute,10915982
timer-event-end,V8.Execute,10916189
timer-event-start,V8.Execute,10932540
timer-event-end,V8.Execute,10932739
timer-event-start,V8.Execute,10943397
timer-event-end,V8.Execute,10943616
timer-event-start,V8.Execute,10960276
timer-event-end,V8.Execute,10960494
timer-event-start,V8.Execute,10971411
timer-event-end,V8.Execute,10971668
timer-event-start,V8.Execute,10989090
timer-event-end,V8.Execute,10989350
timer-event-start,V8.Execute,11001315
timer-event-end,V8.Execute,11001571
timer-event-start,V8.Execute,11019930
timer-event-end,V8.Execute,11020176
timer-event-start,V8.GCScavenger,11029562
timer-event-start,V8.GCScavengerForeground,11029581
timer-event-end,V8.GCScavengerForeground,11031170
timer-event-end,V8.GCScavenger,11031196
timer-event-start,V8.Execute,11038356
timer-event-end,V8.Execute,11038730
timer-event-start,V8.Execute,11058376
timer-event-end,V8.Execute,11058592
timer-event-start,V8.Execute,11069847
timer-event-end,V8.Execute,11070118
timer-event-start,V8.Execute,11088557
timer-event-end,V8.Execute,11088820
timer-event-start,V8.Execute,11100716
timer-event-end,V8.Execute,11100994
timer-event-start,V8.Execute,11119962
timer-event-end,V8.Execute,11120337
timer-event-start,V8.Execute,11132320
timer-event-end,V8.Execute,11132567
timer-event-start,V8.Execute,11151130
timer-event-end,V8.Execute,11151365
timer-event-start,V8.Execute,11163193
timer-event-end,V8.Execute,11163429
timer-event-start,V8.Execute,11181614
timer-event-end,V8.Execute,11181843
timer-event-start,V8.GCScavenger,11191268
timer-event-start,V8.GCScavengerForeground,11191285
timer-event-end,V8.GCScavengerForeground,11193384
timer-event-end,V8.GCScavenger,11193409
timer-event-start,V8.Execute,11200494
timer-event-end,V8.Execute,11200796
timer-event-start,V8.Execute,11220280
timer-event-end,V8.Execute,11220485
timer-event-start,V8.Execute,11231933
timer-event-end,V8.Execute,11232164
timer-event-start,V8.Execute,11249934
timer-event-end,V8.Execute,11250153
timer-event-start,V8.Execute,11261854
timer-event-end,V8.Execute,11262084
timer-event-start,V8.Execute,11279930
timer-event-end,V8.Execute,11280156
timer-event-start,V8.Execute,11291664
timer-event-end,V8.Execute,11291891
timer-event-start,V8.Execute,11309599
timer-event-end,V8.Execute,11309833
timer-event-start,V8.Execute,11321361
timer-event-end,V8.Execute,11321597
timer-event-start,V8.Execute,11339678
timer-event-end,V8.Execute,11339906
timer-event-start,V8.GCScavenger,11348946
timer-event-start,V8.GCScavengerForeground,11348957
timer-event-end,V8.GCScavengerForeground,11351026
timer-event-end,V8.GCScavenger,11351039
timer-event-start,V8.Execute,11355997
timer-event-end,V8.Execute,11356255
timer-event-start,V8.Execute,11374321
timer-event-end,V8.Execute,11374556
timer-event-start,V8.Execute,11386211
timer-event-end,V8.Execute,11386440
timer-event-start,V8.Execute,11404188
timer-event-end,V8.Execute,11404401
timer-event-start,V8.Execute,11415823
timer-event-end,V8.Execute,11416040
timer-event-start,V8.Execute,11434050
timer-event-end,V8.Execute,11434278
timer-event-start,V8.Execute,11445848
timer-event-end,V8.Execute,11446075
timer-event-start,V8.Execute,11463910
timer-event-end,V8.Execute,11464129
timer-event-start,V8.Execute,11475587
timer-event-end,V8.Execute,11475814
timer-event-start,V8.Execute,11493607
timer-event-end,V8.Execute,11493826
timer-event-start,V8.GCScavenger,11503075
timer-event-start,V8.GCScavengerForeground,11503086
timer-event-end,V8.GCScavengerForeground,11505067
timer-event-end,V8.GCScavenger,11505077
timer-event-start,V8.Execute,11509809
timer-event-end,V8.Execute,11510056
timer-event-start,V8.Execute,11526945
timer-event-end,V8.Execute,11527150
timer-event-start,V8.Execute,11537770
timer-event-end,V8.Execute,11537995
timer-event-start,V8.Execute,11555786
timer-event-end,V8.Execute,11556000
timer-event-start,V8.Execute,11567184
timer-event-end,V8.Execute,11567391
timer-event-start,V8.Execute,11583737
timer-event-end,V8.Execute,11583934
timer-event-start,V8.Execute,11594484
timer-event-end,V8.Execute,11594697
timer-event-start,V8.Execute,11610964
timer-event-end,V8.Execute,11611168
timer-event-start,V8.Execute,11621717
timer-event-end,V8.Execute,11621921
timer-event-start,V8.Execute,11638190
timer-event-end,V8.Execute,11638390
timer-event-start,V8.GCScavenger,11646898
timer-event-start,V8.GCScavengerForeground,11646911
timer-event-end,V8.GCScavengerForeground,11648553
timer-event-end,V8.GCScavenger,11648574
timer-event-start,V8.Execute,11656517
timer-event-end,V8.Execute,11657078
timer-event-start,V8.Execute,11676061
timer-event-end,V8.Execute,11676283
timer-event-start,V8.Execute,11687737
timer-event-end,V8.Execute,11687958
timer-event-start,V8.Execute,11705480
timer-event-end,V8.Execute,11705695
timer-event-start,V8.Execute,11717201
timer-event-end,V8.Execute,11717421
timer-event-start,V8.Execute,11735223
timer-event-end,V8.Execute,11735442
timer-event-start,V8.Execute,11747090
timer-event-end,V8.Execute,11747312
timer-event-start,V8.Execute,11765136
timer-event-end,V8.Execute,11765350
timer-event-start,V8.Execute,11777021
timer-event-end,V8.Execute,11777249
timer-event-start,V8.Execute,11795200
timer-event-end,V8.Execute,11795423
timer-event-start,V8.GCScavenger,11804725
timer-event-start,V8.GCScavengerForeground,11804743
timer-event-end,V8.GCScavengerForeground,11806288
timer-event-end,V8.GCScavenger,11806300
timer-event-start,V8.Execute,11810704
timer-event-end,V8.Execute,11811068
timer-event-start,V8.Execute,11832624
timer-event-end,V8.Execute,11832868
timer-event-start,V8.Execute,11844654
timer-event-end,V8.Execute,11844912
timer-event-start,V8.Execute,11863210
timer-event-end,V8.Execute,11863443
timer-event-start,V8.Execute,11875420
timer-event-end,V8.Execute,11875659
timer-event-start,V8.Execute,11893885
timer-event-end,V8.Execute,11894167
timer-event-start,V8.Execute,11906047
timer-event-end,V8.Execute,11906281
timer-event-start,V8.Execute,11924700
timer-event-end,V8.Execute,11924947
timer-event-start,V8.Execute,11936710
timer-event-end,V8.Execute,11936940
timer-event-start,V8.Execute,11955105
timer-event-end,V8.Execute,11955332
timer-event-start,V8.Execute,11967003
timer-event-start,V8.GCScavenger,11967139
timer-event-start,V8.GCScavengerForeground,11967145
timer-event-end,V8.GCScavengerForeground,11968621
timer-event-end,V8.GCScavenger,11968646
timer-event-end,V8.Execute,11971345
timer-event-start,V8.Execute,11994836
timer-event-end,V8.Execute,11995061
timer-event-start,V8.Execute,12006683
timer-event-end,V8.Execute,12006930
timer-event-start,V8.Execute,12024921
timer-event-end,V8.Execute,12025139
timer-event-start,V8.Execute,12036848
timer-event-end,V8.Execute,12037073
timer-event-start,V8.Execute,12054970
timer-event-end,V8.Execute,12055184
timer-event-start,V8.Execute,12066740
timer-event-end,V8.Execute,12066966
timer-event-start,V8.Execute,12084816
timer-event-end,V8.Execute,12085031
timer-event-start,V8.Execute,12096634
timer-event-end,V8.Execute,12096854
timer-event-start,V8.Execute,12114950
timer-event-end,V8.Execute,12115181
timer-event-start,V8.Execute,12126934
timer-event-start,V8.GCScavenger,12127169
timer-event-start,V8.GCScavengerForeground,12127175
timer-event-end,V8.GCScavengerForeground,12128740
timer-event-end,V8.GCScavenger,12128766
timer-event-end,V8.Execute,12131229
timer-event-start,V8.Execute,12156053
timer-event-end,V8.Execute,12156284
timer-event-start,V8.Execute,12168007
timer-event-end,V8.Execute,12168243
timer-event-start,V8.Execute,12186329
timer-event-end,V8.Execute,12186554
timer-event-start,V8.Execute,12198256
timer-event-end,V8.Execute,12198484
timer-event-start,V8.Execute,12216507
timer-event-end,V8.Execute,12216734
timer-event-start,V8.Execute,12228437
timer-event-end,V8.Execute,12228670
timer-event-start,V8.Execute,12246689
timer-event-end,V8.Execute,12246924
timer-event-start,V8.Execute,12258793
timer-event-end,V8.Execute,12259035
timer-event-start,V8.Execute,12276982
timer-event-end,V8.Execute,12277211
timer-event-start,V8.Execute,12288779
timer-event-end,V8.Execute,12288997
timer-event-start,V8.GCScavenger,12289216
timer-event-start,V8.GCScavengerForeground,12289222
timer-event-end,V8.GCScavengerForeground,12291268
timer-event-end,V8.GCScavenger,12291296
timer-event-start,V8.Execute,12313852
timer-event-end,V8.Execute,12314077
timer-event-start,V8.Execute,12325575
timer-event-end,V8.Execute,12325791
timer-event-start,V8.Execute,12343566
timer-event-end,V8.Execute,12343778
timer-event-start,V8.Execute,12355701
timer-event-end,V8.Execute,12355954
timer-event-start,V8.Execute,12374198
timer-event-end,V8.Execute,12374476
timer-event-start,V8.Execute,12386282
timer-event-end,V8.Execute,12386515
timer-event-start,V8.Execute,12404638
timer-event-end,V8.Execute,12404867
timer-event-start,V8.Execute,12416540
timer-event-end,V8.Execute,12416772
timer-event-start,V8.Execute,12437005
timer-event-end,V8.Execute,12437266
timer-event-start,V8.Execute,12449348
timer-event-end,V8.Execute,12449583
timer-event-start,V8.GCScavenger,12450966
timer-event-start,V8.GCScavengerForeground,12450976
timer-event-end,V8.GCScavengerForeground,12452947
timer-event-end,V8.GCScavenger,12452973
timer-event-start,V8.Execute,12476373
timer-event-end,V8.Execute,12476611
timer-event-start,V8.Execute,12488268
timer-event-end,V8.Execute,12488497
timer-event-start,V8.Execute,12506426
timer-event-end,V8.Execute,12506652
timer-event-start,V8.Execute,12518493
timer-event-end,V8.Execute,12518741
timer-event-start,V8.Execute,12536745
timer-event-end,V8.Execute,12536977
timer-event-start,V8.Execute,12548577
timer-event-end,V8.Execute,12548804
timer-event-start,V8.Execute,12565556
timer-event-end,V8.Execute,12565757
timer-event-start,V8.Execute,12576355
timer-event-end,V8.Execute,12576559
timer-event-start,V8.Execute,12592923
timer-event-end,V8.Execute,12593128
timer-event-start,V8.Execute,12603771
timer-event-end,V8.Execute,12603974
timer-event-start,V8.GCScavenger,12606489
timer-event-start,V8.GCScavengerForeground,12606498
timer-event-end,V8.GCScavengerForeground,12608197
timer-event-end,V8.GCScavenger,12608219
timer-event-start,V8.Execute,12630104
timer-event-end,V8.Execute,12630318
timer-event-start,V8.Execute,12641131
timer-event-end,V8.Execute,12641349
timer-event-start,V8.Execute,12657748
timer-event-end,V8.Execute,12657948
timer-event-start,V8.Execute,12668556
timer-event-end,V8.Execute,12668757
timer-event-start,V8.Execute,12685038
timer-event-end,V8.Execute,12685234
timer-event-start,V8.Execute,12695839
timer-event-end,V8.Execute,12696041
timer-event-start,V8.Execute,12712327
timer-event-end,V8.Execute,12712524
timer-event-start,V8.Execute,12723280
timer-event-end,V8.Execute,12723529
timer-event-start,V8.Execute,12742112
timer-event-end,V8.Execute,12742391
timer-event-start,V8.Execute,12754631
timer-event-end,V8.Execute,12754889
timer-event-start,V8.GCScavenger,12758341
timer-event-start,V8.GCScavengerForeground,12758351
timer-event-end,V8.GCScavengerForeground,12759529
timer-event-end,V8.GCScavenger,12759543
timer-event-start,V8.Execute,12775370
timer-event-end,V8.Execute,12775581
timer-event-start,V8.Execute,12789345
timer-event-end,V8.Execute,12789578
timer-event-start,V8.Execute,12808362
timer-event-end,V8.Execute,12808685
timer-event-start,V8.Execute,12819869
timer-event-end,V8.Execute,12820079
timer-event-start,V8.Execute,12838022
timer-event-end,V8.Execute,12838278
timer-event-start,V8.Execute,12850341
timer-event-end,V8.Execute,12850569
timer-event-start,V8.Execute,12867061
timer-event-end,V8.Execute,12867264
timer-event-start,V8.Execute,12877984
timer-event-end,V8.Execute,12878200
timer-event-start,V8.Execute,12894625
timer-event-end,V8.Execute,12894835
timer-event-start,V8.Execute,12905467
timer-event-end,V8.Execute,12905681
timer-event-start,V8.GCScavenger,12910998
timer-event-start,V8.GCScavengerForeground,12911011
timer-event-end,V8.GCScavengerForeground,12912520
timer-event-end,V8.GCScavenger,12912533
timer-event-start,V8.Execute,12926706
timer-event-end,V8.Execute,12926937
timer-event-start,V8.Execute,12938347
timer-event-end,V8.Execute,12938563
timer-event-start,V8.Execute,12954766
timer-event-end,V8.Execute,12954966
timer-event-start,V8.Execute,12965466
timer-event-end,V8.Execute,12965664
timer-event-start,V8.Execute,12981869
timer-event-end,V8.Execute,12982062
timer-event-start,V8.Execute,12992625
timer-event-end,V8.Execute,12992828
timer-event-start,V8.Execute,13009108
timer-event-end,V8.Execute,13009306
timer-event-start,V8.Execute,13019912
timer-event-end,V8.Execute,13020117
timer-event-start,V8.Execute,13036262
timer-event-end,V8.Execute,13036455
timer-event-start,V8.Execute,13047013
timer-event-end,V8.Execute,13047213
timer-event-start,V8.GCScavenger,13053689
timer-event-start,V8.GCScavengerForeground,13053698
timer-event-end,V8.GCScavengerForeground,13055420
timer-event-end,V8.GCScavenger,13055444
timer-event-start,V8.Execute,13071194
timer-event-end,V8.Execute,13071398
timer-event-start,V8.Execute,13081979
timer-event-end,V8.Execute,13082179
timer-event-start,V8.Execute,13098438
timer-event-end,V8.Execute,13098631
timer-event-start,V8.Execute,13109254
timer-event-end,V8.Execute,13109455
timer-event-start,V8.Execute,13125742
timer-event-end,V8.Execute,13125934
timer-event-start,V8.Execute,13136512
timer-event-end,V8.Execute,13136711
timer-event-start,V8.Execute,13152967
timer-event-end,V8.Execute,13153163
timer-event-start,V8.Execute,13163719
timer-event-end,V8.Execute,13163921
timer-event-start,V8.Execute,13180201
timer-event-end,V8.Execute,13180396
timer-event-start,V8.Execute,13190993
timer-event-end,V8.Execute,13191196
timer-event-start,V8.GCScavenger,13198158
timer-event-start,V8.GCScavengerForeground,13198167
timer-event-end,V8.GCScavengerForeground,13199239
timer-event-end,V8.GCScavenger,13199250
timer-event-start,V8.Execute,13210848
timer-event-end,V8.Execute,13211053
timer-event-start,V8.Execute,13221790
timer-event-end,V8.Execute,13221986
timer-event-start,V8.Execute,13238322
timer-event-end,V8.Execute,13238534
timer-event-start,V8.Execute,13249226
timer-event-end,V8.Execute,13249429
timer-event-start,V8.Execute,13265734
timer-event-end,V8.Execute,13265933
timer-event-start,V8.Execute,13276635
timer-event-end,V8.Execute,13276837
timer-event-start,V8.Execute,13293300
timer-event-end,V8.Execute,13293505
timer-event-start,V8.Execute,13304269
timer-event-end,V8.Execute,13304471
timer-event-start,V8.Execute,13322399
timer-event-end,V8.Execute,13322622
timer-event-start,V8.Execute,13334223
timer-event-end,V8.Execute,13334446
timer-event-start,V8.GCScavenger,13345089
timer-event-start,V8.GCScavengerForeground,13345104
timer-event-end,V8.GCScavengerForeground,13346268
timer-event-end,V8.GCScavenger,13346277
timer-event-start,V8.Execute,13355964
timer-event-end,V8.Execute,13356192
timer-event-start,V8.Execute,13367714
timer-event-end,V8.Execute,13367933
timer-event-start,V8.Execute,13385707
timer-event-end,V8.Execute,13385922
timer-event-start,V8.Execute,13397446
timer-event-end,V8.Execute,13397667
timer-event-start,V8.Execute,13415428
timer-event-end,V8.Execute,13415639
timer-event-start,V8.Execute,13427130
timer-event-end,V8.Execute,13427351
timer-event-start,V8.Execute,13445113
timer-event-end,V8.Execute,13445324
timer-event-start,V8.Execute,13456917
timer-event-end,V8.Execute,13457135
timer-event-start,V8.Execute,13474908
timer-event-end,V8.Execute,13475120
timer-event-start,V8.Execute,13486567
timer-event-end,V8.Execute,13486783
timer-event-start,V8.GCScavenger,13499266
timer-event-start,V8.GCScavengerForeground,13499279
timer-event-end,V8.GCScavengerForeground,13500523
timer-event-end,V8.GCScavenger,13500532
timer-event-start,V8.Execute,13508325
timer-event-end,V8.Execute,13508554
timer-event-start,V8.Execute,13520095
timer-event-end,V8.Execute,13520308
timer-event-start,V8.Execute,13536943
timer-event-end,V8.Execute,13537141
timer-event-start,V8.Execute,13547838
timer-event-end,V8.Execute,13548038
timer-event-start,V8.Execute,13564381
timer-event-end,V8.Execute,13564576
timer-event-start,V8.Execute,13575208
timer-event-end,V8.Execute,13575409
timer-event-start,V8.Execute,13591745
timer-event-end,V8.Execute,13591940
timer-event-start,V8.Execute,13602558
timer-event-end,V8.Execute,13602756
timer-event-start,V8.Execute,13619095
timer-event-end,V8.Execute,13619294
timer-event-start,V8.Execute,13630009
timer-event-end,V8.Execute,13630226
timer-event-start,V8.GCScavenger,13643005
timer-event-start,V8.GCScavengerForeground,13643021
timer-event-end,V8.GCScavengerForeground,13644623
timer-event-end,V8.GCScavenger,13644633
timer-event-start,V8.Execute,13651070
timer-event-end,V8.Execute,13651303
timer-event-start,V8.Execute,13662973
timer-event-end,V8.Execute,13663194
timer-event-start,V8.Execute,13681092
timer-event-end,V8.Execute,13681310
timer-event-start,V8.Execute,13693056
timer-event-end,V8.Execute,13693281
timer-event-start,V8.Execute,13711142
timer-event-end,V8.Execute,13711357
timer-event-start,V8.Execute,13722951
timer-event-end,V8.Execute,13723176
timer-event-start,V8.Execute,13741014
timer-event-end,V8.Execute,13741235
timer-event-start,V8.Execute,13752837
timer-event-end,V8.Execute,13753057
timer-event-start,V8.Execute,13770939
timer-event-end,V8.Execute,13771155
timer-event-start,V8.Execute,13782781
timer-event-end,V8.Execute,13783010
timer-event-start,V8.Execute,13800966
timer-event-start,V8.GCScavenger,13801175
timer-event-start,V8.GCScavengerForeground,13801181
timer-event-end,V8.GCScavengerForeground,13802915
timer-event-end,V8.GCScavenger,13802927
timer-event-end,V8.Execute,13804948
timer-event-start,V8.Execute,13817003
timer-event-end,V8.Execute,13817222
timer-event-start,V8.Execute,13835099
timer-event-end,V8.Execute,13835314
timer-event-start,V8.Execute,13846883
timer-event-end,V8.Execute,13847105
timer-event-start,V8.Execute,13864897
timer-event-end,V8.Execute,13865110
timer-event-start,V8.Execute,13876697
timer-event-end,V8.Execute,13876918
timer-event-start,V8.Execute,13894719
timer-event-end,V8.Execute,13894938
timer-event-start,V8.Execute,13906419
timer-event-end,V8.Execute,13906639
timer-event-start,V8.Execute,13924431
timer-event-end,V8.Execute,13924646
timer-event-start,V8.Execute,13936142
timer-event-end,V8.Execute,13936363
timer-event-start,V8.Execute,13954324
timer-event-end,V8.Execute,13954593
timer-event-start,V8.GCScavenger,13954859
timer-event-start,V8.GCScavengerForeground,13954869
timer-event-end,V8.GCScavengerForeground,13956693
timer-event-end,V8.GCScavenger,13956717
timer-event-start,V8.Execute,13975388
timer-event-end,V8.Execute,13975611
timer-event-start,V8.Execute,13992005
timer-event-end,V8.Execute,13992208
timer-event-start,V8.Execute,14002805
timer-event-end,V8.Execute,14003014
timer-event-start,V8.OptimizeCode,14012933
timer-event-start,V8.RecompileSynchronous,14012959
timer-event-end,V8.RecompileSynchronous,14013243
timer-event-start,V8.RecompileConcurrent,14013254
timer-event-end,V8.OptimizeCode,14013292
timer-event-end,V8.RecompileConcurrent,14013769
timer-event-start,V8.RecompileSynchronous,14013793
code-creation,LazyCompile,0,14014138,0x236ca3aee20,290,requiredArguments /home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:143:31,0x281636bce8b8,*
code-source-info,0x236ca3aee20,5,5252,5501,C0O5252C83O5298C118O5500C129O5339C168O5252,,
timer-event-end,V8.RecompileSynchronous,14014200
timer-event-start,V8.Execute,14028021
timer-event-end,V8.Execute,14028216
timer-event-start,V8.Execute,14038755
timer-event-end,V8.Execute,14038966
timer-event-start,V8.Execute,14055103
timer-event-end,V8.Execute,14055308
timer-event-start,V8.Execute,14065791
timer-event-end,V8.Execute,14065989
timer-event-start,V8.Execute,14082151
timer-event-end,V8.Execute,14082345
timer-event-start,V8.Execute,14092885
timer-event-end,V8.Execute,14093088
timer-event-start,V8.Execute,14109287
timer-event-end,V8.Execute,14109497
timer-event-start,V8.GCScavenger,14111197
timer-event-start,V8.GCScavengerForeground,14111207
timer-event-end,V8.GCScavengerForeground,14113343
timer-event-end,V8.GCScavenger,14113368
timer-event-start,V8.Execute,14130547
timer-event-end,V8.Execute,14130786
timer-event-start,V8.Execute,14148696
timer-event-end,V8.Execute,14148945
timer-event-start,V8.Execute,14160604
timer-event-end,V8.Execute,14160833
timer-event-start,V8.Execute,14178564
timer-event-end,V8.Execute,14178787
timer-event-start,V8.Execute,14190577
timer-event-end,V8.Execute,14190817
timer-event-start,V8.Execute,14208486
timer-event-end,V8.Execute,14208706
timer-event-start,V8.Execute,14220265
timer-event-end,V8.Execute,14220493
timer-event-start,V8.Execute,14238188
timer-event-end,V8.Execute,14238404
timer-event-start,V8.Execute,14249819
timer-event-end,V8.Execute,14250039
timer-event-start,V8.Execute,14267612
timer-event-end,V8.Execute,14267822
timer-event-start,V8.GCScavenger,14269570
timer-event-start,V8.GCScavengerForeground,14269580
timer-event-end,V8.GCScavengerForeground,14271561
timer-event-end,V8.GCScavenger,14271572
timer-event-start,V8.Execute,14283825
timer-event-end,V8.Execute,14284063
timer-event-start,V8.Execute,14301218
timer-event-end,V8.Execute,14301412
timer-event-start,V8.Execute,14312000
timer-event-end,V8.Execute,14312201
timer-event-start,V8.Execute,14328366
timer-event-end,V8.Execute,14328560
timer-event-start,V8.Execute,14339789
timer-event-end,V8.Execute,14340015
timer-event-start,V8.Execute,14357268
timer-event-end,V8.Execute,14357487
timer-event-start,V8.Execute,14368944
timer-event-end,V8.Execute,14369162
timer-event-start,V8.Execute,14387113
timer-event-end,V8.Execute,14387343
timer-event-start,V8.Execute,14399067
timer-event-end,V8.Execute,14399301
timer-event-start,V8.Execute,14417258
timer-event-end,V8.Execute,14417482
timer-event-start,V8.GCScavenger,14419429
timer-event-start,V8.GCScavengerForeground,14419441
timer-event-end,V8.GCScavengerForeground,14421145
timer-event-end,V8.GCScavenger,14421153
timer-event-start,V8.Execute,14433592
timer-event-end,V8.Execute,14433833
timer-event-start,V8.Execute,14452209
timer-event-end,V8.Execute,14452443
timer-event-start,V8.Execute,14464351
timer-event-end,V8.Execute,14464598
timer-event-start,V8.Execute,14482710
timer-event-end,V8.Execute,14482956
timer-event-start,V8.Execute,14494668
timer-event-end,V8.Execute,14494916
timer-event-start,V8.Execute,14512914
timer-event-end,V8.Execute,14513144
timer-event-start,V8.Execute,14524838
timer-event-end,V8.Execute,14525074
timer-event-start,V8.Execute,14543368
timer-event-end,V8.Execute,14543610
timer-event-start,V8.Execute,14555341
timer-event-end,V8.Execute,14555571
timer-event-start,V8.Execute,14573514
timer-event-end,V8.Execute,14573743
timer-event-start,V8.GCScavenger,14575606
timer-event-start,V8.GCScavengerForeground,14575617
timer-event-end,V8.GCScavengerForeground,14576890
timer-event-end,V8.GCScavenger,14576900
timer-event-start,V8.Execute,14589136
timer-event-end,V8.Execute,14589383
timer-event-start,V8.Execute,14606597
timer-event-end,V8.Execute,14606804
timer-event-start,V8.Execute,14617438
timer-event-end,V8.Execute,14617650
timer-event-start,V8.Execute,14634089
timer-event-end,V8.Execute,14634318
timer-event-start,V8.Execute,14645746
timer-event-end,V8.Execute,14645979
timer-event-start,V8.Execute,14664048
timer-event-end,V8.Execute,14664282
timer-event-start,V8.Execute,14676104
timer-event-end,V8.Execute,14676338
timer-event-start,V8.Execute,14693962
timer-event-end,V8.Execute,14694177
timer-event-start,V8.Execute,14705570
timer-event-end,V8.Execute,14705784
timer-event-start,V8.Execute,14723320
timer-event-end,V8.Execute,14723538
timer-event-start,V8.GCScavenger,14725394
timer-event-start,V8.GCScavengerForeground,14725403
timer-event-end,V8.GCScavengerForeground,14726894
timer-event-end,V8.GCScavenger,14726904
timer-event-start,V8.Execute,14739125
timer-event-end,V8.Execute,14739359
timer-event-start,V8.Execute,14756445
timer-event-end,V8.Execute,14756640
timer-event-start,V8.Execute,14767242
timer-event-end,V8.Execute,14767446
timer-event-start,V8.Execute,14783573
timer-event-end,V8.Execute,14783765
timer-event-start,V8.Execute,14794214
timer-event-end,V8.Execute,14794411
timer-event-start,V8.Execute,14810529
timer-event-end,V8.Execute,14810723
timer-event-start,V8.Execute,14821255
timer-event-end,V8.Execute,14821451
timer-event-start,V8.Execute,14837522
timer-event-end,V8.Execute,14837718
timer-event-start,V8.Execute,14846041
timer-event-end,V8.Execute,14846198
timer-event-start,V8.Execute,14860368
timer-event-end,V8.Execute,14860521
timer-event-start,V8.Execute,14864502
timer-event-end,V8.Execute,14864542
timer-event-start,V8.Execute,14867273
timer-event-end,V8.Execute,14867291
code-deopt,14867308,5120,0x236ca3aaf40,-1,53703,soft,</home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1366:19>,Insufficient type feedback for construct
timer-event-start,V8.DeoptimizeCode,14867342
timer-event-start,V8.DeoptimizeCode,14867354
timer-event-end,V8.DeoptimizeCode,14867394
timer-event-end,V8.DeoptimizeCode,14867399
code-deopt,14867487,5472,0x236ca3896a0,-1,11448,soft,<file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:302:29>,Insufficient type feedback for generic named access
timer-event-start,V8.DeoptimizeCode,14867511
timer-event-start,V8.DeoptimizeCode,14867521
timer-event-end,V8.DeoptimizeCode,14867537
timer-event-end,V8.DeoptimizeCode,14867541
code-deopt,14867566,6176,0x236ca387e80,-1,8056,soft,<file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:220:19>,Insufficient type feedback for generic named access
timer-event-start,V8.DeoptimizeCode,14867587
timer-event-start,V8.DeoptimizeCode,14867594
timer-event-end,V8.DeoptimizeCode,14867607
timer-event-end,V8.DeoptimizeCode,14867611
timer-event-start,V8.CompileCode,14867634
code-creation,LazyCompile,12,14867713,0xe99842b5f6,32,AssertionError file:///home/yankun/workspace/rust/deno/std/testing/asserts.ts:7:16,0x78e87f48720,~
code-source-info,0xe99842b5f6,16,326,405,C3O326C4O346C10O346C23O370C25O380C31O404,,
timer-event-end,V8.CompileCode,14867740
code-deopt,14867809,8672,0x236ca39b8a0,-1,11065,soft,<file:///home/yankun/workspace/rust/deno/std/http/server.ts:299:41>,Insufficient type feedback for generic named access
timer-event-start,V8.DeoptimizeCode,14867833
timer-event-start,V8.DeoptimizeCode,14867839
timer-event-end,V8.DeoptimizeCode,14867854
timer-event-end,V8.DeoptimizeCode,14867858
code-deopt,14867930,13312,0x236ca38e380,-1,1700,eager,<file:///home/yankun/workspace/rust/deno/std/http/server.ts:50:26>,wrong map
timer-event-start,V8.DeoptimizeCode,14867952
timer-event-start,V8.DeoptimizeCode,14867957
timer-event-end,V8.DeoptimizeCode,14867972
timer-event-end,V8.DeoptimizeCode,14867976
code-deopt,14868007,4512,0x236ca39fa40,-1,615,eager,<file:///home/yankun/workspace/rust/deno/std/http/server.ts:17:12>,wrong map
timer-event-start,V8.DeoptimizeCode,14868024
timer-event-start,V8.DeoptimizeCode,14868029
timer-event-end,V8.DeoptimizeCode,14868043
timer-event-end,V8.DeoptimizeCode,14868047
code-deopt,14868205,5280,0x236ca3a1b60,-1,55125,soft,</home/yankun/workspace/rust/deno/target/debug/build/deno_cli-9ccdd875259e6c52/out/CLI_SNAPSHOT.js:1410:19>,Insufficient type feedback for construct
timer-event-start,V8.DeoptimizeCode,14868231
timer-event-start,V8.DeoptimizeCode,14868237
timer-event-end,V8.DeoptimizeCode,14868251
timer-event-end,V8.DeoptimizeCode,14868255
code-deopt,14868288,1920,0x236ca3aa7c0,-1,14607,soft,<file:///home/yankun/workspace/rust/deno/std/io/bufio.ts:396:22>,Insufficient type feedback for generic named access
timer-event-start,V8.DeoptimizeCode,14868308
timer-event-start,V8.DeoptimizeCode,14868316
timer-event-end,V8.DeoptimizeCode,14868334
timer-event-end,V8.DeoptimizeCode,14868337
timer-event-start,V8.DeoptimizeCode,14868350
timer-event-end,V8.DeoptimizeCode,14868363
timer-event-start,V8.Execute,14870333
timer-event-end,V8.Execute,14870554
timer-event-start,V8.GCScavenger,14873206
timer-event-start,V8.GCScavengerForeground,14873215
timer-event-end,V8.GCScavengerForeground,14874506
timer-event-end,V8.GCScavenger,14874517
timer-event-start,V8.Execute,14904499
timer-event-end,V8.Execute,14904622
