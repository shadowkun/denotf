tests/cases/compiler/restTypeRetainsMappyness.ts(7,8): error TS2345: Argument of type 'Foo<T>[number][]' is not assignable to parameter of type 'Foo<T>'.


==== tests/cases/compiler/restTypeRetainsMappyness.ts (1 errors) ====
    type Foo<T extends any[]> = {
        [P in keyof T]: T[P]
    }
    
    function test<T extends any[]>(fn: (...args: Foo<T>) => void) {
        const arr: Foo<T> = {} as any
        fn(...arr) // Error: Argument of type 'any[]' is not assignable to parameter of type 'Foo<T>'
           ~~~~~~
!!! error TS2345: Argument of type 'Foo<T>[number][]' is not assignable to parameter of type 'Foo<T>'.
    }
    